{"version":3,"file":"Reporting-DIs-1ZVK.js","sources":["../../../resources/js/Components/Common/Reporting/ReportingGroupBySelect.vue","../../../resources/js/Components/Common/Report/ReportCreateModal.vue","../../../resources/js/Components/Common/Report/ReportSaveButton.vue","../../../resources/js/Components/Common/Reporting/ReportingOverview.vue","../../../resources/js/Pages/Reporting.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport SelectDropdown from '@/packages/ui/src/Input/SelectDropdown.vue';\nimport Badge from '@/packages/ui/src/Badge.vue';\nimport { type Component, computed } from 'vue';\n\nconst model = defineModel<string | null>({ default: null });\nconst props = defineProps<{\n    groupByOptions: { value: string; label: string; icon: Component }[];\n}>();\nconst icon = computed(() => {\n    return props.groupByOptions.find((option) => option.value === model.value)\n        ?.icon;\n});\nconst title = computed(() => {\n    return props.groupByOptions.find((option) => option.value === model.value)\n        ?.label;\n});\n</script>\n\n<template>\n    <SelectDropdown\n        v-model=\"model\"\n        :get-key-from-item=\"(item) => item.value\"\n        :get-name-for-item=\"(item) => item.label\"\n        :items=\"groupByOptions\">\n        <template #trigger>\n            <Badge\n                size=\"large\"\n                tag=\"button\"\n                class=\"cursor-pointer hover:bg-card-background transition space-x-5 flex\">\n                <component :is=\"icon\" class=\"h-4 text-text-secondary\"></component>\n                <span> {{ title }} </span>\n            </Badge>\n        </template>\n    </SelectDropdown>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport TextInput from '../../../packages/ui/src/Input/TextInput.vue';\nimport SecondaryButton from '../../../packages/ui/src/Buttons/SecondaryButton.vue';\nimport DialogModal from '@/packages/ui/src/DialogModal.vue';\nimport { ref } from 'vue';\nimport PrimaryButton from '../../../packages/ui/src/Buttons/PrimaryButton.vue';\nimport InputLabel from '../../../packages/ui/src/Input/InputLabel.vue';\nimport type {\n    CreateReportBody,\n    CreateReportBodyProperties,\n} from '@/packages/api/src';\nimport { useMutation } from '@tanstack/vue-query';\nimport { getCurrentOrganizationId } from '@/utils/useUser';\nimport { api } from '@/packages/api/src';\nimport { Checkbox } from '@/packages/ui/src';\nimport DatePicker from '@/packages/ui/src/Input/DatePicker.vue';\nimport { useNotificationsStore } from '@/utils/notification';\n\nconst show = defineModel('show', { default: false });\nconst saving = ref(false);\n\nconst createReportMutation = useMutation({\n    mutationFn: async (report: CreateReportBody) => {\n        const organizationId = getCurrentOrganizationId();\n        if (organizationId === null) {\n            throw new Error('No current organization id - create report');\n        }\n        return await api.createReport(report, {\n            params: {\n                organization: organizationId,\n            },\n        });\n    },\n});\n\nconst props = defineProps<{\n    properties: CreateReportBodyProperties;\n}>();\n\nconst report = ref({\n    name: '',\n    description: '',\n    is_public: true,\n    public_until: null,\n});\n\nconst { handleApiRequestNotifications } = useNotificationsStore();\n\nasync function submit() {\n    await handleApiRequestNotifications(\n        () =>\n            createReportMutation.mutateAsync({\n                ...report.value,\n                properties: { ...props.properties },\n            }),\n        'Success',\n        'Error',\n        () => {\n            report.value = {\n                name: '',\n                description: '',\n                is_public: false,\n                public_until: null,\n            };\n            show.value = false;\n        }\n    );\n}\n</script>\n\n<template>\n    <DialogModal closeable :show=\"show\" @close=\"show = false\">\n        <template #title>\n            <div class=\"flex space-x-2\">\n                <span> Create Report </span>\n            </div>\n        </template>\n\n        <template #content>\n            <div class=\"items-center space-y-4 w-full\">\n                <div class=\"w-full\">\n                    <InputLabel for=\"name\" value=\"Name\" />\n                    <TextInput\n                        id=\"name\"\n                        v-model=\"report.name\"\n                        class=\"mt-1.5 w-full\"></TextInput>\n                </div>\n                <div>\n                    <InputLabel for=\"description\" value=\"Description\" />\n                    <TextInput\n                        id=\"description\"\n                        v-model=\"report.description\"\n                        class=\"mt-1.5 w-full\"></TextInput>\n                </div>\n                <InputLabel value=\"Visibility\" />\n                <div class=\"flex items-center space-x-12\">\n                    <div class=\"flex items-center space-x-3 px-2 py-3\">\n                        <Checkbox\n                            id=\"is_public\"\n                            v-model:checked=\"report.is_public\"></Checkbox>\n                        <InputLabel for=\"is_public\" value=\"Public\" />\n                    </div>\n                    <div\n                        v-if=\"report.is_public\"\n                        class=\"flex items-center space-x-4\">\n                        <div>\n                            <InputLabel for=\"public_until\" value=\"Expires at\" />\n                            <div class=\"text-text-tertiary font-medium\">\n                                (optional)\n                            </div>\n                        </div>\n                        <DatePicker id=\"public_until\"></DatePicker>\n                    </div>\n                </div>\n            </div>\n        </template>\n        <template #footer>\n            <SecondaryButton @click=\"show = false\"> Cancel</SecondaryButton>\n            <PrimaryButton\n                class=\"ms-3\"\n                :class=\"{ 'opacity-25': saving }\"\n                :disabled=\"saving\"\n                @click=\"submit\">\n                Create Report\n            </PrimaryButton>\n        </template>\n    </DialogModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { SecondaryButton } from '@/packages/ui/src';\nimport ReportCreateModal from '@/Components/Common/Report/ReportCreateModal.vue';\nimport { h, ref } from 'vue';\nimport type { CreateReportBodyProperties } from '@/packages/api/src';\nimport { isAllowedToPerformPremiumAction } from '@/utils/billing';\nimport UpgradeModal from '@/Components/Common/UpgradeModal.vue';\nimport { canCreateReports } from '@/utils/permissions';\ndefineProps<{\n    reportProperties: CreateReportBodyProperties;\n}>();\n\nconst showCreateReportModal = ref(false);\nconst showPremiumModal = ref(false);\nconst SaveIcon = h('div', {\n    innerHTML:\n        '<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path d=\"M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z\"/><path d=\"M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7M7 3v4a1 1 0 0 0 1 1h7\"/></g></svg>',\n});\n\nfunction onSaveReportClick() {\n    if (isAllowedToPerformPremiumAction()) {\n        showCreateReportModal.value = true;\n    } else {\n        showPremiumModal.value = true;\n    }\n}\n</script>\n\n<template>\n    <ReportCreateModal\n        v-model:show=\"showCreateReportModal\"\n        :properties=\"reportProperties\"></ReportCreateModal>\n    <UpgradeModal v-model:show=\"showPremiumModal\">\n        <strong>Sharable Reports</strong> is only available in solidtime\n        Professional.\n    </UpgradeModal>\n    <SecondaryButton\n        v-if=\"canCreateReports()\"\n        :icon=\"SaveIcon\"\n        @click=\"onSaveReportClick\"\n        >Save Report</SecondaryButton\n    >\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport {\n    ChartBarIcon,\n    CheckCircleIcon,\n    TagIcon,\n    UserGroupIcon,\n} from '@heroicons/vue/20/solid';\nimport { FolderIcon } from '@heroicons/vue/16/solid';\nimport BillableIcon from '@/packages/ui/src/Icons/BillableIcon.vue';\nimport { getOrganizationCurrencyString } from '@/utils/money';\nimport {\n    formatHumanReadableDuration,\n    getDayJsInstance,\n    getLocalizedDayJs,\n} from '@/packages/ui/src/utils/time';\nimport { formatCents } from '@/packages/ui/src/utils/money';\nimport ReportingTabNavbar from '@/Components/Common/Reporting/ReportingTabNavbar.vue';\nimport ReportingExportButton from '@/Components/Common/Reporting/ReportingExportButton.vue';\nimport TaskMultiselectDropdown from '@/Components/Common/Task/TaskMultiselectDropdown.vue';\nimport ClientMultiselectDropdown from '@/Components/Common/Client/ClientMultiselectDropdown.vue';\nimport ReportingRow from '@/Components/Common/Reporting/ReportingRow.vue';\nimport MemberMultiselectDropdown from '@/Components/Common/Member/MemberMultiselectDropdown.vue';\nimport ReportingFilterBadge from '@/Components/Common/Reporting/ReportingFilterBadge.vue';\nimport PageTitle from '@/Components/Common/PageTitle.vue';\nimport ProjectMultiselectDropdown from '@/Components/Common/Project/ProjectMultiselectDropdown.vue';\nimport ReportingChart from '@/Components/Common/Reporting/ReportingChart.vue';\nimport SelectDropdown from '../../../packages/ui/src/Input/SelectDropdown.vue';\nimport ReportingGroupBySelect from '@/Components/Common/Reporting/ReportingGroupBySelect.vue';\nimport MainContainer from '@/packages/ui/src/MainContainer.vue';\nimport DateRangePicker from '@/packages/ui/src/Input/DateRangePicker.vue';\nimport ReportingExportModal from '@/Components/Common/Reporting/ReportingExportModal.vue';\nimport ReportSaveButton from '@/Components/Common/Report/ReportSaveButton.vue';\nimport TagDropdown from '@/packages/ui/src/Tag/TagDropdown.vue';\nimport ReportingPieChart from '@/Components/Common/Reporting/ReportingPieChart.vue';\n\nimport { computed, type ComputedRef, inject, onMounted, ref } from 'vue';\nimport { type GroupingOption, useReportingStore } from '@/utils/useReporting';\nimport { storeToRefs } from 'pinia';\nimport {\n    type AggregatedTimeEntriesQueryParams,\n    api,\n    type CreateReportBodyProperties,\n    type Organization,\n} from '@/packages/api/src';\nimport {\n    getCurrentMembershipId,\n    getCurrentOrganizationId,\n    getCurrentRole,\n} from '@/utils/useUser';\nimport { useTagsStore } from '@/utils/useTags';\nimport { useSessionStorage, useStorage } from '@vueuse/core';\nimport { useNotificationsStore } from '@/utils/notification';\nimport type { ExportFormat } from '@/types/reporting';\nimport { getRandomColorWithSeed } from '@/packages/ui/src/utils/color';\nimport { useProjectsStore } from '@/utils/useProjects';\n\nconst { handleApiRequestNotifications } = useNotificationsStore();\n\nconst startDate = useSessionStorage<string>(\n    'reporting-start-date',\n    getLocalizedDayJs(getDayJsInstance()().format()).subtract(14, 'd').format()\n);\nconst endDate = useSessionStorage<string>(\n    'reporting-end-date',\n    getLocalizedDayJs(getDayJsInstance()().format()).format()\n);\nconst selectedTags = ref<string[]>([]);\nconst selectedProjects = ref<string[]>([]);\nconst selectedMembers = ref<string[]>([]);\nconst selectedTasks = ref<string[]>([]);\nconst selectedClients = ref<string[]>([]);\n\nconst billable = ref<'true' | 'false' | null>(null);\n\nconst group = useStorage<GroupingOption>('reporting-group', 'project');\nconst subGroup = useStorage<GroupingOption>('reporting-sub-group', 'task');\n\nconst reportingStore = useReportingStore();\n\nconst { aggregatedGraphTimeEntries, aggregatedTableTimeEntries } =\n    storeToRefs(reportingStore);\n\nconst { groupByOptions } = reportingStore;\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\nfunction getFilterAttributes(): AggregatedTimeEntriesQueryParams {\n    let params: AggregatedTimeEntriesQueryParams = {\n        start: getLocalizedDayJs(startDate.value).startOf('day').utc().format(),\n        end: getLocalizedDayJs(endDate.value).endOf('day').utc().format(),\n    };\n    params = {\n        ...params,\n        member_ids:\n            selectedMembers.value.length > 0\n                ? selectedMembers.value\n                : undefined,\n        project_ids:\n            selectedProjects.value.length > 0\n                ? selectedProjects.value\n                : undefined,\n        task_ids:\n            selectedTasks.value.length > 0 ? selectedTasks.value : undefined,\n        client_ids:\n            selectedClients.value.length > 0\n                ? selectedClients.value\n                : undefined,\n        tag_ids: selectedTags.value.length > 0 ? selectedTags.value : undefined,\n        billable: billable.value !== null ? billable.value : undefined,\n        member_id:\n            getCurrentRole() === 'employee'\n                ? getCurrentMembershipId()\n                : undefined,\n    };\n    return params;\n}\n\nfunction updateGraphReporting() {\n    const params = getFilterAttributes();\n    if (getCurrentRole() === 'employee') {\n        params.member_id = getCurrentMembershipId();\n    }\n    params.fill_gaps_in_time_groups = 'true';\n    params.group = getOptimalGroupingOption(startDate.value, endDate.value);\n    useReportingStore().fetchGraphReporting(params);\n}\n\nfunction updateTableReporting() {\n    const params = getFilterAttributes();\n    if (group.value === subGroup.value) {\n        const fallbackOption = groupByOptions.find(\n            (el) => el.value !== group.value\n        );\n        if (fallbackOption?.value) {\n            subGroup.value = fallbackOption.value;\n        }\n    }\n    if (getCurrentRole() === 'employee') {\n        params.member_id = getCurrentMembershipId();\n    }\n    params.group = group.value;\n    params.sub_group = subGroup.value;\n    useReportingStore().fetchTableReporting(params);\n}\n\nfunction updateReporting() {\n    updateGraphReporting();\n    updateTableReporting();\n}\n\nfunction getOptimalGroupingOption(\n    startDate: string,\n    endDate: string\n): 'day' | 'week' | 'month' {\n    const diffInDays = getDayJsInstance()(endDate).diff(\n        getDayJsInstance()(startDate),\n        'd'\n    );\n\n    if (diffInDays <= 31) {\n        return 'day';\n    } else if (diffInDays <= 200) {\n        return 'week';\n    } else {\n        return 'month';\n    }\n}\n\nonMounted(() => {\n    updateGraphReporting();\n    updateTableReporting();\n});\n\nconst { tags } = storeToRefs(useTagsStore());\n\nasync function createTag(tag: string) {\n    return await useTagsStore().createTag(tag);\n}\n\nconst reportProperties = computed(() => {\n    return {\n        ...getFilterAttributes(),\n        group: group.value,\n        sub_group: subGroup.value,\n        history_group: getOptimalGroupingOption(startDate.value, endDate.value),\n    } as CreateReportBodyProperties;\n});\n\nasync function downloadExport(format: ExportFormat) {\n    const organizationId = getCurrentOrganizationId();\n    if (organizationId) {\n        const response = await handleApiRequestNotifications(\n            () =>\n                api.exportAggregatedTimeEntries({\n                    params: {\n                        organization: organizationId,\n                    },\n                    queries: {\n                        ...getFilterAttributes(),\n                        group: group.value,\n                        sub_group: subGroup.value,\n                        history_group: getOptimalGroupingOption(\n                            startDate.value,\n                            endDate.value\n                        ),\n                        format: format,\n                    },\n                }),\n            'Export successful',\n            'Export failed'\n        );\n\n        if (response?.download_url) {\n            showExportModal.value = true;\n            exportUrl.value = response.download_url as string;\n        }\n    }\n}\n\nconst { getNameForReportingRowEntry, emptyPlaceholder } = useReportingStore();\n\nconst projectsStore = useProjectsStore();\nconst { projects } = storeToRefs(projectsStore);\nconst showExportModal = ref(false);\nconst exportUrl = ref<string | null>(null);\n\nconst groupedPieChartData = computed(() => {\n    return (\n        aggregatedTableTimeEntries.value?.grouped_data?.map((entry) => {\n            const name = getNameForReportingRowEntry(\n                entry.key,\n                aggregatedTableTimeEntries.value?.grouped_type\n            );\n            let color = getRandomColorWithSeed(entry.key ?? 'none');\n            if (\n                name &&\n                aggregatedTableTimeEntries.value?.grouped_type &&\n                emptyPlaceholder[\n                    aggregatedTableTimeEntries.value?.grouped_type\n                ] === name\n            ) {\n                color = '#CCCCCC';\n            } else if (\n                aggregatedTableTimeEntries.value?.grouped_type === 'project'\n            ) {\n                color =\n                    projects.value?.find((project) => project.id === entry.key)\n                        ?.color ?? '#CCCCCC';\n            }\n            return {\n                value: entry.seconds,\n                name:\n                    getNameForReportingRowEntry(\n                        entry.key,\n                        aggregatedTableTimeEntries.value?.grouped_type\n                    ) ?? '',\n                color: color,\n            };\n        }) ?? []\n    );\n});\n\nconst tableData = computed(() => {\n    return aggregatedTableTimeEntries.value?.grouped_data?.map((entry) => {\n        return {\n            seconds: entry.seconds,\n            cost: entry.cost,\n            description: getNameForReportingRowEntry(\n                entry.key,\n                aggregatedTableTimeEntries.value?.grouped_type\n            ),\n            grouped_data:\n                entry.grouped_data?.map((el) => {\n                    return {\n                        seconds: el.seconds,\n                        cost: el.cost,\n                        description: getNameForReportingRowEntry(\n                            el.key,\n                            entry.grouped_type\n                        ),\n                    };\n                }) ?? [],\n        };\n    });\n});\n</script>\n\n<template>\n    <ReportingExportModal\n        v-model:show=\"showExportModal\"\n        :export-url=\"exportUrl\"></ReportingExportModal>\n    <MainContainer\n        class=\"py-3 sm:py-5 border-b border-default-background-separator flex justify-between items-center\">\n        <div class=\"flex items-center space-x-3 sm:space-x-6\">\n            <PageTitle :icon=\"ChartBarIcon\" title=\"Reporting\"></PageTitle>\n            <ReportingTabNavbar active=\"reporting\"></ReportingTabNavbar>\n        </div>\n        <div class=\"flex space-x-2\">\n            <ReportingExportButton\n                :download=\"downloadExport\"></ReportingExportButton>\n            <ReportSaveButton\n                :report-properties=\"reportProperties\"></ReportSaveButton>\n        </div>\n    </MainContainer>\n    <div class=\"py-2.5 w-full border-b border-default-background-separator\">\n        <MainContainer class=\"sm:flex space-y-4 sm:space-y-0 justify-between\">\n            <div\n                class=\"flex flex-wrap items-center space-y-2 sm:space-y-0 space-x-4\">\n                <div class=\"text-sm font-medium\">Filters</div>\n                <MemberMultiselectDropdown\n                    v-model=\"selectedMembers\"\n                    @submit=\"updateReporting\">\n                    <template #trigger>\n                        <ReportingFilterBadge\n                            :count=\"selectedMembers.length\"\n                            :active=\"selectedMembers.length > 0\"\n                            title=\"Members\"\n                            :icon=\"UserGroupIcon\"></ReportingFilterBadge>\n                    </template>\n                </MemberMultiselectDropdown>\n                <ProjectMultiselectDropdown\n                    v-model=\"selectedProjects\"\n                    @submit=\"updateReporting\">\n                    <template #trigger>\n                        <ReportingFilterBadge\n                            :count=\"selectedProjects.length\"\n                            :active=\"selectedProjects.length > 0\"\n                            title=\"Projects\"\n                            :icon=\"FolderIcon\"></ReportingFilterBadge>\n                    </template>\n                </ProjectMultiselectDropdown>\n                <TaskMultiselectDropdown\n                    v-model=\"selectedTasks\"\n                    @submit=\"updateReporting\">\n                    <template #trigger>\n                        <ReportingFilterBadge\n                            :count=\"selectedTasks.length\"\n                            :active=\"selectedTasks.length > 0\"\n                            title=\"Tasks\"\n                            :icon=\"CheckCircleIcon\"></ReportingFilterBadge>\n                    </template>\n                </TaskMultiselectDropdown>\n                <ClientMultiselectDropdown\n                    v-model=\"selectedClients\"\n                    @submit=\"updateReporting\">\n                    <template #trigger>\n                        <ReportingFilterBadge\n                            :count=\"selectedClients.length\"\n                            :active=\"selectedClients.length > 0\"\n                            title=\"Clients\"\n                            :icon=\"FolderIcon\"></ReportingFilterBadge>\n                    </template>\n                </ClientMultiselectDropdown>\n                <TagDropdown\n                    v-model=\"selectedTags\"\n                    :create-tag\n                    :tags=\"tags\"\n                    @submit=\"updateReporting\">\n                    <template #trigger>\n                        <ReportingFilterBadge\n                            :count=\"selectedTags.length\"\n                            :active=\"selectedTags.length > 0\"\n                            title=\"Tags\"\n                            :icon=\"TagIcon\"></ReportingFilterBadge>\n                    </template>\n                </TagDropdown>\n\n                <SelectDropdown\n                    v-model=\"billable\"\n                    :get-key-from-item=\"(item) => item.value\"\n                    :get-name-for-item=\"(item) => item.label\"\n                    :items=\"[\n                        {\n                            label: 'Both',\n                            value: null,\n                        },\n                        {\n                            label: 'Billable',\n                            value: 'true',\n                        },\n                        {\n                            label: 'Non Billable',\n                            value: 'false',\n                        },\n                    ]\"\n                    @changed=\"updateReporting\">\n                    <template #trigger>\n                        <ReportingFilterBadge\n                            :active=\"billable !== null\"\n                            :title=\"\n                                billable === 'false'\n                                    ? 'Non Billable'\n                                    : 'Billable'\n                            \"\n                            :icon=\"BillableIcon\"></ReportingFilterBadge>\n                    </template>\n                </SelectDropdown>\n            </div>\n            <div>\n                <DateRangePicker\n                    v-model:start=\"startDate\"\n                    v-model:end=\"endDate\"\n                    @submit=\"updateReporting\"></DateRangePicker>\n            </div>\n        </MainContainer>\n    </div>\n    <MainContainer>\n        <div class=\"pt-10 w-full px-3 relative\">\n            <ReportingChart\n                :grouped-type=\"aggregatedGraphTimeEntries?.grouped_type\"\n                :grouped-data=\"\n                    aggregatedGraphTimeEntries?.grouped_data\n                \"></ReportingChart>\n        </div>\n    </MainContainer>\n    <MainContainer>\n        <div class=\"sm:grid grid-cols-4 pt-6 items-start\">\n            <div\n                class=\"col-span-3 bg-card-background rounded-lg border border-card-border pt-3\">\n                <div\n                    class=\"text-sm flex text-text-primary items-center space-x-3 font-medium px-6 border-b border-card-background-separator pb-3\">\n                    <span>Group by</span>\n                    <ReportingGroupBySelect\n                        v-model=\"group\"\n                        :group-by-options=\"groupByOptions\"\n                        @changed=\"\n                            updateTableReporting\n                        \"></ReportingGroupBySelect>\n                    <span>and</span>\n                    <ReportingGroupBySelect\n                        v-model=\"subGroup\"\n                        :group-by-options=\"\n                            groupByOptions.filter((el) => el.value !== group)\n                        \"\n                        @changed=\"\n                            updateTableReporting\n                        \"></ReportingGroupBySelect>\n                </div>\n                <div\n                    class=\"grid items-center\"\n                    style=\"grid-template-columns: 1fr 100px 150px\">\n                    <div\n                        class=\"contents [&>*]:border-card-background-separator [&>*]:border-b [&>*]:bg-tertiary [&>*]:pb-1.5 [&>*]:pt-1 text-text-secondary text-sm\">\n                        <div class=\"pl-6\">Name</div>\n                        <div class=\"text-right\">Duration</div>\n                        <div class=\"text-right pr-6\">Cost</div>\n                    </div>\n                    <template\n                        v-if=\"\n                            aggregatedTableTimeEntries?.grouped_data &&\n                            aggregatedTableTimeEntries.grouped_data?.length > 0\n                        \">\n                        <ReportingRow\n                            v-for=\"entry in tableData\"\n                            :key=\"entry.description ?? 'none'\"\n                            :currency=\"getOrganizationCurrencyString()\"\n                            :type=\"aggregatedTableTimeEntries.grouped_type\"\n                            :entry=\"entry\"></ReportingRow>\n                        <div\n                            class=\"contents [&>*]:transition text-text-tertiary [&>*]:h-[50px]\">\n                            <div class=\"flex items-center pl-6 font-medium\">\n                                <span>Total</span>\n                            </div>\n                            <div\n                                class=\"justify-end flex items-center font-medium\">\n                                {{\n                                    formatHumanReadableDuration(\n                                        aggregatedTableTimeEntries.seconds,\n                                        organization?.interval_format,\n                                        organization?.number_format\n                                    )\n                                }}\n                            </div>\n                            <div\n                                class=\"justify-end pr-6 flex items-center font-medium\">\n                                {{\n                                    aggregatedTableTimeEntries.cost\n                                        ? formatCents(\n                                              aggregatedTableTimeEntries.cost,\n                                              getOrganizationCurrencyString(),\n                                              organization?.currency_format,\n                                              organization?.currency_symbol,\n                                              organization?.number_format\n                                          )\n                                        : '--'\n                                }}\n                            </div>\n                        </div>\n                    </template>\n                    <div\n                        v-else\n                        class=\"chart flex flex-col items-center justify-center py-12 col-span-3\">\n                        <p class=\"text-lg text-text-primary font-semibold\">\n                            No time entries found\n                        </p>\n                        <p>Try to change the filters and time range</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"px-2 lg:px-4\">\n                <ReportingPieChart\n                    :data=\"groupedPieChartData\"></ReportingPieChart>\n            </div>\n        </div>\n    </MainContainer>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport AppLayout from '@/Layouts/AppLayout.vue';\nimport ReportingOverview from \"@/Components/Common/Reporting/ReportingOverview.vue\";\n\n\n</script>\n\n<template>\n    <AppLayout\n        title=\"Reporting\"\n        data-testid=\"reporting_view\"\n        class=\"overflow-hidden\">\n        <ReportingOverview></ReportingOverview>\n    </AppLayout>\n</template>\n"],"names":["model","_useModel","props","__props","icon","computed","_a","option","title","_createBlock","SelectDropdown","$event","item","groupByOptions","_createVNode","Badge","_openBlock","_resolveDynamicComponent","_createElementVNode","show","saving","ref","createReportMutation","useMutation","report","organizationId","getCurrentOrganizationId","api","handleApiRequestNotifications","useNotificationsStore","submit","DialogModal","_cache","_hoisted_1","_hoisted_2","InputLabel","TextInput","_hoisted_3","_hoisted_4","_unref","Checkbox","_createElementBlock","_hoisted_5","DatePicker","SecondaryButton","PrimaryButton","_normalizeClass","showCreateReportModal","showPremiumModal","SaveIcon","h","onSaveReportClick","isAllowedToPerformPremiumAction","ReportCreateModal","reportProperties","UpgradeModal","canCreateReports","startDate","useSessionStorage","getLocalizedDayJs","getDayJsInstance","endDate","selectedTags","selectedProjects","selectedMembers","selectedTasks","selectedClients","billable","group","useStorage","subGroup","reportingStore","useReportingStore","aggregatedGraphTimeEntries","aggregatedTableTimeEntries","storeToRefs","organization","inject","getFilterAttributes","params","getCurrentRole","getCurrentMembershipId","updateGraphReporting","getOptimalGroupingOption","updateTableReporting","fallbackOption","el","updateReporting","diffInDays","onMounted","tags","useTagsStore","createTag","tag","downloadExport","format","response","showExportModal","exportUrl","getNameForReportingRowEntry","emptyPlaceholder","projectsStore","useProjectsStore","projects","groupedPieChartData","_b","entry","name","color","getRandomColorWithSeed","_c","_d","_f","_e","project","_g","tableData","ReportingExportModal","MainContainer","PageTitle","ChartBarIcon","ReportingTabNavbar","ReportingExportButton","ReportSaveButton","MemberMultiselectDropdown","ReportingFilterBadge","UserGroupIcon","ProjectMultiselectDropdown","FolderIcon","TaskMultiselectDropdown","CheckCircleIcon","ClientMultiselectDropdown","TagDropdown","TagIcon","BillableIcon","DateRangePicker","ReportingChart","_hoisted_6","_hoisted_7","_hoisted_8","ReportingGroupBySelect","_hoisted_9","_Fragment","_renderList","ReportingRow","getOrganizationCurrencyString","_hoisted_10","_hoisted_11","_toDisplayString","formatHumanReadableDuration","_hoisted_12","formatCents","_hoisted_13","_hoisted_14","ReportingPieChart","AppLayout","ReportingOverview"],"mappings":"mtGAKA,MAAMA,EAAQC,iBAA4C,EACpDC,EAAQC,EAGRC,EAAOC,EAAS,IAAM,OACxB,OAAOC,EAAAJ,EAAM,eAAe,KAAMK,GAAWA,EAAO,QAAUP,EAAM,KAAK,IAAlE,YAAAM,EACD,IAAA,CACT,EACKE,EAAQH,EAAS,IAAM,OACzB,OAAOC,EAAAJ,EAAM,eAAe,KAAMK,GAAWA,EAAO,QAAUP,EAAM,KAAK,IAAlE,YAAAM,EACD,KAAA,CACT,oBAIGG,EAciBC,GAAA,YAbJV,EAAA,2CAAAA,EAAK,MAAAW,GACb,oBAAoBC,GAASA,EAAK,MAClC,oBAAoBA,GAASA,EAAK,MAClC,MAAOC,EAAAA,cAAAA,GACG,UACP,IAMQ,CANRC,EAMQC,GAAA,CALJ,KAAK,QACL,IAAI,SACJ,MAAM,mEAAA,aACN,IAAkE,EAAlEC,EAAA,EAAAP,EAAkEQ,GAAlDb,EAAA,KAAI,EAAA,CAAE,MAAM,0BAAyB,GACrDc,EAA0B,cAAhBV,EAAA,KAAK,EAAA,CAAA,CAAA,gaCb/B,MAAMW,EAAOlB,KAAY,MAA0B,EAC7CmB,EAASC,EAAI,EAAK,EAElBC,EAAuBC,GAAY,CACrC,WAAY,MAAOC,GAA6B,CAC5C,MAAMC,EAAiBC,GAAA,EACvB,GAAID,IAAmB,KACnB,MAAM,IAAI,MAAM,4CAA4C,EAEhE,OAAO,MAAME,GAAI,aAAaH,EAAQ,CAClC,OAAQ,CACJ,aAAcC,CAAA,CAClB,CACH,CAAA,CACL,CACH,EAEKvB,EAAQC,EAIRqB,EAASH,EAAI,CACf,KAAM,GACN,YAAa,GACb,UAAW,GACX,aAAc,IAAA,CACjB,EAEK,CAAE,8BAAAO,CAAA,EAAkCC,GAAA,EAE1C,eAAeC,GAAS,CACpB,MAAMF,EACF,IACIN,EAAqB,YAAY,CAC7B,GAAGE,EAAO,MACV,WAAY,CAAE,GAAGtB,EAAM,UAAA,CAAW,CACrC,EACL,UACA,QACA,IAAM,CACFsB,EAAO,MAAQ,CACX,KAAM,GACN,YAAa,GACb,UAAW,GACX,aAAc,IAAA,EAElBL,EAAK,MAAQ,EAAA,CACjB,CACJ,mBAKAV,EAuDcsB,GAAA,CAvDD,UAAA,GAAW,KAAMZ,EAAA,MAAO,uBAAOA,EAAA,MAAI,GAAA,GACjC,QACP,IAEMa,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAFNd,EAEM,MAAA,CAFD,MAAM,kBAAgB,CACvBA,EAA4B,YAAtB,iBAAe,CAAA,SAIlB,UACP,IAmCM,CAnCNA,EAmCM,MAnCNe,GAmCM,CAlCFf,EAMM,MANNgB,GAMM,CALFpB,EAAsCqB,EAAA,CAA1B,IAAI,OAAO,MAAM,MAAA,GAC7BrB,EAGsCsB,GAAA,CAFlC,GAAG,OACM,WAAAZ,EAAA,MAAO,KAAP,sBAAAQ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAArB,GAAAa,EAAA,MAAO,KAAIb,GACpB,MAAM,eAAA,2BAEdO,EAMM,MAAA,KAAA,CALFJ,EAAoDqB,EAAA,CAAxC,IAAI,cAAc,MAAM,aAAA,GACpCrB,EAGsCsB,GAAA,CAFlC,GAAG,cACM,WAAAZ,EAAA,MAAO,YAAP,sBAAAQ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAArB,GAAAa,EAAA,MAAO,YAAWb,GAC3B,MAAM,eAAA,2BAEdG,EAAiCqB,EAAA,CAArB,MAAM,aAAY,EAC9BjB,EAkBM,MAlBNmB,GAkBM,CAjBFnB,EAKM,MALNoB,GAKM,CAJFxB,EAEkDyB,EAAAC,EAAA,EAAA,CAD9C,GAAG,YACK,QAAShB,EAAA,MAAO,UAAP,mBAAAQ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAArB,GAAAa,EAAA,MAAO,UAASb,EAAA,sBACrCG,EAA6CqB,EAAA,CAAjC,IAAI,YAAY,MAAM,QAAA,KAG5BX,EAAA,MAAO,WADjBR,IAAAyB,EAUM,MAVNC,GAUM,CAPFxB,EAKM,MAAA,KAAA,CAJFJ,EAAoDqB,EAAA,CAAxC,IAAI,eAAe,MAAM,YAAA,GACrCH,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAd,EAEM,MAAA,CAFD,MAAM,kCAAiC,eAE5C,EAAA,EAAA,GAEJJ,EAA2C6B,GAAA,CAA/B,GAAG,eAAc,CAAA,oBAKlC,SACP,IAAgE,CAAhE7B,EAAgE8B,GAAA,CAA9C,uBAAOzB,EAAA,MAAI,GAAA,aAAU,IAAOa,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAAP,SAAO,CAAA,iBAC9ClB,EAMgB+B,GAAA,CALZ,MAAKC,GAAA,CAAC,OAAM,CAAA,aACY1B,EAAA,KAAA,CAAM,CAAA,EAC7B,SAAUA,EAAA,MACV,QAAOU,CAAA,aAAQ,IAEpBE,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAFoB,iBAEpB,CAAA,oIChHZ,MAAMe,EAAwB1B,EAAI,EAAK,EACjC2B,EAAmB3B,EAAI,EAAK,EAC5B4B,EAAWC,GAAE,MAAO,CACtB,UACI,sWAAA,CACP,EAED,SAASC,GAAoB,CACrBC,KACAL,EAAsB,MAAQ,GAE9BC,EAAiB,MAAQ,EAC7B,6BAKAlC,EAEuDuC,GAAA,CAD3C,KAAMN,EAAA,qCAAAA,EAAqB,MAAApC,GAClC,WAAY2C,EAAAA,gBAAAA,gCACjBxC,EAGeyC,GAAA,CAHO,KAAMP,EAAA,qCAAAA,EAAgB,MAAArC,EAAA,aACxC,IAAiCqB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAAjCd,EAAiC,cAAzB,mBAAgB,EAAA,IAAS,gDAErC,CAAA,4BAEUqB,EAAAiB,EAAA,SADV/C,EAKC8B,EAAAK,EAAA,EAAA,OAHI,KAAML,EAAAU,CAAA,EACN,QAAOE,CAAA,aACP,IAAWnB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAAX,aAAW,CAAA,2+BCgBpB,KAAM,CAAE,8BAAAJ,CAAA,EAAkCC,GAAA,EAEpC4B,EAAYC,GACd,uBACAC,EAAkBC,EAAA,EAAiB,EAAI,OAAA,CAAQ,EAAE,SAAS,GAAI,GAAG,EAAE,OAAA,CAAO,EAExEC,EAAUH,GACZ,qBACAC,EAAkBC,EAAA,EAAiB,EAAI,OAAA,CAAQ,EAAE,OAAA,CAAO,EAEtDE,EAAezC,EAAc,EAAE,EAC/B0C,EAAmB1C,EAAc,EAAE,EACnC2C,EAAkB3C,EAAc,EAAE,EAClC4C,EAAgB5C,EAAc,EAAE,EAChC6C,EAAkB7C,EAAc,EAAE,EAElC8C,EAAW9C,EAA6B,IAAI,EAE5C+C,EAAQC,GAA2B,kBAAmB,SAAS,EAC/DC,EAAWD,GAA2B,sBAAuB,MAAM,EAEnEE,GAAiBC,EAAA,EAEjB,CAAE,2BAAAC,GAA4B,2BAAAC,GAChCC,EAAYJ,EAAc,EAExB,CAAE,eAAA1D,GAAmB0D,GAErBK,EAAeC,GAAkC,cAAc,EAErE,SAASC,GAAwD,CAC7D,IAAIC,EAA2C,CAC3C,MAAOpB,EAAkBF,EAAU,KAAK,EAAE,QAAQ,KAAK,EAAE,IAAA,EAAM,OAAA,EAC/D,IAAKE,EAAkBE,EAAQ,KAAK,EAAE,MAAM,KAAK,EAAE,IAAA,EAAM,OAAA,CAAO,EAEpE,OAAAkB,EAAS,CACL,GAAGA,EACH,WACIf,EAAgB,MAAM,OAAS,EACzBA,EAAgB,MAChB,OACV,YACID,EAAiB,MAAM,OAAS,EAC1BA,EAAiB,MACjB,OACV,SACIE,EAAc,MAAM,OAAS,EAAIA,EAAc,MAAQ,OAC3D,WACIC,EAAgB,MAAM,OAAS,EACzBA,EAAgB,MAChB,OACV,QAASJ,EAAa,MAAM,OAAS,EAAIA,EAAa,MAAQ,OAC9D,SAAUK,EAAS,QAAU,KAAOA,EAAS,MAAQ,OACrD,UACIa,EAAA,IAAqB,WACfC,IACA,MAAA,EAEPF,CAAA,CAGX,SAASG,IAAuB,CAC5B,MAAMH,EAASD,EAAA,EACXE,EAAA,IAAqB,aACrBD,EAAO,UAAYE,EAAA,GAEvBF,EAAO,yBAA2B,OAClCA,EAAO,MAAQI,EAAyB1B,EAAU,MAAOI,EAAQ,KAAK,EACtEW,EAAA,EAAoB,oBAAoBO,CAAM,CAAA,CAGlD,SAASK,GAAuB,CAC5B,MAAML,EAASD,EAAA,EACf,GAAIV,EAAM,QAAUE,EAAS,MAAO,CAChC,MAAMe,EAAiBxE,EAAe,KACjCyE,GAAOA,EAAG,QAAUlB,EAAM,KAAA,EAE3BiB,GAAA,MAAAA,EAAgB,QAChBf,EAAS,MAAQe,EAAe,MACpC,CAEAL,EAAA,IAAqB,aACrBD,EAAO,UAAYE,EAAA,GAEvBF,EAAO,MAAQX,EAAM,MACrBW,EAAO,UAAYT,EAAS,MAC5BE,EAAA,EAAoB,oBAAoBO,CAAM,CAAA,CAGlD,SAASQ,GAAkB,CACvBL,GAAA,EACAE,EAAA,CAAqB,CAGzB,SAASD,EACL1B,EACAI,EACwB,CACxB,MAAM2B,EAAa5B,IAAmBC,CAAO,EAAE,KAC3CD,EAAA,EAAmBH,CAAS,EAC5B,GAAA,EAGJ,OAAI+B,GAAc,GACP,MACAA,GAAc,IACd,OAEA,OACX,CAGJC,GAAU,IAAM,CACZP,GAAA,EACAE,EAAA,CAAqB,CACxB,EAED,KAAM,CAAE,KAAAM,EAAA,EAASf,EAAYgB,IAAc,EAE3C,eAAeC,GAAUC,EAAa,CAClC,OAAO,MAAMF,GAAA,EAAe,UAAUE,CAAG,CAAA,CAG7C,MAAMvC,GAAmBjD,EAAS,KACvB,CACH,GAAGyE,EAAA,EACH,MAAOV,EAAM,MACb,UAAWE,EAAS,MACpB,cAAea,EAAyB1B,EAAU,MAAOI,EAAQ,KAAK,CAAA,EAE7E,EAED,eAAeiC,GAAeC,EAAsB,CAChD,MAAMtE,EAAiBC,GAAA,EACvB,GAAID,EAAgB,CAChB,MAAMuE,EAAW,MAAMpE,EACnB,IACID,GAAI,4BAA4B,CAC5B,OAAQ,CACJ,aAAcF,CAAA,EAElB,QAAS,CACL,GAAGqD,EAAA,EACH,MAAOV,EAAM,MACb,UAAWE,EAAS,MACpB,cAAea,EACX1B,EAAU,MACVI,EAAQ,KAAA,EAEZ,OAAAkC,CAAA,CACJ,CACH,EACL,oBACA,eAAA,EAGAC,GAAA,MAAAA,EAAU,eACVC,EAAgB,MAAQ,GACxBC,GAAU,MAAQF,EAAS,aAC/B,CACJ,CAGJ,KAAM,CAAE,4BAAAG,EAA6B,iBAAAC,EAAA,EAAqB5B,EAAA,EAEpD6B,GAAgBC,GAAA,EAChB,CAAE,SAAAC,EAAA,EAAa5B,EAAY0B,EAAa,EACxCJ,EAAkB5E,EAAI,EAAK,EAC3B6E,GAAY7E,EAAmB,IAAI,EAEnCmF,GAAsBnG,EAAS,IAAM,SACvC,QACIoG,GAAAnG,EAAAoE,EAA2B,QAA3B,YAAApE,EAAkC,eAAlC,YAAAmG,EAAgD,IAAKC,GAAU,qBAC3D,MAAMC,EAAOR,EACTO,EAAM,KACNpG,EAAAoE,EAA2B,QAA3B,YAAApE,EAAkC,YAAA,EAEtC,IAAIsG,EAAQC,GAAuBH,EAAM,KAAO,MAAM,EACtD,OACIC,KACAF,EAAA/B,EAA2B,QAA3B,MAAA+B,EAAkC,eAClCL,IACIU,EAAApC,EAA2B,QAA3B,YAAAoC,EAAkC,YACtC,IAAMH,EAENC,EAAQ,YAERG,EAAArC,EAA2B,QAA3B,YAAAqC,EAAkC,gBAAiB,YAEnDH,IACII,IAAAC,EAAAV,GAAS,QAAT,YAAAU,EAAgB,KAAMC,IAAYA,GAAQ,KAAOR,EAAM,OAAvD,YAAAM,GACM,QAAS,WAEhB,CACH,MAAON,EAAM,QACb,KACIP,EACIO,EAAM,KACNS,GAAAzC,EAA2B,QAA3B,YAAAyC,GAAkC,YAAA,GACjC,GACT,MAAAP,CAAA,CACJ,KACE,CAAA,CAAC,CAEd,EAEKQ,GAAY/G,EAAS,IAAM,SAC7B,OAAOoG,GAAAnG,EAAAoE,EAA2B,QAA3B,YAAApE,EAAkC,eAAlC,YAAAmG,EAAgD,IAAKC,GAAU,SAClE,MAAO,CACH,QAASA,EAAM,QACf,KAAMA,EAAM,KACZ,YAAaP,EACTO,EAAM,KACNpG,EAAAoE,EAA2B,QAA3B,YAAApE,EAAkC,YAAA,EAEtC,eACImG,EAAAC,EAAM,eAAN,YAAAD,EAAoB,IAAKnB,IACd,CACH,QAASA,EAAG,QACZ,KAAMA,EAAG,KACT,YAAaa,EACTb,EAAG,IACHoB,EAAM,YAAA,CACV,MAEF,CAAA,CAAC,CACf,EACH,CACJ,8BAIG5F,EAEmDuG,GAAA,CADvC,KAAMpB,EAAA,qCAAAA,EAAe,MAAAtF,GAC5B,aAAYuF,GAAA,KAAA,gCACjBpF,EAYgBwG,EAAA,CAXZ,MAAM,+FAA6F,WACnG,IAGM,CAHNpG,EAGM,MAHNe,GAGM,CAFFnB,EAA8DyG,GAAA,CAAlD,KAAMhF,EAAAiF,EAAA,EAAc,MAAM,WAAA,mBACtC1G,EAA4D2G,GAAA,CAAxC,OAAO,YAAW,CAAA,GAE1CvG,EAKM,MALNgB,GAKM,CAJFpB,EACuD4G,GAAA,CAAlD,SAAU5B,GAAc,EAC7BhF,EAC6D6G,GAAA,CAAxD,oBAAmBrE,GAAA,KAAA,EAAgB,KAAA,EAAA,CAAA,mBAAA,CAAA,CAAA,WAGhDpC,EAqGM,MArGNmB,GAqGM,CApGFvB,EAmGgBwG,EAAA,CAnGD,MAAM,kDAAgD,WACjE,IA2FM,CA3FNpG,EA2FM,MA3FNoB,GA2FM,CAzFFN,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAd,EAA8C,MAAA,CAAzC,MAAM,qBAAA,EAAsB,UAAO,EAAA,GACxCJ,EAU4B8G,GAAA,YATf5D,EAAA,2CAAAA,EAAe,MAAArD,GACvB,SAAQ4E,CAAA,GACE,UACP,IAIiD,CAJjDzE,EAIiD+G,EAAA,CAH5C,MAAO7D,EAAA,MAAgB,OACvB,OAAQA,EAAA,MAAgB,OAAM,EAC/B,MAAM,UACL,KAAMzB,EAAAuF,EAAA,CAAA,6DAGnBhH,EAU6BiH,GAAA,YAThBhE,EAAA,2CAAAA,EAAgB,MAAApD,GACxB,SAAQ4E,CAAA,GACE,UACP,IAI8C,CAJ9CzE,EAI8C+G,EAAA,CAHzC,MAAO9D,EAAA,MAAiB,OACxB,OAAQA,EAAA,MAAiB,OAAM,EAChC,MAAM,WACL,KAAMxB,EAAAyF,EAAA,CAAA,6DAGnBlH,EAU0BmH,GAAA,YATbhE,EAAA,2CAAAA,EAAa,MAAAtD,GACrB,SAAQ4E,CAAA,GACE,UACP,IAImD,CAJnDzE,EAImD+G,EAAA,CAH9C,MAAO5D,EAAA,MAAc,OACrB,OAAQA,EAAA,MAAc,OAAM,EAC7B,MAAM,QACL,KAAM1B,EAAA2F,EAAA,CAAA,6DAGnBpH,EAU4BqH,GAAA,YATfjE,EAAA,2CAAAA,EAAe,MAAAvD,GACvB,SAAQ4E,CAAA,GACE,UACP,IAI8C,CAJ9CzE,EAI8C+G,EAAA,CAHzC,MAAO3D,EAAA,MAAgB,OACvB,OAAQA,EAAA,MAAgB,OAAM,EAC/B,MAAM,UACL,KAAM3B,EAAAyF,EAAA,CAAA,6DAGnBlH,EAYcsH,GAAA,YAXDtE,EAAA,2CAAAA,EAAY,MAAAnD,GACpB,aAAAiF,GACA,KAAMrD,EAAAmD,EAAA,EACN,SAAQH,CAAA,GACE,UACP,IAI2C,CAJ3CzE,EAI2C+G,EAAA,CAHtC,MAAO/D,EAAA,MAAa,OACpB,OAAQA,EAAA,MAAa,OAAM,EAC5B,MAAM,OACL,KAAMvB,EAAA8F,EAAA,CAAA,oEAInBvH,EA6BiBJ,GAAA,YA5BJyD,EAAA,2CAAAA,EAAQ,MAAAxD,GAChB,oBAAoBC,GAASA,EAAK,MAClC,oBAAoBA,GAASA,EAAK,MAClC,MAAO,iGAcP,UAAS2E,CAAA,GACC,UACP,IAOgD,CAPhDzE,EAOgD+G,EAAA,CAN3C,OAAQ1D,EAAA,QAAQ,KAChB,MAAwCA,EAAA,QAAQ,kCAKhD,KAAMmE,EAAA,gGAIvBpH,EAKM,MAAA,KAAA,CAJFJ,EAGgDyH,GAAA,CAFpC,MAAOhG,EAAAkB,CAAA,uCAAAA,EAAS,MAAA9C,EAAA,MAChB,IAAK4B,EAAAsB,CAAA,qCAAAA,EAAO,MAAAlD,EAAA,MACnB,SAAQ4E,CAAA,sCAIzBzE,EAQgBwG,EAAA,KAAA,WAPZ,IAAA,SAMM,OANNpG,EAMM,MANNwB,GAMM,CALF5B,EAIuB0H,GAAA,CAHlB,gBAAcjG,EAAAA,EAAAkC,EAAA,IAAAlC,YAAAA,EAA4B,aAC1C,gBAAmCA,EAAAA,EAAAkC,EAAA,IAAAlC,YAAAA,EAA4B,YAAA,qDAK5EzB,EAyFgBwG,EAAA,KAAA,WAxFZ,IAAA,mBAuFM,OAvFNpG,EAuFM,MAvFNuH,GAuFM,CAtFFvH,EAiFM,MAjFNwH,GAiFM,CA/EFxH,EAkBM,MAlBNyH,GAkBM,CAhBF3G,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAd,EAAqB,YAAf,WAAQ,EAAA,GACdJ,EAK+B8H,GAAA,YAJlBrG,EAAA6B,CAAA,4CAAAA,EAAK,MAAAzD,EAAA,MACb,mBAAkB4B,EAAA1B,CAAA,EAClB,UAAsCuE,CAAA,wDAG3CpD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAd,EAAgB,YAAV,MAAG,EAAA,GACTJ,EAO+B8H,GAAA,YANlBrG,EAAA+B,CAAA,8CAAAA,EAAQ,MAAA3D,EAAA,MAChB,mBAA+C4B,EAAA1B,CAAA,EAAe,OAAQyE,GAAOA,EAAG,QAAU/C,EAAA6B,CAAA,CAAK,EAG/F,UAAsCgB,CAAA,0DAI/ClE,EA2DM,MA3DN2H,GA2DM,eAxDF3H,EAKM,MAAA,CAJF,MAAM,wIAAsI,CAC5IA,EAA4B,MAAA,CAAvB,MAAM,MAAA,EAAO,MAAI,EACtBA,EAAsC,MAAA,CAAjC,MAAM,YAAA,EAAa,UAAQ,EAChCA,EAAuC,MAAA,CAAlC,MAAM,iBAAA,EAAkB,MAAI,CAAA,QAGEqB,EAAAA,EAAAmC,CAAA,IAAAnC,MAAAA,EAA4B,gBAA4CA,EAAAA,EAAAmC,CAAA,EAA2B,eAA3BnC,YAAAA,EAAyC,QAAM,OAD9JE,EAyCWqG,EAAA,CAAA,IAAA,GAAA,QApCPrG,EAKkCqG,EAAA,KAAAC,GAJd3B,GAAA,MAATV,QADXjG,EAKkCuI,GAAA,CAH7B,IAAKtC,EAAM,aAAW,OACtB,SAAUnE,EAAA0G,EAAA,EAAA,EACV,KAAM1G,EAAAmC,CAAA,EAA2B,aACjC,MAAAgC,CAAA,8CACLxF,EA6BM,MA7BNgI,GA6BM,eA3BFhI,EAEM,MAAA,CAFD,MAAM,sCAAoC,CAC3CA,EAAkB,YAAZ,OAAK,CAAA,OAEfA,EASM,MATNiI,GASMC,EANE7G,EAAA8G,EAAA,EAAqE9G,EAAAmC,CAAA,EAA2B,SAAiDnC,EAAAA,EAAAqC,CAAA,IAAArC,YAAAA,EAAc,iBAAyDA,EAAAA,EAAAqC,CAAA,IAAArC,YAAAA,EAAc,aAAA,MAO9OrB,EAaM,MAbNoI,GAaMF,EAVE7G,EAAAmC,CAAA,EAA2B,KAA+CnC,EAAAgH,EAAA,EAA2DhH,EAAAmC,CAAA,EAA2B,KAAoDnC,EAAA0G,EAAA,EAAA,GAA+E1G,EAAAA,EAAAqC,CAAA,IAAArC,YAAAA,EAAc,iBAA+DA,EAAAA,EAAAqC,CAAA,IAAArC,YAAAA,EAAc,iBAA+DA,EAAAA,EAAAqC,CAAA,IAAArC,YAAAA,EAAc,aAAA,oBAa3dvB,EAAA,EAAAyB,EAOM,MAPN+G,GAOMxH,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAJFd,EAEI,IAAA,CAFD,MAAM,yCAAA,EAA0C,0BAEnD,EAAA,EACAA,EAA+C,SAA5C,2CAAwC,EAAA,CAAA,SAIvDA,EAGM,MAHNuI,GAGM,CAFF3I,EACoD4I,GAAA,CAA/C,KAAMlD,GAAA,KAAA,EAAmB,KAAA,EAAA,CAAA,MAAA,CAAA,CAAA,2EC7e1C/F,EAKYkJ,GAAA,CAJR,MAAM,YACN,cAAY,iBACZ,MAAM,iBAAA,aACN,IAAuC,CAAvC7I,EAAuC8I,EAAA,CAAA"}