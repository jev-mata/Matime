{"version":3,"file":"ProjectShow-DVMMeH7M.js","sources":["../../../node_modules/@heroicons/vue/24/solid/esm/UserGroupIcon.js","../../../resources/js/Components/Common/Project/ProjectDropdown.vue","../../../resources/js/Components/Common/Task/TaskCreateModal.vue","../../../resources/js/Components/Common/Task/TaskMoreOptionsDropdown.vue","../../../resources/js/Components/Common/Task/TaskEditModal.vue","../../../resources/js/Components/Common/Task/TaskTableRow.vue","../../../resources/js/Components/Common/Task/TaskTableHeading.vue","../../../resources/js/Components/Common/Task/TaskTable.vue","../../../resources/js/utils/useProjectMembers.ts","../../../resources/js/Components/Common/ProjectMember/ProjectMemberMoreOptionsDropdown.vue","../../../resources/js/Components/Common/ProjectMember/ProjectMemberBillableRateModal.vue","../../../resources/js/Components/Common/ProjectMember/ProjectMemberEditModal.vue","../../../resources/js/Components/Common/ProjectMember/ProjectMemberTableRow.vue","../../../resources/js/Components/Common/ProjectMember/ProjectMemberTableHeading.vue","../../../resources/js/Components/Common/ProjectMember/ProjectMemberCreateModal.vue","../../../resources/js/Components/Common/ProjectMember/ProjectMemberTable.vue","../../../resources/js/Pages/ProjectShow.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M8.25 6.75a3.75 3.75 0 1 1 7.5 0 3.75 3.75 0 0 1-7.5 0ZM15.75 9.75a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM2.25 9.75a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM6.31 15.117A6.745 6.745 0 0 1 12 12a6.745 6.745 0 0 1 6.709 7.498.75.75 0 0 1-.372.568A12.696 12.696 0 0 1 12 21.75c-2.305 0-4.47-.612-6.337-1.684a.75.75 0 0 1-.372-.568 6.787 6.787 0 0 1 1.019-4.38Z\",\n      \"clip-rule\": \"evenodd\"\n    }),\n    _createElementVNode(\"path\", { d: \"M5.082 14.254a8.287 8.287 0 0 0-1.308 5.135 9.687 9.687 0 0 1-1.764-.44l-.115-.04a.563.563 0 0 1-.373-.487l-.01-.121a3.75 3.75 0 0 1 3.57-4.047ZM20.226 19.389a8.287 8.287 0 0 0-1.308-5.135 3.75 3.75 0 0 1 3.57 4.047l-.01.121a.563.563 0 0 1-.373.486l-.115.04c-.567.2-1.156.349-1.764.441Z\" })\n  ]))\n}","<script setup lang=\"ts\">\nimport ProjectBadge from \"@/packages/ui/src/Project/ProjectBadge.vue\";\nimport { computed, nextTick, ref, watch } from \"vue\";\nimport { useProjectsStore } from \"@/utils/useProjects\";\nimport Dropdown from \"@/packages/ui/src/Input/Dropdown.vue\";\nimport {\n    ComboboxAnchor,\n    ComboboxContent,\n    ComboboxInput,\n    ComboboxItem,\n    ComboboxRoot,\n    ComboboxViewport\n} from \"radix-vue\";\nimport { PlusCircleIcon } from \"@heroicons/vue/20/solid\";\nimport { storeToRefs } from \"pinia\";\nimport { api } from \"@/packages/api/src\";\nimport { usePage } from \"@inertiajs/vue3\";\nimport { getRandomColor } from \"@/packages/ui/src/utils/color\";\nimport type { Project } from \"@/packages/api/src\";\nimport ProjectDropdownItem from \"@/packages/ui/src/Project/ProjectDropdownItem.vue\";\nimport { UseFocusTrap } from \"@vueuse/integrations/useFocusTrap/component\";\n\nconst searchValue = ref(\"\");\nconst searchInput = ref<HTMLElement | null>(null);\nconst model = defineModel<string | null>({\n    default: null\n});\nconst open = ref(false);\nconst projectsStore = useProjectsStore();\nconst emit = defineEmits([\"update:modelValue\", \"changed\"]);\n\nconst { projects } = storeToRefs(projectsStore);\nconst projectDropdownTrigger = ref<HTMLElement | null>(null);\nconst shownProjects = computed(() => {\n    return projects.value.filter((project) => {\n        return project.name\n            .toLowerCase()\n            .includes(searchValue.value?.toLowerCase()?.trim() || \"\");\n    });\n});\n\nwithDefaults(\n    defineProps<{\n        border?: boolean;\n    }>(),\n    {\n        border: true\n    }\n);\n\nconst page = usePage<{\n    auth: {\n        user: {\n            current_team_id: string;\n        };\n    };\n}>();\n\nasync function addProjectIfNoneExists() {\n    if (searchValue.value.length > 0 && shownProjects.value.length === 0) {\n        const response = await api.createProject(\n            {\n                name: searchValue.value,\n                color: getRandomColor(),\n                is_billable: false\n            },\n            { params: { organization: page.props.auth.user.current_team_id } }\n        );\n        projects.value.unshift(response.data);\n        model.value = response.data.id;\n        searchValue.value = \"\";\n        open.value = false;\n    }\n}\n\nwatch(open, (isOpen) => {\n    if (isOpen) {\n        nextTick(() => {\n            // @ts-expect-error We need to access the actual HTML Element to focus as radix-vue does not support any other way right now\n            searchInput.value?.$el?.focus();\n        });\n\n        projects.value.sort((iteratingProject) => {\n            return model.value === iteratingProject.id ? -1 : 1;\n        });\n    }\n});\n\nconst currentProject = computed(() => {\n    return projects.value.find((project) => project.id === model.value);\n});\n\nfunction isProjectSelected(project: Project) {\n    return model.value === project.id;\n}\n\nconst selectedProjectName = computed(() => {\n    return currentProject.value?.name || \"No Project\";\n});\n\nconst selectedProjectColor = computed(() => {\n    return currentProject.value?.color || \"var(--theme-color-icon-default)\";\n});\n\nfunction updateValue(project: Project) {\n    model.value = project.id;\n    emit(\"changed\");\n}\n</script>\n\n<template>\n    <Dropdown v-model=\"open\" align=\"start\" width=\"60\">\n        <template #trigger>\n            <ProjectBadge\n                ref=\"projectDropdownTrigger\"\n                :color=\"selectedProjectColor\"\n                size=\"xlarge\"\n                :border\n                tag=\"button\"\n                :name=\"selectedProjectName\"\n                class=\"focus:border-input-border-active bg-input-background focus:outline-0 focus:bg-card-background-separator hover:bg-card-background-separator\"></ProjectBadge>\n        </template>\n\n        <template #content>\n            <UseFocusTrap\n                v-if=\"open\"\n                :options=\"{ immediate: true, allowOutsideClick: true }\">\n                <ComboboxRoot\n                    v-model:search-term=\"searchValue\"\n                    :open=\"open\"\n                    :model-value=\"currentProject\"\n                    class=\"relative\"\n                    @update:model-value=\"updateValue\"\n                    >\n                    <ComboboxAnchor>\n                        <ComboboxInput\n                            ref=\"searchInput\"\n                            class=\"bg-card-background border-0 placeholder-muted text-sm text-text-primary py-2.5 focus:ring-0 border-b border-card-background-separator focus:border-card-background-separator w-full\"\n                            placeholder=\"Search for a project...\"\n                            @keydown.enter=\"addProjectIfNoneExists\" />\n                    </ComboboxAnchor>\n                    <ComboboxContent>\n                        <ComboboxViewport\n                            ref=\"dropdownViewport\"\n                            class=\"w-60 max-h-60 overflow-y-scroll\">\n                            <ComboboxItem\n                                v-for=\"project in shownProjects\"\n                                :key=\"project.id\"\n                                :value=\"project\"\n                                class=\"data-[highlighted]:bg-card-background-active\"\n                                :data-project-id=\"project.id\">\n                                <ProjectDropdownItem\n                                    :selected=\"isProjectSelected(project)\"\n                                    :color=\"project.color\"\n                                    :name=\"project.name\"></ProjectDropdownItem>\n                            </ComboboxItem>\n                            <div\n                                v-if=\"\n                                searchValue.length > 0 &&\n                                shownProjects.length === 0\n                            \"\n                                class=\"bg-card-background-active\">\n                                <div\n                                    class=\"flex space-x-3 items-center px-4 py-3 text-xs font-medium border-t rounded-b-lg border-card-background-separator\">\n                                    <PlusCircleIcon\n                                        class=\"w-5 flex-shrink-0\"></PlusCircleIcon>\n                                    <span\n                                    >Add \"{{ searchValue }}\" as a new\n                                    Project</span\n                                    >\n                                </div>\n                            </div>\n                        </ComboboxViewport>\n                    </ComboboxContent>\n                </ComboboxRoot>\n            </UseFocusTrap>\n        </template>\n    </Dropdown>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport TextInput from '@/packages/ui/src/Input/TextInput.vue';\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport DialogModal from '@/packages/ui/src/DialogModal.vue';\nimport { ref, watch } from \"vue\";\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport { useFocus } from '@vueuse/core';\nimport { useTasksStore } from '@/utils/useTasks';\nimport ProjectDropdown from '@/Components/Common/Project/ProjectDropdown.vue';\nimport EstimatedTimeSection from '@/packages/ui/src/EstimatedTimeSection.vue';\nimport { isAllowedToPerformPremiumAction } from '@/utils/billing';\n\nconst { createTask } = useTasksStore();\nconst show = defineModel('show', { default: false });\nconst saving = ref(false);\n\nconst taskName = ref('');\nconst estimatedTime = ref<number | null>(null);\n\nconst props = defineProps<{\n    projectId: string;\n}>();\n\nconst taskProjectId = ref<string>(props.projectId);\n\nwatch(() => props.projectId, (value) => {\n    taskProjectId.value = value;\n});\n\nasync function submit() {\n    await createTask({\n        name: taskName.value,\n        project_id: taskProjectId.value,\n        estimated_time: estimatedTime.value,\n    });\n    show.value = false;\n    taskName.value = '';\n}\n\nconst taskNameInput = ref<HTMLInputElement | null>(null);\n\nuseFocus(taskNameInput, { initialValue: true });\n</script>\n\n<template>\n    <DialogModal closeable :show=\"show\" @close=\"show = false\">\n        <template #title>\n            <div class=\"flex space-x-2\">\n                <span> Create Task </span>\n            </div>\n        </template>\n\n        <template #content>\n            <div class=\"flex items-center space-x-4\">\n                <div class=\"col-span-6 sm:col-span-4 flex-1\">\n                    <TextInput\n                        id=\"taskName\"\n                        ref=\"taskNameInput\"\n                        v-model=\"taskName\"\n                        type=\"text\"\n                        placeholder=\"Task Name\"\n                        class=\"block w-full\"\n                        required\n                        autocomplete=\"taskName\"\n                        @keydown.enter=\"submit()\" />\n                </div>\n                <div class=\"col-span-6 sm:col-span-4\">\n                    <ProjectDropdown v-model=\"taskProjectId\"></ProjectDropdown>\n                </div>\n            </div>\n            <EstimatedTimeSection\n                v-if=\"isAllowedToPerformPremiumAction()\"\n                v-model=\"estimatedTime\"\n                @submit=\"submit()\"></EstimatedTimeSection>\n        </template>\n        <template #footer>\n            <SecondaryButton @click=\"show = false\"> Cancel </SecondaryButton>\n            <PrimaryButton\n                class=\"ms-3\"\n                :class=\"{ 'opacity-25': saving }\"\n                :disabled=\"saving\"\n                @click=\"submit\">\n                Create Task\n            </PrimaryButton>\n        </template>\n    </DialogModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport {\n    TrashIcon,\n    PencilSquareIcon,\n    CheckCircleIcon,\n} from '@heroicons/vue/20/solid';\nimport type { Task } from '@/packages/api/src';\nimport { canDeleteTasks, canUpdateTasks } from '@/utils/permissions';\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger,\n} from '@/Components/ui/dropdown-menu';\n\nconst emit = defineEmits<{\n    delete: [];\n    edit: [];\n    done: [];\n}>();\nconst props = defineProps<{\n    task: Task;\n}>();\n</script>\n\n<template>\n    <DropdownMenu>\n        <DropdownMenuTrigger as-child>\n            <button\n                class=\"focus-visible:outline-none focus-visible:bg-card-background rounded-full focus-visible:ring-2 focus-visible:ring-ring focus-visible:opacity-100 hover:bg-card-background group-hover:opacity-100 opacity-20 transition-opacity text-text-secondary\"\n                :aria-label=\"'Actions for Task ' + props.task.name\">\n                <svg\n                    class=\"h-8 w-8 p-1 rounded-full\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"1.5\"\n                        d=\"M12 5.92A.96.96 0 1 0 12 4a.96.96 0 0 0 0 1.92m0 7.04a.96.96 0 1 0 0-1.92a.96.96 0 0 0 0 1.92M12 20a.96.96 0 1 0 0-1.92a.96.96 0 0 0 0 1.92\" />\n                </svg>\n            </button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent class=\"min-w-[150px]\" align=\"end\">\n            <DropdownMenuItem\n                v-if=\"canUpdateTasks()\"\n                :aria-label=\"'Edit Task ' + props.task.name\"\n                data-testid=\"task_edit\"\n                class=\"flex items-center space-x-3 cursor-pointer\"\n                @click=\"emit('edit')\">\n                <PencilSquareIcon class=\"w-5 text-icon-active\" />\n                <span>Edit</span>\n            </DropdownMenuItem>\n            <DropdownMenuItem\n                v-if=\"canUpdateTasks()\"\n                :aria-label=\"'Mark Task ' + props.task.name + ' as done'\"\n                class=\"flex items-center space-x-3 cursor-pointer\"\n                @click=\"emit('done')\">\n                <CheckCircleIcon class=\"w-5 text-icon-active\" />\n                <span v-if=\"props.task.is_done\">Mark as active</span>\n                <span v-else>Mark as done</span>\n            </DropdownMenuItem>\n            <DropdownMenuItem\n                v-if=\"canDeleteTasks()\"\n                :aria-label=\"'Delete Task ' + props.task.name\"\n                data-testid=\"task_delete\"\n                class=\"flex items-center space-x-3 cursor-pointer text-destructive focus:text-destructive\"\n                @click=\"emit('delete')\">\n                <TrashIcon class=\"w-5\" />\n                <span>Delete</span>\n            </DropdownMenuItem>\n        </DropdownMenuContent>\n    </DropdownMenu>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport TextInput from '@/packages/ui/src/Input/TextInput.vue';\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport DialogModal from '@/packages/ui/src/DialogModal.vue';\nimport { ref } from 'vue';\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport { useFocus } from '@vueuse/core';\nimport { useTasksStore } from '@/utils/useTasks';\nimport type { Task, UpdateTaskBody } from '@/packages/api/src';\nimport EstimatedTimeSection from '@/packages/ui/src/EstimatedTimeSection.vue';\nimport { isAllowedToPerformPremiumAction } from '@/utils/billing';\n\nconst { updateTask } = useTasksStore();\nconst show = defineModel('show', { default: false });\nconst saving = ref(false);\n\nconst props = defineProps<{\n    task: Task;\n}>();\n\nconst taskBody = ref<UpdateTaskBody>({\n    name: props.task.name,\n    estimated_time: props.task.estimated_time,\n});\n\nasync function submit() {\n    await updateTask(props.task.id, taskBody.value);\n    show.value = false;\n}\n\nconst taskNameInput = ref<HTMLInputElement | null>(null);\n\nuseFocus(taskNameInput, { initialValue: true });\n</script>\n\n<template>\n    <DialogModal closeable :show=\"show\" @close=\"show = false\">\n        <template #title>\n            <div class=\"flex space-x-2\">\n                <span> Update Task </span>\n            </div>\n        </template>\n\n        <template #content>\n            <div class=\"flex items-center space-x-4\">\n                <div class=\"col-span-6 sm:col-span-4 flex-1\">\n                    <TextInput\n                        id=\"taskName\"\n                        ref=\"taskNameInput\"\n                        v-model=\"taskBody.name\"\n                        type=\"text\"\n                        placeholder=\"Task Name\"\n                        class=\"mt-1 block w-full\"\n                        required\n                        autocomplete=\"taskName\"\n                        @keydown.enter=\"submit()\" />\n                </div>\n            </div>\n            <EstimatedTimeSection\n                v-if=\"isAllowedToPerformPremiumAction()\"\n                v-model=\"taskBody.estimated_time\"\n                @submit=\"submit()\"></EstimatedTimeSection>\n        </template>\n        <template #footer>\n            <SecondaryButton @click=\"show = false\"> Cancel </SecondaryButton>\n            <PrimaryButton\n                class=\"ms-3\"\n                :class=\"{ 'opacity-25': saving }\"\n                :disabled=\"saving\"\n                @click=\"submit\">\n                Update Task\n            </PrimaryButton>\n        </template>\n    </DialogModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport type { Task } from '@/packages/api/src';\nimport { CheckCircleIcon } from '@heroicons/vue/20/solid';\nimport { useTasksStore } from '@/utils/useTasks';\nimport TaskMoreOptionsDropdown from '@/Components/Common/Task/TaskMoreOptionsDropdown.vue';\nimport TableRow from '@/Components/TableRow.vue';\nimport { canDeleteTasks } from '@/utils/permissions';\nimport TaskEditModal from '@/Components/Common/Task/TaskEditModal.vue';\nimport { ref, inject, type ComputedRef } from 'vue';\nimport { isAllowedToPerformPremiumAction } from '@/utils/billing';\nimport EstimatedTimeProgress from '@/packages/ui/src/EstimatedTimeProgress.vue';\nimport UpgradeBadge from '@/Components/Common/UpgradeBadge.vue';\nimport { formatHumanReadableDuration } from '../../../packages/ui/src/utils/time';\nimport type { Organization } from '@/packages/api/src';\n\nconst props = defineProps<{\n    task: Task;\n}>();\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\nfunction deleteTask() {\n    useTasksStore().deleteTask(props.task.id);\n}\n\nfunction markTaskAsDone() {\n    useTasksStore().updateTask(props.task.id, {\n        ...props.task,\n        is_done: !props.task.is_done,\n    });\n}\n\nconst showTaskEditModal = ref(false);\n</script>\n\n<template>\n    <TableRow>\n        <div\n            class=\"whitespace-nowrap min-w-0 flex items-center space-x-5 3xl:pl-12 py-4 pr-3 text-sm font-medium text-text-primary pl-4 sm:pl-6 lg:pl-8 3xl:pl-12\">\n            <span class=\"overflow-ellipsis overflow-hidden\">\n                {{ task.name }}\n            </span>\n        </div>\n        <div\n            class=\"whitespace-nowrap px-3 py-4 text-sm text-text-secondary flex space-x-1 items-center font-medium\">\n            <span v-if=\"task.spent_time\">\n                {{\n                    formatHumanReadableDuration(\n                        task.spent_time,\n                        organization?.interval_format,\n                        organization?.number_format\n                    )\n                }}\n            </span>\n            <span v-else> -- </span>\n        </div>\n        <div\n            class=\"whitespace-nowrap px-3 flex items-center text-sm text-text-secondary\">\n            <UpgradeBadge\n                v-if=\"!isAllowedToPerformPremiumAction()\"></UpgradeBadge>\n            <EstimatedTimeProgress\n                v-else-if=\"task.estimated_time\"\n                :estimated=\"task.estimated_time\"\n                :current=\"task.spent_time\"></EstimatedTimeProgress>\n            <span v-else> -- </span>\n        </div>\n        <div\n            class=\"whitespace-nowrap px-3 py-4 text-sm text-text-secondary flex space-x-1 items-center font-medium\">\n            <template v-if=\"task.is_done\">\n                <CheckCircleIcon class=\"w-5\"></CheckCircleIcon>\n                <span>Done</span>\n            </template>\n            <template v-else>\n                <span>Active</span>\n            </template>\n        </div>\n        <div\n            class=\"relative whitespace-nowrap flex items-center pl-3 text-right text-sm font-medium sm:pr-0 pr-4 sm:pr-6 lg:pr-8 3xl:pr-12\">\n            <TaskMoreOptionsDropdown\n                v-if=\"canDeleteTasks()\"\n                :task=\"task\"\n                @done=\"markTaskAsDone\"\n                @edit=\"showTaskEditModal = true\"\n                @delete=\"deleteTask\"></TaskMoreOptionsDropdown>\n        </div>\n        <TaskEditModal\n            v-model:show=\"showTaskEditModal\"\n            :task=\"task\"></TaskEditModal>\n    </TableRow>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport TableHeading from '@/Components/Common/TableHeading.vue';\n</script>\n\n<template>\n    <TableHeading>\n        <div\n            class=\"py-1.5 pr-3 text-left font-semibold text-text-primary pl-4 sm:pl-6 lg:pl-8 3xl:pl-12\">\n            Task Name\n        </div>\n        <div class=\"px-3 py-1.5 text-left font-semibold text-text-primary\">\n            Total Time\n        </div>\n        <div class=\"px-3 py-1.5 text-left font-semibold text-text-primary\">\n            Progress\n        </div>\n        <div class=\"px-3 py-1.5 text-left font-semibold text-text-primary\">Status</div>\n        <div class=\"relative py-1.5 pl-3 pr-4 sm:pr-6 lg:pr-8 3xl:pr-12\">\n            <span class=\"sr-only\">Edit</span>\n        </div>\n    </TableHeading>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport { PlusCircleIcon } from '@heroicons/vue/24/solid';\nimport { PlusIcon } from '@heroicons/vue/16/solid';\nimport { ref } from 'vue';\nimport TaskTableRow from '@/Components/Common/Task/TaskTableRow.vue';\nimport TaskTableHeading from '@/Components/Common/Task/TaskTableHeading.vue';\nimport TaskCreateModal from '@/Components/Common/Task/TaskCreateModal.vue';\nimport { canCreateTasks } from '@/utils/permissions';\nimport type { Task } from '@/packages/api/src';\n\nconst props = defineProps<{\n    projectId: string;\n    tasks: Task[];\n}>();\n\nconst createTask = ref(false);\n</script>\n\n<template>\n    <TaskCreateModal\n        v-model:show=\"createTask\"\n        :project-id=\"props.projectId\"></TaskCreateModal>\n    <div class=\"flow-root\">\n        <div class=\"inline-block min-w-full align-middle\">\n            <div\n                data-testid=\"task_table\"\n                role=\"table\"\n                class=\"grid min-w-full\"\n                style=\"\n                    grid-template-columns:\n                        1fr minmax(80px, auto) minmax(120px, auto) minmax(\n                            50px,\n                            auto\n                        )\n                        80px;\n                \">\n                <TaskTableHeading></TaskTableHeading>\n                <div\n                    v-if=\"tasks.length === 0\"\n                    class=\"col-span-5 py-24 text-center\">\n                    <PlusCircleIcon\n                        class=\"w-8 text-icon-default inline pb-2\"></PlusCircleIcon>\n                    <h3 class=\"text-text-primary font-semibold\">No tasks found</h3>\n                    <p v-if=\"canCreateTasks()\" class=\"pb-5\">\n                        Create your first task now!\n                    </p>\n                    <SecondaryButton\n                        v-if=\"canCreateTasks()\"\n                        :icon=\"PlusIcon\"\n                        @click=\"createTask = true\"\n                        >Create your First Task\n                    </SecondaryButton>\n                </div>\n                <template v-for=\"task in tasks\" :key=\"task.id\">\n                    <TaskTableRow :task=\"task\"></TaskTableRow>\n                </template>\n            </div>\n        </div>\n    </div>\n</template>\n","import { defineStore } from 'pinia';\nimport { api } from '@/packages/api/src';\nimport { computed, ref } from 'vue';\nimport type {\n    CreateProjectMemberBody,\n    ProjectMember,\n    ProjectMemberResponse,\n    UpdateProjectMemberBody,\n} from '@/packages/api/src';\nimport { getCurrentOrganizationId } from '@/utils/useUser';\nimport { useNotificationsStore } from '@/utils/notification';\n\nexport const useProjectMembersStore = defineStore('project-members', () => {\n    const projectMemberResponse = ref<ProjectMemberResponse | null>(null);\n    const { handleApiRequestNotifications } = useNotificationsStore();\n\n    async function fetchProjectMembers(projectId: string) {\n        const organization = getCurrentOrganizationId();\n        if (organization) {\n            projectMemberResponse.value = await handleApiRequestNotifications(\n                () =>\n                    api.getProjectMembers({\n                        params: {\n                            organization: organization,\n                            project: projectId,\n                        },\n                    }),\n                undefined,\n                'Failed to fetch project members'\n            );\n        }\n    }\n\n    async function createProjectMember(\n        projectId: string,\n        projectMemberBody: CreateProjectMemberBody\n    ) {\n        const organization = getCurrentOrganizationId();\n        if (organization) {\n            await handleApiRequestNotifications(\n                () =>\n                    api.createProjectMember(projectMemberBody, {\n                        params: {\n                            organization: organization,\n                            project: projectId,\n                        },\n                    }),\n                'Project member added successfully',\n                'Failed to add project member'\n            );\n            await fetchProjectMembers(projectId);\n        }\n    }\n\n    async function updateProjectMember(\n        projectMemberId: string,\n        projectMemberBody: UpdateProjectMemberBody\n    ) {\n        const organization = getCurrentOrganizationId();\n        if (organization) {\n            const response = await handleApiRequestNotifications(\n                () =>\n                    api.updateProjectMember(projectMemberBody, {\n                        params: {\n                            organization: organization,\n                            projectMember: projectMemberId,\n                        },\n                    }),\n                'Project member updated successfully',\n                'Failed to update project member'\n            );\n            await fetchProjectMembers(response.data.project_id);\n        }\n    }\n\n    async function deleteProjectMember(\n        projectId: string,\n        projectMemberId: string\n    ) {\n        const organizationId = getCurrentOrganizationId();\n        if (organizationId) {\n            await handleApiRequestNotifications(\n                () =>\n                    api.deleteProjectMember(undefined, {\n                        params: {\n                            organization: organizationId,\n                            projectMember: projectMemberId,\n                        },\n                    }),\n                'Project member removed successfully',\n                'Failed to remove project member'\n            );\n            await fetchProjectMembers(projectId);\n        }\n    }\n\n    const projectMembers = computed<ProjectMember[]>(\n        () => projectMemberResponse.value?.data || []\n    );\n\n    return {\n        projectMembers,\n        fetchProjectMembers,\n        createProjectMember,\n        deleteProjectMember,\n        updateProjectMember,\n    };\n});\n","<script setup lang=\"ts\">\nimport { TrashIcon, PencilSquareIcon } from '@heroicons/vue/20/solid';\nimport type { ProjectMember } from '@/packages/api/src';\nimport { useMembersStore } from '@/utils/useMembers';\nimport { storeToRefs } from 'pinia';\nimport { computed } from 'vue';\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger,\n} from '@/Components/ui/dropdown-menu';\n\nconst emit = defineEmits<{\n    delete: [];\n    edit: [];\n}>();\nconst props = defineProps<{\n    projectMember: ProjectMember;\n}>();\n\nconst { members } = storeToRefs(useMembersStore());\n\nconst currentMember = computed(() => {\n    return members.value.find(\n        (member) => member.id === props.projectMember.user_id\n    );\n});\n</script>\n\n<template>\n    <DropdownMenu>\n        <DropdownMenuTrigger as-child>\n            <button\n                class=\"focus-visible:outline-none focus-visible:bg-card-background rounded-full focus-visible:ring-2 focus-visible:ring-ring focus-visible:opacity-100 hover:bg-card-background group-hover:opacity-100 opacity-20 transition-opacity text-text-secondary\"\n                :aria-label=\"'Actions for Project Member ' + currentMember?.name\">\n                <svg\n                    class=\"h-8 w-8 p-1 rounded-full\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"1.5\"\n                        d=\"M12 5.92A.96.96 0 1 0 12 4a.96.96 0 0 0 0 1.92m0 7.04a.96.96 0 1 0 0-1.92a.96.96 0 0 0 0 1.92M12 20a.96.96 0 1 0 0-1.92a.96.96 0 0 0 0 1.92\" />\n                </svg>\n            </button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent class=\"min-w-[150px]\" align=\"end\">\n            <DropdownMenuItem\n                :aria-label=\"'Edit Project Member ' + currentMember?.name\"\n                class=\"flex items-center space-x-3 cursor-pointer\"\n                @click.prevent=\"emit('edit')\">\n                <PencilSquareIcon class=\"w-5 text-icon-active\" />\n                <span>Edit</span>\n            </DropdownMenuItem>\n            <DropdownMenuItem\n                :aria-label=\"'Delete Project Member ' + currentMember?.name\"\n                data-testid=\"project_delete\"\n                class=\"flex items-center space-x-3 cursor-pointer text-destructive focus:text-destructive\"\n                @click.prevent=\"emit('delete')\">\n                <TrashIcon class=\"w-5\" />\n                <span>Remove from Team</span>\n            </DropdownMenuItem>\n        </DropdownMenuContent>\n    </DropdownMenu>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { getOrganizationCurrencyString } from '@/utils/money';\nimport BillableRateModal from '@/packages/ui/src/BillableRateModal.vue';\nimport { formatCents } from '@/packages/ui/src/utils/money';\nimport { inject, type ComputedRef } from 'vue';\nimport type { Organization } from '@/packages/api/src';\n\nconst show = defineModel('show', { default: false });\nconst saving = defineModel('saving', { default: false });\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\ndefineProps<{\n    newBillableRate?: number | null;\n    memberName?: string;\n}>();\n\ndefineEmits<{\n    submit: [];\n}>();\n</script>\n\n<template>\n    <BillableRateModal\n        v-model:show=\"show\"\n        v-model:saving=\"saving\"\n        title=\"Update Project Member Billable Rate\"\n        @submit=\"$emit('submit')\">\n        <p class=\"py-1 text-center\">\n            The billable rate of {{ memberName }} will be updated to\n            <strong>{{\n                newBillableRate\n                    ? formatCents(\n                          newBillableRate,\n                          getOrganizationCurrencyString(),\n                          organization?.currency_format,\n                          organization?.currency_symbol,\n                          organization?.number_format\n                      )\n                    : ' the default rate of the project'\n            }}</strong\n            >.\n        </p>\n        <p class=\"py-1 text-center font-semibold max-w-md mx-auto\">\n            Do you want to update all existing time entries, where the project\n            member billable rate applies as well?\n        </p>\n    </BillableRateModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport DialogModal from '@/packages/ui/src/DialogModal.vue';\nimport { ref, watch } from 'vue';\nimport type {\n    ProjectMember,\n    UpdateProjectMemberBody,\n} from '@/packages/api/src';\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport { useFocus } from '@vueuse/core';\nimport { useProjectMembersStore } from '@/utils/useProjectMembers';\nimport BillableRateInput from '@/packages/ui/src/Input/BillableRateInput.vue';\nimport { UserIcon } from '@heroicons/vue/24/solid';\nimport ProjectMemberBillableRateModal from '@/Components/Common/ProjectMember/ProjectMemberBillableRateModal.vue';\nimport InputLabel from '@/packages/ui/src/Input/InputLabel.vue';\nimport { getOrganizationCurrencyString } from '@/utils/money';\nconst { updateProjectMember } = useProjectMembersStore();\n\nconst show = defineModel('show', { default: false });\nconst saving = ref(false);\n\nconst props = defineProps<{\n    projectMember: ProjectMember;\n    name?: string;\n}>();\n\nconst projectMemberBody = ref<UpdateProjectMemberBody>({\n    billable_rate: props.projectMember.billable_rate,\n});\nconst showBillableRateModal = ref(false);\nasync function submit() {\n    if (\n        props.projectMember.billable_rate !==\n        projectMemberBody.value.billable_rate\n    ) {\n        // make sure that the alert modal is not immediately submitted when user presses enter\n        setTimeout(() => {\n            showBillableRateModal.value = true;\n        }, 0);\n        return;\n    }\n    await updateProjectMember(props.projectMember.id, projectMemberBody.value);\n    show.value = false;\n    projectMemberBody.value = {\n        billable_rate: null,\n    };\n}\n\nasync function submitBillableRate() {\n    await updateProjectMember(props.projectMember.id, projectMemberBody.value);\n    show.value = false;\n    showBillableRateModal.value = false;\n}\n\nwatch(\n    () => show.value,\n    (value) => {\n        if (value) {\n            projectMemberBody.value = {\n                billable_rate: props.projectMember.billable_rate,\n            };\n        }\n    }\n);\n\nconst projectNameInput = ref<HTMLInputElement | null>(null);\n\nuseFocus(projectNameInput, { initialValue: true });\n</script>\n\n<template>\n    <DialogModal closeable :show=\"show\" @close=\"show = false\">\n        <template #title>\n            <div class=\"flex space-x-2\">\n                <span>Edit Project Member</span>\n            </div>\n        </template>\n\n        <template #content>\n            <ProjectMemberBillableRateModal\n                v-model:show=\"showBillableRateModal\"\n                :member-name=\"props.name\"\n                :new-billable-rate=\"projectMemberBody.billable_rate\"\n                @close=\"showBillableRateModal = false\"\n                @submit=\"submitBillableRate\"></ProjectMemberBillableRateModal>\n            <div class=\"grid grid-cols-3 items-center space-x-4\">\n                <div\n                    class=\"col-span-3 sm:col-span-2 space-x-2 flex items-center\">\n                    <UserIcon class=\"w-4 text-text-secondary\"></UserIcon>\n                    <span>{{ props.name }}</span>\n                </div>\n                <div class=\"col-span-3 sm:col-span-1 flex-1\">\n                    <InputLabel\n                        for=\"billable_rate\"\n                        class=\"mb-2\"\n                        value=\"Billable Rate\"></InputLabel>\n                    <BillableRateInput\n                        v-model=\"\n                            projectMemberBody.billable_rate\n                        \"\n                        :currency=\"getOrganizationCurrencyString()\"\n                        name=\"billable_rate\"\n                        @keydown.enter=\"submit\"></BillableRateInput>\n                </div>\n            </div>\n        </template>\n        <template #footer>\n            <SecondaryButton @click=\"show = false\">Cancel</SecondaryButton>\n            <PrimaryButton\n                class=\"ms-3\"\n                :class=\"{ 'opacity-25': saving }\"\n                :disabled=\"saving\"\n                @click=\"submit\">\n                Update Project Member\n            </PrimaryButton>\n        </template>\n    </DialogModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport type { ProjectMember } from '@/packages/api/src';\nimport { computed, ref, inject, type ComputedRef } from 'vue';\nimport { storeToRefs } from 'pinia';\nimport TableRow from '@/Components/TableRow.vue';\nimport { useMembersStore } from '@/utils/useMembers';\nimport { useProjectMembersStore } from '@/utils/useProjectMembers';\nimport ProjectMemberMoreOptionsDropdown from '@/Components/Common/ProjectMember/ProjectMemberMoreOptionsDropdown.vue';\nimport { formatCents } from '@/packages/ui/src/utils/money';\nimport { capitalizeFirstLetter } from '@/utils/format';\nimport ProjectMemberEditModal from '@/Components/Common/ProjectMember/ProjectMemberEditModal.vue';\nimport { getOrganizationCurrencyString } from '@/utils/money';\nimport type { Organization } from '@/packages/api/src';\n\nconst props = defineProps<{\n    projectMember: ProjectMember;\n}>();\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\nfunction deleteProjectMember() {\n    useProjectMembersStore().deleteProjectMember(\n        props.projectMember.project_id,\n        props.projectMember.id\n    );\n}\n\nfunction editProjectMember() {\n    showEditModal.value = true;\n}\n\nconst { members } = storeToRefs(useMembersStore());\nconst member = computed(() => {\n    return members.value.find(\n        (member) => member.id === props.projectMember.member_id\n    );\n});\nconst showEditModal = ref(false);\n</script>\n\n<template>\n    <TableRow>\n        <ProjectMemberEditModal\n            v-model:show=\"showEditModal\"\n            :name=\"member?.name\"\n            :project-member=\"projectMember\"></ProjectMemberEditModal>\n        <div\n            class=\"whitespace-nowrap flex items-center space-x-5 3xl:pl-12 py-4 pr-3 text-sm font-medium text-text-primary pl-4 sm:pl-6 lg:pl-8 3xl:pl-12\">\n            <span>\n                {{ member?.name }}\n            </span>\n        </div>\n        <div class=\"whitespace-nowrap px-3 py-4 text-sm text-text-secondary\">\n            {{\n                projectMember.billable_rate\n                    ? formatCents(\n                          projectMember.billable_rate,\n                          getOrganizationCurrencyString(),\n                          organization?.currency_format,\n                          organization?.currency_symbol,\n                          organization?.number_format\n                      )\n                    : '--'\n            }}\n        </div>\n        <div class=\"whitespace-nowrap px-3 py-4 text-sm text-text-secondary\">\n            {{ capitalizeFirstLetter(member?.role ?? '') }}\n        </div>\n        <div\n            class=\"relative whitespace-nowrap flex items-center pl-3 text-right text-sm font-medium sm:pr-0 pr-4 sm:pr-6 lg:pr-8 3xl:pr-12\">\n            <ProjectMemberMoreOptionsDropdown\n                :project-member=\"projectMember\"\n                @delete=\"deleteProjectMember\"\n                @edit=\"editProjectMember\"></ProjectMemberMoreOptionsDropdown>\n        </div>\n    </TableRow>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport TableHeading from '@/Components/Common/TableHeading.vue';\n</script>\n\n<template>\n    <TableHeading>\n        <div\n            class=\"py-1.5 pr-3 text-left font-semibold text-text-primary pl-4 sm:pl-6 lg:pl-8 3xl:pl-12\">\n            Name\n        </div>\n        <div class=\"px-3 py-1.5 text-left font-semibold text-text-primary\">\n            Billable Rate\n        </div>\n        <div class=\"px-3 py-1.5 text-left font-semibold text-text-primary\">Role</div>\n        <div class=\"relative py-1.5 pl-3 pr-4 sm:pr-6 lg:pr-8 3xl:pr-12\">\n            <span class=\"sr-only\">Edit</span>\n        </div>\n    </TableHeading>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport DialogModal from '@/packages/ui/src/DialogModal.vue';\nimport { ref } from 'vue';\nimport type {\n    CreateProjectMemberBody,\n    ProjectMember,\n} from '@/packages/api/src';\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport { useFocus } from '@vueuse/core';\nimport { useProjectMembersStore } from '@/utils/useProjectMembers';\nimport MemberCombobox from '@/Components/Common/Member/MemberCombobox.vue';\nimport BillableRateInput from '@/packages/ui/src/Input/BillableRateInput.vue';\nimport { getOrganizationCurrencyString } from '@/utils/money';\nconst { createProjectMember } = useProjectMembersStore();\nconst show = defineModel('show', { default: false });\nconst saving = ref(false);\n\nconst props = defineProps<{\n    projectId: string;\n    existingMembers: ProjectMember[];\n}>();\n\nconst projectMember = ref<CreateProjectMemberBody>({\n    member_id: '',\n    billable_rate: null,\n});\n\nasync function submit() {\n    await createProjectMember(props.projectId, projectMember.value);\n    show.value = false;\n    projectMember.value = {\n        member_id: '',\n        billable_rate: null,\n    };\n}\n\nconst projectNameInput = ref<HTMLInputElement | null>(null);\n\nuseFocus(projectNameInput, { initialValue: true });\n</script>\n\n<template>\n    <DialogModal closeable :show=\"show\" @close=\"show = false\">\n        <template #title>\n            <div class=\"flex space-x-2\">\n                <span>Add Project Member</span>\n            </div>\n        </template>\n\n        <template #content>\n            <div class=\"grid grid-cols-3 items-center space-x-4\">\n                <div class=\"col-span-3 sm:col-span-2\">\n                    <MemberCombobox\n                        v-model=\"projectMember.member_id\"\n                        :hidden-members=\"props.existingMembers\"></MemberCombobox>\n                </div>\n                <div class=\"col-span-3 sm:col-span-1 flex-1\">\n                    <BillableRateInput\n                        v-model=\"\n                            projectMember.billable_rate\n                        \"\n                        name=\"billable_rate\"\n                        :currency=\"getOrganizationCurrencyString()\"></BillableRateInput>\n                </div>\n            </div>\n        </template>\n        <template #footer>\n            <SecondaryButton @click=\"show = false\">Cancel</SecondaryButton>\n            <PrimaryButton\n                class=\"ms-3\"\n                :class=\"{ 'opacity-25': saving }\"\n                :disabled=\"saving\"\n                @click=\"submit\">\n                Add Project Member\n            </PrimaryButton>\n        </template>\n    </DialogModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport { PlusIcon } from '@heroicons/vue/16/solid';\nimport { ref } from 'vue';\nimport ProjectMemberTableRow from '@/Components/Common/ProjectMember/ProjectMemberTableRow.vue';\nimport { UserGroupIcon } from '@heroicons/vue/24/solid';\nimport ProjectMemberTableHeading from '@/Components/Common/ProjectMember/ProjectMemberTableHeading.vue';\nimport ProjectMemberCreateModal from '@/Components/Common/ProjectMember/ProjectMemberCreateModal.vue';\nimport type { ProjectMember } from '@/packages/api/src';\n\ndefineProps<{\n    projectId: string;\n    projectMembers: ProjectMember[];\n}>();\n\nconst createProjectMember = ref(false);\n</script>\n\n<template>\n    <ProjectMemberCreateModal\n        v-model:show=\"createProjectMember\"\n        :existing-members=\"projectMembers\"\n        :project-id=\"projectId\"></ProjectMemberCreateModal>\n    <div class=\"flow-root\">\n        <div class=\"inline-block min-w-full align-middle\">\n            <div\n                data-testid=\"project_member_table\"\n                class=\"grid min-w-full\"\n                style=\"grid-template-columns: 1fr 150px 150px 80px\">\n                <ProjectMemberTableHeading></ProjectMemberTableHeading>\n                <div\n                    v-if=\"projectMembers.length === 0\"\n                    class=\"col-span-5 py-24 text-center\">\n                    <UserGroupIcon\n                        class=\"w-8 text-icon-default inline pb-2\"></UserGroupIcon>\n                    <h3 class=\"text-text-primary font-semibold\">No project members</h3>\n                    <p class=\"pb-5\">Add the first project member!</p>\n                    <SecondaryButton\n                        :icon=\"PlusIcon\"\n                        @click=\"createProjectMember = true\"\n                        >Add a new Project Member\n                    </SecondaryButton>\n                </div>\n                <template\n                    v-for=\"projectMember in projectMembers\"\n                    :key=\"projectMember.id\">\n                    <ProjectMemberTableRow\n                        :project-member=\"projectMember\"></ProjectMemberTableRow>\n                </template>\n            </div>\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport MainContainer from '@/packages/ui/src/MainContainer.vue';\nimport AppLayout from '@/Layouts/AppLayout.vue';\nimport { FolderIcon, PlusIcon } from '@heroicons/vue/16/solid';\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport { computed, onMounted, ref, inject, type ComputedRef } from 'vue';\nimport { useProjectsStore } from '@/utils/useProjects';\nimport { storeToRefs } from 'pinia';\nimport {\n    ChevronRightIcon,\n    CheckCircleIcon,\n    UserGroupIcon,\n    PencilSquareIcon,\n} from '@heroicons/vue/20/solid';\n\nimport { Link } from '@inertiajs/vue3';\nimport TaskCreateModal from '@/Components/Common/Task/TaskCreateModal.vue';\nimport TaskTable from '@/Components/Common/Task/TaskTable.vue';\nimport CardTitle from '@/packages/ui/src/CardTitle.vue';\nimport Card from '@/Components/Common/Card.vue';\nimport ProjectMemberTable from '@/Components/Common/ProjectMember/ProjectMemberTable.vue';\nimport ProjectMemberCreateModal from '@/Components/Common/ProjectMember/ProjectMemberCreateModal.vue';\nimport { useProjectMembersStore } from '@/utils/useProjectMembers';\nimport {\n    canCreateProjects,\n    canCreateTasks,\n    canViewProjectMembers,\n} from '@/utils/permissions';\nimport TabBarItem from '@/Components/Common/TabBar/TabBarItem.vue';\nimport TabBar from '@/Components/Common/TabBar/TabBar.vue';\nimport { useTasksStore } from '@/utils/useTasks';\nimport ProjectEditModal from '@/Components/Common/Project/ProjectEditModal.vue';\nimport { Badge } from '@/packages/ui/src';\nimport { formatCents } from '../packages/ui/src/utils/money';\nimport { getOrganizationCurrencyString } from '../utils/money';\nimport type { Organization } from '@/packages/api/src';\n\nconst { projects } = storeToRefs(useProjectsStore());\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\nconst project = computed(() => {\n    return (\n        projects.value.find(\n            (project) => project.id === route().params.project\n        ) ?? null\n    );\n});\nconst createTask = ref(false);\nconst createProjectMember = ref(false);\nconst projectId = route()?.params?.project as string;\n\nconst { projectMembers } = storeToRefs(useProjectMembersStore());\n\nonMounted(() => {\n    if (canViewProjectMembers()) {\n        useProjectMembersStore().fetchProjectMembers(projectId);\n    }\n    useTasksStore().fetchTasks();\n});\n\nconst showEditProjectModal = ref(false);\n\nconst activeTab = ref<'active' | 'done'>('active');\n\nconst { tasks } = storeToRefs(useTasksStore());\n\nconst shownTasks = computed(() => {\n    return tasks.value.filter((task) => {\n        if (activeTab.value === 'active') {\n            return task.project_id === projectId && !task.is_done;\n        }\n        return task.project_id === projectId && task.is_done;\n    });\n});\n</script>\n\n<template>\n    <AppLayout title=\"Projects\" data-testid=\"projects_view\">\n        <MainContainer\n            class=\"py-5 border-b border-default-background-separator flex justify-between items-center\">\n            <nav class=\"flex\" aria-label=\"Breadcrumb\">\n                <ol role=\"list\" class=\"flex items-center space-x-2\">\n                    <li>\n                        <div class=\"flex items-center space-x-6\">\n                            <Link\n                                :href=\"route('projects')\"\n                                class=\"flex items-center space-x-2.5\">\n                                <FolderIcon\n                                    class=\"w-6 text-icon-default\"></FolderIcon>\n                                <span class=\"font-medium\">Projects</span>\n                            </Link>\n                        </div>\n                    </li>\n                    <li>\n                        <div\n                            class=\"flex items-center space-x-3 text-text-primary font-semibold text-base\">\n                            <ChevronRightIcon\n                                class=\"h-5 w-5 flex-shrink-0 text-text-secondary\"\n                                aria-hidden=\"true\" />\n                            <div class=\"flex space-x-3 items-center\">\n                                <div\n                                    :style=\"{\n                                        backgroundColor: project?.color,\n                                        boxShadow: `var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) ${project?.color}30`,\n                                    }\"\n                                    class=\"w-3 h-3 rounded-full\"></div>\n                                <span>{{ project?.name }}</span>\n                            </div>\n                        </div>\n                    </li>\n                </ol>\n                <div class=\"px-4\">\n                    <Badge v-if=\"project?.billable_rate\">\n                        {{\n                            formatCents(\n                                project?.billable_rate ?? 0,\n                                getOrganizationCurrencyString(),\n                                organization?.currency_format,\n                                organization?.currency_symbol,\n                                organization?.number_format\n                            )\n                        }}\n                        / h\n                    </Badge>\n                    <Badge\n                        v-if=\"project?.is_billable && !project?.billable_rate\">\n                        Default Rate\n                    </Badge>\n                    <Badge v-if=\"!project?.is_billable\"> Non-Billable </Badge>\n                </div>\n            </nav>\n            <div>\n                <SecondaryButton\n                    v-if=\"canCreateProjects()\"\n                    :icon=\"PencilSquareIcon\"\n                    @click=\"showEditProjectModal = true\">\n                    Edit Project\n                </SecondaryButton>\n                <ProjectEditModal\n                    v-if=\"project\"\n                    v-model:show=\"showEditProjectModal\"\n                    :original-project=\"project\"></ProjectEditModal>\n            </div>\n        </MainContainer>\n        <MainContainer>\n            <div class=\"grid lg:grid-cols-2 gap-x-6 pt-6\">\n                <div>\n                    <CardTitle title=\"Tasks\" :icon=\"CheckCircleIcon\">\n                        <template #actions>\n                            <div\n                                class=\"w-full items-center flex justify-between\">\n                                <div class=\"pl-6\">\n                                    <TabBar v-model=\"activeTab\">\n                                        <TabBarItem value=\"active\"\n                                            >Active\n                                        </TabBarItem>\n                                        <TabBarItem value=\"done\"\n                                            >Done\n                                        </TabBarItem>\n                                    </TabBar>\n                                </div>\n                                <SecondaryButton\n                                    v-if=\"canCreateTasks()\"\n                                    :icon=\"PlusIcon\"\n                                    @click=\"createTask = true\"\n                                    >Create Task\n                                </SecondaryButton>\n                                <TaskCreateModal\n                                    v-model:show=\"createTask\"\n                                    :project-id=\"projectId\"></TaskCreateModal>\n                            </div>\n                        </template>\n                    </CardTitle>\n                    <Card>\n                        <TaskTable\n                            :tasks=\"shownTasks\"\n                            :project-id=\"projectId\"></TaskTable>\n                    </Card>\n                </div>\n                <div v-if=\"canViewProjectMembers()\">\n                    <CardTitle title=\"Project Members\" :icon=\"UserGroupIcon\">\n                        <template #actions>\n                            <SecondaryButton\n                                :icon=\"PlusIcon\"\n                                @click=\"createProjectMember = true\">\n                                Add Member\n                            </SecondaryButton>\n                            <ProjectMemberCreateModal\n                                v-model:show=\"createProjectMember\"\n                                :project-id=\"projectId\"\n                                :existing-members=\"\n                                    projectMembers\n                                \"></ProjectMemberCreateModal>\n                        </template>\n                    </CardTitle>\n                    <Card>\n                        <ProjectMemberTable\n                            :project-members=\"projectMembers\"\n                            :project-id=\"projectId\"></ProjectMemberTable>\n                    </Card>\n                </div>\n            </div>\n        </MainContainer>\n    </AppLayout>\n</template>\n"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","searchValue","ref","searchInput","model","_useModel","open","projectsStore","useProjectsStore","emit","__emit","projects","storeToRefs","projectDropdownTrigger","shownProjects","computed","project","_b","_a","page","usePage","addProjectIfNoneExists","response","api","getRandomColor","watch","isOpen","nextTick","iteratingProject","currentProject","isProjectSelected","selectedProjectName","selectedProjectColor","updateValue","_createBlock","Dropdown","$event","_createVNode","ProjectBadge","border","_unref","UseFocusTrap","ComboboxRoot","ComboboxAnchor","ComboboxInput","ComboboxContent","ComboboxViewport","_Fragment","_renderList","ComboboxItem","ProjectDropdownItem","_hoisted_1","_hoisted_2","PlusCircleIcon","_toDisplayString","createTask","useTasksStore","show","saving","taskName","estimatedTime","props","__props","taskProjectId","value","submit","taskNameInput","useFocus","DialogModal","TextInput","_hoisted_3","ProjectDropdown","isAllowedToPerformPremiumAction","EstimatedTimeSection","SecondaryButton","PrimaryButton","_normalizeClass","DropdownMenu","DropdownMenuTrigger","DropdownMenuContent","canUpdateTasks","DropdownMenuItem","PencilSquareIcon","CheckCircleIcon","canDeleteTasks","TrashIcon","updateTask","taskBody","organization","inject","deleteTask","markTaskAsDone","showTaskEditModal","TableRow","task","formatHumanReadableDuration","_hoisted_6","EstimatedTimeProgress","UpgradeBadge","_hoisted_8","_hoisted_10","TaskMoreOptionsDropdown","TaskEditModal","TableHeading","TaskCreateModal","TaskTableHeading","tasks","_hoisted_4","canCreateTasks","_hoisted_5","PlusIcon","TaskTableRow","useProjectMembersStore","defineStore","projectMemberResponse","handleApiRequestNotifications","useNotificationsStore","fetchProjectMembers","projectId","getCurrentOrganizationId","createProjectMember","projectMemberBody","updateProjectMember","projectMemberId","deleteProjectMember","organizationId","members","useMembersStore","currentMember","member","BillableRateModal","$emit","memberName","newBillableRate","formatCents","getOrganizationCurrencyString","showBillableRateModal","submitBillableRate","projectNameInput","ProjectMemberBillableRateModal","UserIcon","InputLabel","BillableRateInput","editProjectMember","showEditModal","ProjectMemberEditModal","projectMember","_f","ProjectMemberMoreOptionsDropdown","MemberCombobox","ProjectMemberCreateModal","projectMembers","ProjectMemberTableHeading","UserGroupIcon","ProjectMemberTableRow","onMounted","canViewProjectMembers","showEditProjectModal","activeTab","shownTasks","AppLayout","MainContainer","Link","route","FolderIcon","ChevronRightIcon","_normalizeStyle","_c","_d","Badge","_e","_g","canCreateProjects","ProjectEditModal","_hoisted_7","CardTitle","_hoisted_9","TabBar","TabBarItem","Card","TaskTable","ProjectMemberTable"],"mappings":"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","x_google_ignoreList":[0]}