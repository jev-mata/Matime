{"version":3,"file":"Time-9-u3cM_U.js","sources":["../../../node_modules/@heroicons/vue/20/solid/esm/InformationCircleIcon.js","../../../resources/js/packages/ui/src/TimeEntry/TimeEntryAggregateRow.vue","../../../resources/js/packages/ui/src/TimeEntry/TimeEntryRowHeading.vue","../../../resources/js/packages/ui/src/TimeEntry/TimeEntryGroupedTable.vue","../../../resources/js/packages/ui/src/Input/DurationHumanInput.vue","../../../resources/js/packages/ui/src/TimeEntry/TimeEntryCreateModal.vue","../../../resources/js/Pages/Time.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-7-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9 9a.75.75 0 0 0 0 1.5h.253a.25.25 0 0 1 .244.304l-.459 2.066A1.75 1.75 0 0 0 10.747 15H11a.75.75 0 0 0 0-1.5h-.253a.25.25 0 0 1-.244-.304l.459-2.066A1.75 1.75 0 0 0 9.253 9H9Z\",\n      \"clip-rule\": \"evenodd\"\n    })\n  ]))\n}","<script setup lang=\"ts\">\nimport MainContainer from '@/packages/ui/src/MainContainer.vue';\nimport TimeTrackerStartStop from '../TimeTrackerStartStop.vue';\nimport type {\n    CreateClientBody,\n    CreateProjectBody,\n    Project,\n    Tag,\n    Task,\n    TimeEntry,\n    Client,\n    Organization,\n} from '@/packages/api/src';\nimport TimeEntryDescriptionInput from '@/packages/ui/src/TimeEntry/TimeEntryDescriptionInput.vue';\nimport TimeEntryRowTagDropdown from '@/packages/ui/src/TimeEntry/TimeEntryRowTagDropdown.vue';\nimport TimeEntryMoreOptionsDropdown from '@/packages/ui/src/TimeEntry/TimeEntryMoreOptionsDropdown.vue';\nimport TimeTrackerProjectTaskDropdown from '@/packages/ui/src/TimeTracker/TimeTrackerProjectTaskDropdown.vue';\nimport BillableToggleButton from '@/packages/ui/src/Input/BillableToggleButton.vue';\nimport { ref, inject, type ComputedRef } from 'vue';\nimport {\n    formatHumanReadableDuration,\n    formatStartEnd,\n} from '@/packages/ui/src/utils/time';\nimport TimeEntryRow from '@/packages/ui/src/TimeEntry/TimeEntryRow.vue';\nimport GroupedItemsCountButton from '@/packages/ui/src/GroupedItemsCountButton.vue';\nimport type { TimeEntriesGroupedByType } from '@/types/time-entries';\nimport { Checkbox } from '@/packages/ui/src';\nimport { twMerge } from 'tailwind-merge';\nconst props = defineProps<{\n    timeEntry: TimeEntriesGroupedByType;\n    projects: Project[];\n    tasks: Task[];\n    tags: Tag[];\n    clients: Client[];\n    createTag: (name: string) => Promise<Tag | undefined>;\n    createProject: (project: CreateProjectBody) => Promise<Project | undefined>;\n    createClient: (client: CreateClientBody) => Promise<Client | undefined>;\n    onStartStopClick: (timeEntry: TimeEntry) => void;\n    updateTimeEntries: (ids: string[], changes: Partial<TimeEntry>) => void;\n    updateTimeEntry: (timeEntry: TimeEntry) => void;\n    deleteTimeEntries: (timeEntries: TimeEntry[]) => void;\n    currency: string;\n    selectedTimeEntries: TimeEntry[];\n    enableEstimatedTime: boolean;\n    canCreateProject: boolean;\n}>();\nconst emit = defineEmits<{\n    selected: [TimeEntry[]];\n    unselected: [TimeEntry[]];\n}>();\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\nfunction updateTimeEntryDescription(description: string) {\n    props.updateTimeEntries(\n        props.timeEntry.timeEntries.map((timeEntry: TimeEntry) => timeEntry.id),\n        { description: description }\n    );\n}\n\nfunction updateTimeEntryTags(tags: string[]) {\n    props.updateTimeEntries(\n        props.timeEntry.timeEntries.map((timeEntry: TimeEntry) => timeEntry.id),\n        { tags: tags }\n    );\n}\n\nfunction updateTimeEntryBillable(billable: boolean) {\n    props.updateTimeEntries(\n        props.timeEntry.timeEntries.map((timeEntry: TimeEntry) => timeEntry.id),\n        { billable: billable }\n    );\n}\n\nfunction updateProjectAndTask(projectId: string, taskId: string) {\n    props.updateTimeEntries(\n        props.timeEntry.timeEntries.map((timeEntry: TimeEntry) => timeEntry.id),\n        { project_id: projectId, task_id: taskId }\n    );\n}\n\nconst expanded = ref(false);\n\nfunction onSelectChange(checked: boolean) {\n    if (checked) {\n        emit('selected', [...props.timeEntry.timeEntries]);\n    } else {\n        emit('unselected', [...props.timeEntry.timeEntries]);\n    }\n}\n</script>\n\n<template>\n    <div\n        class=\"border-b border-default-background-separator bg-row-background min-w-0 transition\"\n        data-testid=\"time_entry_row\">\n        <MainContainer class=\"min-w-0\">\n            <div\n                class=\"sm:flex py-1.5 items-center min-w-0 justify-between group\">\n                <div class=\"flex space-x-3 items-center min-w-0\">\n                    <Checkbox\n                        :checked=\"\n                            timeEntry.timeEntries.every(\n                                (aggregateTimeEntry: TimeEntry) =>\n                                    selectedTimeEntries.includes(\n                                        aggregateTimeEntry\n                                    )\n                            )\n                        \"\n                        @update:checked=\"onSelectChange\" />\n                    <div class=\"flex items-center min-w-0\">\n                        <GroupedItemsCountButton\n                            :expanded=\"expanded\"\n                            @click=\"expanded = !expanded\">\n                            {{ timeEntry?.timeEntries?.length }}\n                        </GroupedItemsCountButton>\n                        <TimeEntryDescriptionInput\n                            class=\"min-w-0 mr-4\"\n                            :model-value=\"timeEntry.description\"\n                            @changed=\"\n                                updateTimeEntryDescription\n                            \"></TimeEntryDescriptionInput>\n                        <TimeTrackerProjectTaskDropdown\n                            :clients\n                            :create-project\n                            :create-client\n                            :can-create-project\n                            :projects=\"projects\"\n                            :tasks=\"tasks\"\n                            :show-badge-border=\"false\"\n                            :project=\"timeEntry.project_id\"\n                            :enable-estimated-time\n                            :currency=\"currency\"\n                            :task=\"timeEntry.task_id\"\n                            @changed=\"\n                                updateProjectAndTask\n                            \"></TimeTrackerProjectTaskDropdown>\n                    </div>\n                </div>\n                <div class=\"flex items-center font-medium lg:space-x-2\">\n                    <TimeEntryRowTagDropdown\n                        :create-tag\n                        :tags=\"tags\"\n                        :model-value=\"timeEntry.tags\"\n                        @changed=\"\n                            updateTimeEntryTags\n                        \"></TimeEntryRowTagDropdown>\n                    <BillableToggleButton\n                        :model-value=\"timeEntry.billable\"\n                        class=\"opacity-50 focus-visible:opacity-100 group-hover:opacity-100\"\n                        size=\"small\"\n                        @changed=\"\n                            updateTimeEntryBillable\n                        \"></BillableToggleButton>\n                    <div class=\"flex-1\">\n                        <button\n                            :class=\"twMerge('hidden lg:block text-text-secondary w-[110px] px-1 py-1.5 bg-transparent text-center hover:bg-card-background rounded-lg border border-transparent hover:border-card-border text-sm font-medium focus-visible:outline-none focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:bg-tertiary', organization?.time_format === '12-hours' ? 'w-[160px]' : 'w-[110px]')\"\n                            @click=\"expanded = !expanded\">\n                            {{ formatStartEnd(timeEntry.start, timeEntry.end, organization?.time_format) }}\n                        </button>\n                    </div>\n                    <button\n                        class=\"text-text-primary min-w-[90px] px-2.5 py-1.5 bg-transparent text-right hover:bg-card-background rounded-lg border border-transparent hover:border-card-border text-sm font-semibold focus-visible:outline-none focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:bg-tertiary\"\n                        @click=\"expanded = !expanded\">\n                        {{\n                            formatHumanReadableDuration(\n                                timeEntry.duration ?? 0,\n                                organization?.interval_format,\n                                organization?.number_format\n                            )\n                        }}\n                    </button>\n\n                    <TimeTrackerStartStop\n                        :active=\"!!(timeEntry.start && !timeEntry.end)\"\n                        class=\"opacity-20 hidden sm:flex group-hover:opacity-100 focus-visible:opacity-100\"\n                        @changed=\"\n                            onStartStopClick(timeEntry)\n                        \"></TimeTrackerStartStop>\n                    <TimeEntryMoreOptionsDropdown\n                        @delete=\"\n                            deleteTimeEntries(timeEntry?.timeEntries ?? [])\n                        \"></TimeEntryMoreOptionsDropdown>\n                </div>\n            </div>\n        </MainContainer>\n        <div\n            v-if=\"expanded\"\n            class=\"w-full border-t border-default-background-separator bg-black/15\">\n            <TimeEntryRow\n                v-for=\"subEntry in timeEntry.timeEntries\"\n                :key=\"subEntry.id\"\n                :projects=\"projects\"\n                :enable-estimated-time\n                :can-create-project\n                :tasks=\"tasks\"\n                :selected=\"\n                    !!selectedTimeEntries.find(\n                        (filterEntry: TimeEntry) =>\n                            filterEntry.id === subEntry.id\n                    )\n                \"\n                :create-client\n                :clients\n                :create-project\n                :tags=\"tags\"\n                indent\n                :update-time-entry=\"\n                    (timeEntry: TimeEntry) => updateTimeEntry(timeEntry)\n                \"\n                :on-start-stop-click=\"() => onStartStopClick(subEntry)\"\n                :delete-time-entry=\"() => deleteTimeEntries([subEntry])\"\n                :currency=\"currency\"\n                :create-tag\n                :time-entry=\"subEntry\"\n                @selected=\"emit('selected', [subEntry])\"\n                @unselected=\"emit('unselected', [subEntry])\"></TimeEntryRow>\n        </div>\n    </div>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport MainContainer from '@/packages/ui/src/MainContainer.vue';\nimport {\n    formatDate,\n    formatHumanReadableDuration,\n    formatWeekday,\n} from '@/packages/ui/src/utils/time';\nimport Checkbox from '../Input/Checkbox.vue';\nimport { inject, type ComputedRef } from 'vue';\nimport type { Organization } from '@/packages/api/src';\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\ndefineProps<{\n    date: string;\n    duration: number;\n    checked: boolean;\n}>();\nconst emit = defineEmits<{\n    selectAll: [];\n    unselectAll: [];\n}>();\n\nfunction selectUnselectAll(value: boolean) {\n    if (value) {\n        emit('selectAll');\n    } else {\n        emit('unselectAll');\n    }\n}\n</script>\n\n<template>\n    <div\n        class=\"bg-row-heading-background border-t border-b border-row-heading-border py-1 text-xs sm:text-sm\">\n        <MainContainer>\n            <div class=\"flex group justify-between items-center\">\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"w-5\">\n                        <svg\n                            class=\"w-4 sm:w-5 text-icon-default group-hover:hidden block\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\">\n                            <g fill=\"none\">\n                                <path\n                                    d=\"m12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022m-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z\" />\n                                <path\n                                    fill=\"currentColor\"\n                                    d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7zm-5-9a1 1 0 0 1 1 1v1h2a2 2 0 0 1 2 2v3H3V7a2 2 0 0 1 2-2h2V4a1 1 0 0 1 2 0v1h6V4a1 1 0 0 1 1-1\" />\n                            </g>\n                        </svg>\n                        <Checkbox\n                            :checked=\"checked\"\n                            class=\"group-hover:block hidden\"\n                            @update:checked=\"selectUnselectAll\"></Checkbox>\n                    </div>\n                    <span class=\"font-semibold text-text-primary\">\n                        {{ formatWeekday(date) }}\n                    </span>\n                    <span class=\"font-semibold text-text-secondary\">\n                        {{ formatDate(date, organization?.date_format) }}\n                    </span>\n                </div>\n                <div class=\"text-text-secondary pr-[90px] lg:pr-[92px]\">\n                    <span class=\"font-semibold\">\n                        {{\n                            formatHumanReadableDuration(\n                                duration,\n                                organization?.interval_format,\n                                organization?.number_format\n                            )\n                        }}\n                    </span>\n                </div>\n            </div>\n        </MainContainer>\n    </div>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { ref, onMounted, watchEffect, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nimport type {\n    CreateClientBody,\n    CreateProjectBody,\n    CreateTimeEntryBody,\n    Project,\n    Tag,\n    Task,\n    TimeEntry,\n    Client,\n} from '@/packages/api/src';\nimport {\n    getDayJsInstance,\n    getLocalizedDateFromTimestamp,\n} from '@/packages/ui/src/utils/time';\nimport TimeEntryAggregateRow from '@/packages/ui/src/TimeEntry/TimeEntryAggregateRow.vue';\nimport TimeEntryRowHeading from '@/packages/ui/src/TimeEntry/TimeEntryRowHeading.vue';\nimport TimeEntryRow from '@/packages/ui/src/TimeEntry/TimeEntryRow.vue';\nimport type { TimeEntriesGroupedByType } from '@/types/time-entries';\nimport axios from 'axios';\n\nimport {\n    type TimeEntriesQueryParams,\n} from '@/packages/api/src';\nimport dayjs from 'dayjs';\nconst selectedTimeEntries = defineModel<TimeEntry[]>('selected', {\n    default: [],\n});\nconst props = defineProps<{\n    timeEntries: TimeEntry[];\n    projects: Project[];\n    tasks: Task[];\n    tags: Tag[];\n    clients: Client[];\n    loadEntries: () => Promise<void>;\n\n    createTag: (name: string) => Promise<Tag | undefined>;\n    updateTimeEntry: (entry: TimeEntry) => void;\n    updateTimeEntries: (ids: string[], changes: Partial<TimeEntry>) => void;\n    deleteTimeEntries: (entries: TimeEntry[]) => void;\n    createTimeEntry: (entry: Omit<CreateTimeEntryBody, 'member_id'>) => void;\n    createProject: (project: CreateProjectBody) => Promise<Project | undefined>;\n    createClient: (client: CreateClientBody) => Promise<Client | undefined>;\n    currency: string;\n    enableEstimatedTime: boolean;\n    canCreateProject: boolean;\n}>();\ntype GroupedTimeEntries = Record<\n    string, // biMonthKey\n    {\n        isApproved: boolean;\n        isSubmitted: boolean;\n        days: Record<string, TimeEntriesGroupedByType[]>; // daily breakdown\n    }\n>\nexport type TimesheetRecord = {\n    id: string;\n    user_id: string;\n    date_start: string;   // e.g. '2025-06-16'\n    date_end: string;     // e.g. '2025-06-30'\n    hours: string;        // stored as string, e.g. '29.11'\n    status: 'pending' | 'approved' | 'rejected'; // inferred enum\n    approved_at: string | null;\n    approved_by: string | null;\n    description: string | null;\n    created_at: string;\n    updated_at: string;\n};\n\nexport type IsSubmitted = {\n    isSubmitted: TimesheetRecord[]\n};\n\nfunction getBimonthlyKey(dateInput: string | Date): string {\n    const date = new Date(dateInput);\n    const year = date.getFullYear();\n\n    const month = new Intl.DateTimeFormat('en-US', { month: 'short' }).format(date); // \"Jan\", \"Feb\", etc.\n\n    const isFirstHalf = date.getDate() <= 15;\n    const start = isFirstHalf ? '1' : '16';\n    const end = isFirstHalf\n        ? '15'\n        : new Date(year, date.getMonth() + 1, 0).getDate().toString(); // Last day of the month\n\n    return `${month} ${year} (${start}-${end})`;\n}\n\n\nfunction isSameBimonthlyPeriod(entryDate: string | Date, submittedEntries: TimesheetRecord[]): boolean {\n    const entryKey = getBimonthlyKey(entryDate); \n    return submittedEntries.some((submission) => {\n        const submissionKey = getBimonthlyKey(submission.date_start);\n        return submissionKey === entryKey;\n    });\n}\n\n\nconst groupedTimeEntries = ref<GroupedTimeEntries>({});\nwatch(groupedTimeEntries, () => {\n    groupTimeEntriesFunc();\n});\nonMounted(async () => {\n    groupTimeEntriesFunc();\n\n})\nasync function groupTimeEntriesFunc() {\n    const grouped: GroupedTimeEntries = {}\n\n    const data = await getTimesheet() as IsSubmitted;\n    for (const entry of props.timeEntries) {\n        if (entry.end === null) continue\n\n        const date = getDayJsInstance()(entry.start);\n        const year = date.year();\n        const month = date.format('MMM'); // \"Jan\", \"Feb\", \"Mar\", etc.\n\n        const dayKey = date.format('MM-DD-YYYY');\n        const isFirstHalf = date.date() <= 15;\n        const startLabel = isFirstHalf ? '1' : '16';\n        const endLabel = isFirstHalf\n            ? '15'\n            : String(date.daysInMonth()) // Get last day of month\n\n        const biMonthKey = `${month} ${startLabel} - ${month}  ${endLabel}, ${year}`\n\n        if (!grouped[biMonthKey]) {\n            grouped[biMonthKey] = {\n                isApproved: false,\n                isSubmitted: isSameBimonthlyPeriod(entry.start, data.isSubmitted),\n                days: {}\n            }\n        }\n\n        if (!grouped[biMonthKey].days[dayKey]) {\n            grouped[biMonthKey].days[dayKey] = []\n        }\n        // Now find if this entry matches an existing grouped entry (by type/project/task)\n        const existingGroup = grouped[biMonthKey].days[dayKey]\n        const index = existingGroup.findIndex(\n            (e) =>\n                e.project_id === entry.project_id &&\n                e.task_id === entry.task_id &&\n                e.billable === entry.billable &&\n                e.description === entry.description\n        )\n\n        if (index !== -1) {\n            const group = existingGroup[index]\n            group.timeEntries.push(entry)\n            group.duration = (group.duration ?? 0) + (entry.duration ?? 0)\n\n            if (getDayJsInstance()(entry.start).isBefore(getDayJsInstance()(group.start))) {\n                group.start = entry.start\n            }\n            if (getDayJsInstance()(entry.end).isAfter(getDayJsInstance()(group.end))) {\n                group.end = entry.end\n            }\n        } else {\n            existingGroup.push({ ...entry, timeEntries: [entry] })\n        }\n    }\n    groupedTimeEntries.value = grouped;\n}\nfunction startTimeEntryFromExisting(entry: TimeEntry) {\n    props.createTimeEntry({\n        project_id: entry.project_id,\n        task_id: entry.task_id,\n        start: getDayJsInstance().utc().format(),\n        end: null,\n        billable: entry.billable,\n        description: entry.description,\n        tags: [...entry.tags],\n    });\n}\nfunction sumDuration(timeEntries: TimeEntry[]) {\n    return timeEntries.reduce((acc, entry) => acc + (entry?.duration ?? 0), 0);\n}\nfunction selectAllTimeEntries(value: TimeEntriesGroupedByType[]) {\n    for (const timeEntry of value) {\n        if ('timeEntries' in timeEntry) {\n            for (const subTimeEntry of timeEntry.timeEntries) {\n                selectedTimeEntries.value.push(subTimeEntry);\n            }\n        } else {\n            selectedTimeEntries.value.push(timeEntry);\n        }\n    }\n}\nfunction unselectAllTimeEntries(value: TimeEntriesGroupedByType[]) {\n    selectedTimeEntries.value = selectedTimeEntries.value.filter(\n        (timeEntry) => {\n            return !value.find(\n                (filterTimeEntry) =>\n                    filterTimeEntry.id === timeEntry.id ||\n                    filterTimeEntry.timeEntries?.find(\n                        (subTimeEntry) => subTimeEntry.id === timeEntry.id\n                    )\n            );\n        }\n    );\n}\nfunction getFirstDayKey(days: Record<string, any>) {\n    if (days == null)\n        return null;\n    const keys = Object.keys(days);\n    return keys.length ? keys[0] : null;\n}\n\nfunction SubmitBTN(date: Date | string | null) {\n    if (date == null)\n        return;\n    dayjs(date, 'MM-DD-YYYY');\n    window.location.href = `/time/submit?date=${date}`;\n}\nfunction unSubmitBTN(date: Date | string | null) {\n    if (date == null)\n        return;\n    dayjs(date, 'MM-DD-YYYY');\n    window.location.href = `/time/unsubmit?date=${date}`;\n}\nconst getTimesheet = async () => {\n\n    const response = await axios.get('/api/time/showAll', {\n        withCredentials: true,\n        headers: {\n            Accept: 'application/json',\n        }\n    });\n    const data = response.data;\n\n    return data;\n}\n</script>\n\n<template>\n\n    <div v-for=\"(bimonthly, bimonthlykey) in groupedTimeEntries\" :key=\"bimonthlykey\" class=\"\">\n        <div class=\" border border-1 border-gray-700 mt-5 border-b-4\">\n\n            <div class=\" bg-gray-900   border-1 p-1 \">\n\n                <button @click=\"SubmitBTN(getFirstDayKey(bimonthly.days))\" v-if=\"!bimonthly.isSubmitted\"\n                    class=\" p-2 border-1 mx-2 button text-blue-400\">\n                    submit\n                </button>\n                <button @click=\"unSubmitBTN(getFirstDayKey(bimonthly.days))\"\n                    v-if=\"!bimonthly.isApproved && bimonthly.isSubmitted\"\n                    class=\" p-2 border-1 mx-2 button text-blue-400\">\n                    unsubmit\n                </button>\n\n                {{ bimonthlykey }}\n                <span v-if=\"bimonthly.isApproved\" class=\"ml-4 bg-green-800 p-2 rounded-md\">Approved</span>\n                <span v-if=\"!bimonthly.isApproved && bimonthly.isSubmitted\"\n                    class=\"ml-4 bg-orange-700 p-2 rounded-md\">Pending</span>\n            </div>\n            <div v-for=\"(value, key) in bimonthly.days\" :key=\"key\" class=\"mb-5\">\n\n                <TimeEntryRowHeading :date=\"key\" :duration=\"sumDuration(value)\" :checked=\"value.every((timeEntry: TimeEntry) =>\n                    selectedTimeEntries.includes(timeEntry)\n                )\n                    \" @select-all=\"selectAllTimeEntries(value)\" @unselect-all=\"unselectAllTimeEntries(value)\">\n                </TimeEntryRowHeading>\n                <template v-for=\"entry in value\" :key=\"entry.id\">\n                    <TimeEntryAggregateRow v-if=\"'timeEntries' in entry && entry.timeEntries.length > 1\" :create-project\n                        :can-create-project :enable-estimated-time :selected-time-entries=\"selectedTimeEntries\"\n                        :create-client :projects=\"projects\" :tasks=\"tasks\" :tags=\"tags\" :clients\n                        :on-start-stop-click=\"startTimeEntryFromExisting\" :update-time-entries :update-time-entry\n                        :delete-time-entries :create-tag :currency=\"currency\" :time-entry=\"entry\" @selected=\"\n                            (timeEntries: TimeEntry[]) => {\n                                selectedTimeEntries = [\n                                    ...selectedTimeEntries,\n                                    ...timeEntries,\n                                ];\n                            }\n                        \" @unselected=\"\n                            (timeEntriesToUnselect: TimeEntry[]) => {\n                                selectedTimeEntries = selectedTimeEntries.filter(\n                                    (item: TimeEntry) =>\n                                        !timeEntriesToUnselect.find(\n                                            (filterEntry: TimeEntry) =>\n                                                filterEntry.id === item.id\n                                        )\n                                );\n                            }\n                        \"></TimeEntryAggregateRow>\n                    <TimeEntryRow v-else :create-client :enable-estimated-time :can-create-project :create-project\n                        :projects=\"projects\" :selected=\"!!selectedTimeEntries.find(\n                            (filterEntry: TimeEntry) => filterEntry.id === entry.id\n                        )\n                            \" :tasks=\"tasks\" :tags=\"tags\" :clients :create-tag :update-time-entry :loadEntries\n                        :on-start-stop-click=\"() => startTimeEntryFromExisting(entry)\"\n                        :delete-time-entry=\"() => deleteTimeEntries([entry])\" :currency=\"currency\"\n                        :time-entry=\"entry.timeEntries[0]\" @selected=\"selectedTimeEntries.push(entry)\" @unselected=\"\n                            selectedTimeEntries = selectedTimeEntries.filter(\n                                (item: TimeEntry) => item.id !== entry.id\n                            )\n                            \"></TimeEntryRow>\n                </template>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport parse from 'parse-duration';\nimport { onMounted, ref, watch, inject } from 'vue';\nimport {\n    formatHumanReadableDuration,\n    getDayJsInstance,\n} from '@/packages/ui/src/utils/time';\nimport dayjs from 'dayjs';\nimport { twMerge } from 'tailwind-merge';\nimport { TextInput } from '@/packages/ui/src';\nimport type { Organization } from '@/packages/api/src';\nimport { type ComputedRef } from 'vue';\n\nconst temporaryCustomTimerEntry = ref<string>('');\n\nconst start = defineModel('start', {\n    default: '',\n});\n\nconst end = defineModel('end', {\n    default: '',\n});\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\nfunction isHHMM(value: string): boolean {\n    return HHMMtimeRegex.test(value);\n}\n\nfunction parseHHMM(value: string): string[] | null {\n    return value.match(HHMMtimeRegex);\n}\n\nfunction updateDuration() {\n    const time = parse(temporaryCustomTimerEntry.value, 's');\n\n    if (isNumeric(temporaryCustomTimerEntry.value)) {\n        const newStartDate = getDayJsInstance()(end.value).subtract(\n            parseInt(temporaryCustomTimerEntry.value),\n            'm'\n        );\n        start.value = newStartDate.utc().format();\n    } else if (isHHMM(temporaryCustomTimerEntry.value)) {\n        const results = parseHHMM(temporaryCustomTimerEntry.value);\n        if (results) {\n            const newStartDate = getDayJsInstance()(end.value)\n                .subtract(parseInt(results[1]), 'h')\n                .subtract(parseInt(results[2]), 'm');\n            start.value = newStartDate.utc().format();\n        }\n    }\n    // try to parse natural language like \"1h 30m\"\n    else if (time && time > 1) {\n        const newStartDate = getDayJsInstance()(end.value).subtract(time, 's');\n        start.value = newStartDate.utc().format();\n    }\n    // fallback to minutes if just a number is given\n    updateTimeEntryInputValue();\n}\n\nfunction isNumeric(value: string) {\n    return /^-?\\d+$/.test(value);\n}\n\nconst props = defineProps<{\n    class?: string;\n}>();\n\nconst HHMMtimeRegex = /^([0-9]{1,2}):([0-5]?[0-9])$/;\n\nwatch([start, end], updateTimeEntryInputValue);\nonMounted(() => updateTimeEntryInputValue());\n\nfunction updateTimeEntryInputValue() {\n    if (start.value && end.value) {\n        const startTime = dayjs(start.value);\n        const diff = getDayJsInstance()(end.value).diff(startTime, 'seconds');\n        temporaryCustomTimerEntry.value = formatHumanReadableDuration(\n            diff,\n            organization?.value?.interval_format,\n            organization?.value?.number_format\n        );\n    }\n}\n</script>\n\n<template>\n    <TextInput\n        ref=\"inputField\"\n        v-model=\"temporaryCustomTimerEntry\"\n        :class=\"twMerge('text-text-secondary', props.class)\"\n        type=\"text\"\n        @blur=\"updateDuration\"\n        @keydown.enter=\"updateDuration\" />\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport TextInput from '@/packages/ui/src/Input/TextInput.vue';\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport DialogModal from '@/packages/ui/src/DialogModal.vue';\nimport { computed, nextTick, ref, watch } from 'vue';\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport TimeTrackerProjectTaskDropdown from '@/packages/ui/src/TimeTracker/TimeTrackerProjectTaskDropdown.vue';\nimport InputLabel from '@/packages/ui/src/Input/InputLabel.vue';\nimport { TagIcon } from '@heroicons/vue/20/solid';\nimport {\n    getDayJsInstance,\n    getLocalizedDayJs,\n} from '@/packages/ui/src/utils/time';\nimport type {\n    CreateClientBody,\n    CreateProjectBody,\n    Project,\n    Client,\n    CreateTimeEntryBody,\n} from '@/packages/api/src';\nimport { getOrganizationCurrencyString } from '@/utils/money';\nimport { canCreateProjects } from '@/utils/permissions';\nimport TagDropdown from '@/packages/ui/src/Tag/TagDropdown.vue';\nimport { Badge } from '@/packages/ui/src';\nimport BillableIcon from '@/packages/ui/src/Icons/BillableIcon.vue';\nimport SelectDropdown from '@/packages/ui/src/Input/SelectDropdown.vue';\nimport DatePicker from '@/packages/ui/src/Input/DatePicker.vue';\nimport DurationHumanInput from '@/packages/ui/src/Input/DurationHumanInput.vue';\n\nimport { InformationCircleIcon } from '@heroicons/vue/20/solid';\nimport type { Tag, Task } from '@/packages/api/src';\nimport TimePickerSimple from \"@/packages/ui/src/Input/TimePickerSimple.vue\";\n\nconst show = defineModel('show', { default: false });\nconst saving = ref(false);\n\nconst props = defineProps<{\n    enableEstimatedTime: boolean;\n    createTimeEntry: (\n        entry: Omit<CreateTimeEntryBody, 'member_id'>\n    ) => Promise<void>;\n    createClient: (client: CreateClientBody) => Promise<Client | undefined>;\n    createProject: (project: CreateProjectBody) => Promise<Project | undefined>;\n    createTag: (name: string) => Promise<Tag | undefined>;\n    tags: Tag[];\n    projects: Project[];\n    tasks: Task[];\n    clients: Client[];\n}>();\n\nconst description = ref<HTMLInputElement | null>(null);\n\nwatch(show, (value) => {\n    if (value) {\n        nextTick(() => {\n            description.value?.focus();\n        });\n    }\n});\n\nconst timeEntryDefaultValues = {\n    description: '',\n    project_id: null,\n    task_id: null,\n    tags: [],\n    billable: false,\n    start: getDayJsInstance().utc().subtract(1, 'h').format(),\n    end: getDayJsInstance().utc().format(),\n};\n\nconst timeEntry = ref({ ...timeEntryDefaultValues });\n\nwatch(\n    () => timeEntry.value.project_id,\n    (value) => {\n        if (value) {\n            // check if project is billable by default and set billable accordingly\n            const project = props.projects.find((p) => p.id === value);\n            if (project) {\n                timeEntry.value.billable = project.is_billable;\n            }\n        }\n    }\n);\n\nconst localStart = ref(\n    getLocalizedDayJs(timeEntryDefaultValues.start).format()\n);\n\nconst localEnd = ref(getLocalizedDayJs(timeEntryDefaultValues.end).format());\n\nwatch(localStart, (value) => {\n    timeEntry.value.start = getLocalizedDayJs(value).utc().format();\n    if (getLocalizedDayJs(localEnd.value).isBefore(getLocalizedDayJs(value))) {\n        localEnd.value = value;\n    }\n});\n\nwatch(localEnd, (value) => {\n    timeEntry.value.end = getLocalizedDayJs(value).utc().format();\n});\n\nasync function submit() {\n    await props.createTimeEntry({ ...timeEntry.value });\n    timeEntry.value = { ...timeEntryDefaultValues };\n    localStart.value = getLocalizedDayJs(timeEntryDefaultValues.start).format();\n    localEnd.value = getLocalizedDayJs(timeEntryDefaultValues.end).format();\n    show.value = false;\n}\n\nconst billableProxy = computed({\n    get: () => (timeEntry.value.billable ? 'true' : 'false'),\n    set: (value: string) => {\n        timeEntry.value.billable = value === 'true';\n    },\n});\n\ntype BillableOption = {\n    label: string;\n    value: string;\n};\n</script>\n\n<template>\n    <DialogModal closeable :show=\"show\" @close=\"show = false\">\n        <template #title>\n            <div class=\"flex space-x-2\">\n                <span> Create manual time entry </span>\n            </div>\n        </template>\n\n        <template #content>\n            <div class=\"sm:flex items-end space-y-2 sm:space-y-0 sm:space-x-4\">\n                <div class=\"flex-1\">\n                    <TextInput\n                        id=\"description\"\n                        ref=\"description\"\n                        v-model=\"timeEntry.description\"\n                        placeholder=\"What did you work on?\"\n                        type=\"text\"\n                        class=\"mt-1 block w-full\"\n                        @keydown.enter=\"submit\" />\n                </div>\n            </div>\n            <div\n                class=\"sm:flex justify-between items-end space-y-2 sm:space-y-0 pt-4 sm:space-x-4\">\n                <div class=\"flex w-full items-center space-x-2 justify-between\">\n                    <div class=\"flex-1 min-w-0\">\n                        <TimeTrackerProjectTaskDropdown\n                            v-model:project=\"timeEntry.project_id\"\n                            v-model:task=\"\n                                timeEntry.task_id\n                            \"\n                            :clients\n                            :create-project\n                            :create-client\n                            :can-create-project=\"canCreateProjects()\"\n                            :currency=\"getOrganizationCurrencyString()\"\n                            size=\"xlarge\"\n                            class=\"bg-input-background\"\n                            :projects=\"projects\"\n                            :tasks=\"tasks\"\n                            :enable-estimated-time=\"enableEstimatedTime\"></TimeTrackerProjectTaskDropdown>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-col\">\n                            <TagDropdown\n                                v-model=\"timeEntry.tags\"\n                                :create-tag\n                                :tags=\"tags\">\n                                <template #trigger>\n                                    <Badge\n                                        class=\"bg-input-background\"\n                                        tag=\"button\"\n                                        size=\"xlarge\">\n                                        <TagIcon\n                                            v-if=\"timeEntry.tags.length === 0\"\n                                            class=\"w-4\"></TagIcon>\n                                        <div\n                                            v-else\n                                            class=\"bg-accent-300/20 w-5 h-5 font-medium rounded flex items-center transition justify-center\">\n                                            {{ timeEntry.tags.length }}\n                                        </div>\n                                        <span>Tags</span>\n                                    </Badge>\n                                </template>\n                            </TagDropdown>\n                        </div>\n                        <div class=\"flex-col\">\n                            <SelectDropdown\n                                v-model=\"billableProxy\"\n                                :get-key-from-item=\"\n                                    (item: BillableOption) => item.value\n                                \"\n                                :get-name-for-item=\"\n                                    (item: BillableOption) => item.label\n                                \"\n                                :items=\"[\n                                    {\n                                        label: 'Billable',\n                                        value: 'true',\n                                    },\n                                    {\n                                        label: 'Non Billable',\n                                        value: 'false',\n                                    },\n                                ]\">\n                                <template #trigger>\n                                    <Badge\n                                        class=\"bg-input-background\"\n                                        tag=\"button\"\n                                        size=\"xlarge\">\n                                        <BillableIcon\n                                            class=\"h-4\"></BillableIcon>\n                                        <span>{{\n                                            timeEntry.billable\n                                                ? 'Billable'\n                                                : 'Non-Billable'\n                                        }}</span>\n                                    </Badge>\n                                </template>\n                            </SelectDropdown>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex pt-4 space-x-4\">\n                <div class=\"flex-1\">\n                    <InputLabel>Duration</InputLabel>\n                    <div class=\"space-y-2 mt-1 flex flex-col\">\n                        <DurationHumanInput\n                            v-model:start=\"localStart\"\n                            v-model:end=\"localEnd\"\n                            name=\"Duration\"></DurationHumanInput>\n                        <div class=\"text-sm flex space-x-1\">\n                            <InformationCircleIcon\n                                class=\"w-4 text-text-quaternary\"></InformationCircleIcon>\n                            <span class=\"text-text-secondary text-xs\">\n                                You can type natural language here f.e.\n                                <span class=\"font-semibold\"> 2h 30m</span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"\">\n                    <InputLabel>Start</InputLabel>\n                    <div class=\"flex flex-col items-center space-y-2 mt-1\">\n                        <TimePickerSimple\n\n                            v-model=\"localStart\"\n                            size=\"large\"></TimePickerSimple>\n                        <DatePicker\n                            v-model=\"localStart\"\n                            tabindex=\"1\"\n                            class=\"text-xs text-text-tertiary max-w-28 px-1.5 py-1.5\"></DatePicker>\n                    </div>\n                </div>\n                <div class=\"\">\n                    <InputLabel>End</InputLabel>\n                    <div class=\"flex flex-col items-center space-y-2 mt-1\">\n                        <TimePickerSimple\n                            v-model=\"localEnd\"\n                            size=\"large\"></TimePickerSimple>\n                        <DatePicker\n                            v-model=\"localEnd\"\n                            tabindex=\"1\"\n                            class=\"text-xs text-text-tertiary max-w-28 px-1.5 py-1.5\"></DatePicker>\n                    </div>\n                </div>\n            </div>\n        </template>\n        <template #footer>\n            <SecondaryButton tabindex=\"2\" @click=\"show = false\"> Cancel</SecondaryButton>\n            <PrimaryButton\n                tabindex=\"2\"\n                class=\"ms-3\"\n                :class=\"{ 'opacity-25': saving }\"\n                :disabled=\"saving\"\n                @click=\"submit\">\n                Create Time Entry\n            </PrimaryButton>\n        </template>\n    </DialogModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport AppLayout from '@/Layouts/AppLayout.vue';\nimport TimeTracker from '@/Components/TimeTracker.vue';\nimport { onMounted, ref, watch } from 'vue';\nimport MainContainer from '@/packages/ui/src/MainContainer.vue';\nimport { useTimeEntriesStore } from '@/utils/useTimeEntries';\nimport { storeToRefs } from 'pinia';\nimport type {\n    CreateClientBody,\n    CreateProjectBody,\n    CreateTimeEntryBody,\n    Project,\n    TimeEntry,\n    Client,\n} from '@/packages/api/src';\nimport { useElementVisibility } from '@vueuse/core';\nimport { ClockIcon } from '@heroicons/vue/20/solid';\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport { PlusIcon } from '@heroicons/vue/16/solid';\nimport LoadingSpinner from '@/packages/ui/src/LoadingSpinner.vue';\nimport { useCurrentTimeEntryStore } from '@/utils/useCurrentTimeEntry';\nimport { useTasksStore } from '@/utils/useTasks';\nimport { useProjectsStore } from '@/utils/useProjects';\nimport TimeEntryGroupedTable from '@/packages/ui/src/TimeEntry/TimeEntryGroupedTable.vue';\nimport { useTagsStore } from '@/utils/useTags';\nimport { useClientsStore } from '@/utils/useClients';\nimport TimeEntryCreateModal from '@/packages/ui/src/TimeEntry/TimeEntryCreateModal.vue';\nimport { getOrganizationCurrencyString } from '@/utils/money';\nimport TimeEntryMassActionRow from '@/packages/ui/src/TimeEntry/TimeEntryMassActionRow.vue';\nimport type { UpdateMultipleTimeEntriesChangeset } from '@/packages/api/src';\nimport { isAllowedToPerformPremiumAction } from '@/utils/billing';\nimport { canCreateProjects } from '@/utils/permissions';\n\nconst timeEntriesStore = useTimeEntriesStore();\nconst { timeEntries, allTimeEntriesLoaded } = storeToRefs(timeEntriesStore);\nconst { updateTimeEntry, fetchTimeEntries, createTimeEntry } =\n    useTimeEntriesStore();\n\nasync function updateTimeEntries(\n    ids: string[],\n    changes: UpdateMultipleTimeEntriesChangeset\n) {\n    await useTimeEntriesStore().updateTimeEntries(ids, changes);\n    fetchTimeEntries();\n}\n\nconst loading = ref(false);\nconst loadMoreContainer = ref<HTMLDivElement | null>(null);\nconst isLoadMoreVisible = useElementVisibility(loadMoreContainer);\nconst currentTimeEntryStore = useCurrentTimeEntryStore();\nconst { currentTimeEntry } = storeToRefs(currentTimeEntryStore);\nconst { setActiveState } = currentTimeEntryStore;\nconst { tags } = storeToRefs(useTagsStore());\n\nasync function startTimeEntry(\n    timeEntry: Omit<CreateTimeEntryBody, 'member_id'>\n) {\n    if (currentTimeEntry.value.id) {\n        await setActiveState(false);\n    }\n    await createTimeEntry(timeEntry);\n    fetchTimeEntries();\n    useCurrentTimeEntryStore().fetchCurrentTimeEntry();\n}\n\nfunction deleteTimeEntries(timeEntries: TimeEntry[]) {\n    useTimeEntriesStore().deleteTimeEntries(timeEntries);\n    fetchTimeEntries();\n}\n\nwatch(isLoadMoreVisible, async (isVisible) => {\n    if (\n        isVisible &&\n        timeEntries.value.length > 0 &&\n        !allTimeEntriesLoaded.value\n    ) {\n        loading.value = true;\n        await timeEntriesStore.fetchMoreTimeEntries();\n    }\n});\n\nonMounted(async () => {\n    await loadEntries();\n});\nasync function loadEntries(): Promise<void> {\n    await timeEntriesStore.fetchTimeEntries();\n}\nconst showManualTimeEntryModal = ref(false);\nconst projectStore = useProjectsStore();\nconst { projects } = storeToRefs(projectStore);\nconst taskStore = useTasksStore();\nconst { tasks } = storeToRefs(taskStore);\nconst clientStore = useClientsStore();\nconst { clients } = storeToRefs(clientStore);\n\nasync function createTag(name: string) {\n    return await useTagsStore().createTag(name);\n}\nasync function createProject(\n    project: CreateProjectBody\n): Promise<Project | undefined> {\n    return await useProjectsStore().createProject(project);\n}\nasync function createClient(\n    body: CreateClientBody\n): Promise<Client | undefined> {\n    return await useClientsStore().createClient(body);\n}\n\nconst selectedTimeEntries = ref([] as TimeEntry[]);\n\nasync function clearSelectionAndState() {\n    selectedTimeEntries.value = [];\n    await fetchTimeEntries();\n}\n\nfunction deleteSelected() {\n    deleteTimeEntries(selectedTimeEntries.value);\n    selectedTimeEntries.value = [];\n}\n</script>\n\n<template>\n    <TimeEntryCreateModal v-model:show=\"showManualTimeEntryModal\"\n        :enable-estimated-time=\"isAllowedToPerformPremiumAction()\" :create-project=\"createProject\"\n        :create-client=\"createClient\" :create-tag=\"createTag\" :create-time-entry=\"createTimeEntry\" :projects :tasks\n        :tags :clients></TimeEntryCreateModal>\n    <AppLayout title=\"Dashboard\" data-testid=\"time_view\">\n        <div class=\"mx-10\">\n\n            <MainContainer class=\"pt-5 lg:pt-8 pb-4 lg:pb-6 bg-neutral-950 p-5 \">\n                <div\n                    class=\"lg:flex items-end lg:divide-x divide-default-background-separator divide-y lg:divide-y-0 space-y-2 lg:space-y-0 lg:space-x-2 \">\n                    <div class=\"flex-1\">\n                        <TimeTracker></TimeTracker>\n                    </div>\n                    <div class=\"pb-2 pt-2 lg:pt-0 lg:pl-4 flex justify-center\">\n                        <SecondaryButton class=\"w-full text-center flex justify-center\" :icon=\"PlusIcon\"\n                            @click=\"showManualTimeEntryModal = true\">Manual time entry\n                        </SecondaryButton>\n                    </div>\n                </div>\n            </MainContainer>\n            <div class=\"bg-gray-900 mt-5\">\n                <TimeEntryMassActionRow :selected-time-entries=\"selectedTimeEntries\"\n                    :enable-estimated-time=\"isAllowedToPerformPremiumAction()\" :can-create-project=\"canCreateProjects()\"\n                    :all-selected=\"selectedTimeEntries.length === timeEntries.length\" :delete-selected=\"deleteSelected\"\n                    :projects=\"projects\" :tasks=\"tasks\" :tags=\"tags\" :currency=\"getOrganizationCurrencyString()\"\n                    :clients=\"clients\" :update-time-entries=\"(args) =>\n                        updateTimeEntries(\n                            selectedTimeEntries.map((timeEntry) => timeEntry.id),\n                            args\n                        )\n                        \" :create-project=\"createProject\" :create-client=\"createClient\" :create-tag=\"createTag\"\n                    @submit=\"clearSelectionAndState\" @select-all=\"selectedTimeEntries = [...timeEntries]\"\n                    @unselect-all=\"selectedTimeEntries = []\"></TimeEntryMassActionRow>\n            </div>\n            <TimeEntryGroupedTable v-model:selected=\"selectedTimeEntries\" :create-project\n                :enable-estimated-time=\"isAllowedToPerformPremiumAction()\" :can-create-project=\"canCreateProjects()\"\n                :clients :create-client :update-time-entry :update-time-entries :delete-time-entries\n                :create-time-entry=\"startTimeEntry\" :create-tag :projects=\"projects\" :tasks=\"tasks\" :loadEntries\n                :currency=\"getOrganizationCurrencyString()\" :time-entries=\"timeEntries\" :tags=\"tags\">\n            </TimeEntryGroupedTable>\n            <div v-if=\"timeEntries.length === 0\" class=\"text-center pt-12\">\n                <ClockIcon class=\"w-8 text-icon-default inline pb-2\"></ClockIcon>\n                <h3 class=\"text-text-primary font-semibold\">No time entries found</h3>\n                <p class=\"pb-5\">Create your first time entry now!</p>\n            </div>\n            <div ref=\"loadMoreContainer\">\n                <div v-if=\"loading && !allTimeEntriesLoaded\"\n                    class=\"flex justify-center items-center py-5 text-text-primary font-medium\">\n                    <LoadingSpinner></LoadingSpinner>\n                    <span> Loading more time entries... </span>\n                </div>\n                <div v-else-if=\"allTimeEntriesLoaded\"\n                    class=\"flex justify-center items-center py-5 text-text-secondary font-medium\">\n                    All time entries are loaded!\n                </div>\n            </div>\n        </div>\n    </AppLayout>\n</template>\n"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","props","__props","emit","__emit","organization","inject","updateTimeEntryDescription","description","timeEntry","updateTimeEntryTags","tags","updateTimeEntryBillable","billable","updateProjectAndTask","projectId","taskId","expanded","ref","onSelectChange","checked","_hoisted_1","_createVNode","MainContainer","_hoisted_2","_hoisted_3","_unref","Checkbox","aggregateTimeEntry","selectedTimeEntries","_hoisted_4","GroupedItemsCountButton","$event","TimeEntryDescriptionInput","TimeTrackerProjectTaskDropdown","clients","createProject","createClient","canCreateProject","projects","tasks","enableEstimatedTime","currency","_hoisted_5","TimeEntryRowTagDropdown","createTag","BillableToggleButton","_hoisted_6","_normalizeClass","twMerge","formatStartEnd","formatHumanReadableDuration","TimeTrackerStartStop","onStartStopClick","TimeEntryMoreOptionsDropdown","deleteTimeEntries","_hoisted_7","_Fragment","_renderList","subEntry","_createBlock","TimeEntryRow","filterEntry","updateTimeEntry","selectUnselectAll","value","_toDisplayString","formatWeekday","date","formatDate","_hoisted_8","duration","_useModel","getBimonthlyKey","dateInput","year","month","isFirstHalf","start","end","isSameBimonthlyPeriod","entryDate","submittedEntries","entryKey","submission","groupedTimeEntries","watch","groupTimeEntriesFunc","onMounted","grouped","data","getTimesheet","entry","getDayJsInstance","dayKey","startLabel","endLabel","biMonthKey","existingGroup","index","e","group","startTimeEntryFromExisting","sumDuration","timeEntries","acc","selectAllTimeEntries","subTimeEntry","unselectAllTimeEntries","filterTimeEntry","_a","getFirstDayKey","days","keys","SubmitBTN","dayjs","unSubmitBTN","axios","bimonthly","bimonthlykey","key","TimeEntryRowHeading","TimeEntryAggregateRow","updateTimeEntries","timeEntriesToUnselect","item","loadEntries","temporaryCustomTimerEntry","isHHMM","HHMMtimeRegex","parseHHMM","updateDuration","time","parse","isNumeric","newStartDate","results","updateTimeEntryInputValue","startTime","diff","_b","TextInput","show","saving","nextTick","timeEntryDefaultValues","project","p","localStart","getLocalizedDayJs","localEnd","submit","billableProxy","computed","DialogModal","canCreateProjects","getOrganizationCurrencyString","TagDropdown","Badge","TagIcon","_hoisted_9","SelectDropdown","BillableIcon","_hoisted_10","_hoisted_11","InputLabel","_hoisted_12","DurationHumanInput","_hoisted_13","InformationCircleIcon","_hoisted_14","_hoisted_15","TimePickerSimple","DatePicker","_hoisted_16","_hoisted_17","SecondaryButton","PrimaryButton","timeEntriesStore","useTimeEntriesStore","allTimeEntriesLoaded","storeToRefs","fetchTimeEntries","createTimeEntry","ids","changes","loading","loadMoreContainer","isLoadMoreVisible","useElementVisibility","currentTimeEntryStore","useCurrentTimeEntryStore","currentTimeEntry","setActiveState","useTagsStore","startTimeEntry","isVisible","showManualTimeEntryModal","projectStore","useProjectsStore","taskStore","useTasksStore","clientStore","useClientsStore","name","body","clearSelectionAndState","deleteSelected","TimeEntryCreateModal","isAllowedToPerformPremiumAction","AppLayout","TimeTracker","PlusIcon","TimeEntryMassActionRow","args","TimeEntryGroupedTable","ClockIcon","LoadingSpinner"],"mappings":"43GAEe,SAASA,GAAOC,EAAMC,EAAQ,CAC3C,OAAQC,EAAU,EAAIC,EAAoB,MAAO,CAC/C,MAAO,6BACP,QAAS,YACT,KAAM,eACN,cAAe,OACf,YAAa,MACjB,EAAK,CACDC,EAAoB,OAAQ,CAC1B,YAAa,UACb,EAAG,2PACH,YAAa,SACnB,CAAK,CACL,CAAG,CACH,u5BCYA,MAAMC,EAAQC,EAkBRC,EAAOC,EAKPC,EAAeC,GAAkC,cAAc,EAErE,SAASC,EAA2BC,EAAqB,CACrDP,EAAM,kBACFA,EAAM,UAAU,YAAY,IAAKQ,GAAyBA,EAAU,EAAE,EACtE,CAAE,YAAAD,CAAA,CAAyB,CAC/B,CAGJ,SAASE,EAAoBC,EAAgB,CACzCV,EAAM,kBACFA,EAAM,UAAU,YAAY,IAAKQ,GAAyBA,EAAU,EAAE,EACtE,CAAE,KAAAE,CAAA,CAAW,CACjB,CAGJ,SAASC,EAAwBC,EAAmB,CAChDZ,EAAM,kBACFA,EAAM,UAAU,YAAY,IAAKQ,GAAyBA,EAAU,EAAE,EACtE,CAAE,SAAAI,CAAA,CAAmB,CACzB,CAGJ,SAASC,EAAqBC,EAAmBC,EAAgB,CAC7Df,EAAM,kBACFA,EAAM,UAAU,YAAY,IAAKQ,GAAyBA,EAAU,EAAE,EACtE,CAAE,WAAYM,EAAW,QAASC,CAAA,CAAO,CAC7C,CAGJ,MAAMC,EAAWC,EAAI,EAAK,EAE1B,SAASC,EAAeC,EAAkB,CAClCA,EACAjB,EAAK,WAAY,CAAC,GAAGF,EAAM,UAAU,WAAW,CAAC,EAEjDE,EAAK,aAAc,CAAC,GAAGF,EAAM,UAAU,WAAW,CAAC,CACvD,eAKAH,EAAA,EAAAC,EA6HM,MA7HNsB,GA6HM,CA1HFC,EAyFgBC,GAAA,CAzFD,MAAM,WAAS,WAC1B,IAAA,aAuFM,OAvFNvB,EAuFM,MAvFNwB,GAuFM,CArFFxB,EAuCM,MAvCNyB,GAuCM,CAtCFH,EASuCI,EAAAC,EAAA,EAAA,CARlC,QAAsClB,EAAAA,UAAU,YAAY,MAAwCmB,GAAsEC,EAAAA,oBAAoB,SAAkDD,CAAA,GAQhP,mBAAgBT,CAAA,sBACrBnB,EA2BM,MA3BN8B,GA2BM,CA1BFR,EAI0BS,GAAA,CAHrB,SAAUd,EAAA,MACV,QAAKpB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAAEf,EAAA,MAAQ,CAAIA,EAAA,MAAA,aACpB,IAAA,SAAoC,YAAjCR,GAAAA,EAAAA,EAAAA,YAAAA,YAAAA,EAAW,cAAXA,YAAAA,EAAwB,MAAM,EAAA,CAAA,CAAA,yBAErCa,EAKkCW,GAAA,CAJ9B,MAAM,eACL,cAAaxB,EAAAA,UAAU,YACvB,UAA0CF,CAAA,sCAG/Ce,EAcuCY,GAAA,CAblC,QAAAC,EAAAA,QACA,iBAAAC,EAAAA,cACA,gBAAAC,EAAAA,aACA,qBAAAC,EAAAA,iBACA,SAAUC,EAAAA,SACV,MAAOC,EAAAA,MACP,oBAAmB,GACnB,QAAS/B,EAAAA,UAAU,WACnB,wBAAAgC,EAAAA,oBACA,SAAUC,EAAAA,SACV,KAAMjC,EAAAA,UAAU,QAChB,UAA0CK,CAAA,mKAKvDd,EA4CM,MA5CN2C,GA4CM,CA3CFrB,EAMgCsB,GAAA,CAL3B,aAAAC,EAAAA,UACA,KAAMlC,EAAAA,KACN,cAAaF,EAAAA,UAAU,KACvB,UAAsCC,CAAA,0DAG3CY,EAM6BwB,GAAA,CALxB,cAAarC,EAAAA,UAAU,SACxB,MAAM,+DACN,KAAK,QACJ,UAAsCG,CAAA,sCAG3CZ,EAMM,MANN+C,GAMM,CALF/C,EAIS,SAAA,CAHJ,MAAKgD,GAAEtB,EAAAuB,EAAA,EAAO,yTAAyTvB,EAAAA,EAAArB,CAAA,IAAAqB,YAAAA,EAAc,eAAW,WAAA,YAAA,WAAA,CAAA,EAChW,QAAK7B,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAAEf,EAAA,MAAQ,CAAIA,EAAA,MAAA,IACjBS,EAAAwB,EAAA,EAAezC,EAAAA,UAAU,MAAOA,EAAAA,UAAU,KAAKiB,EAAAA,EAAArB,CAAA,IAAAqB,YAAAA,EAAc,WAAW,CAAA,EAAA,CAAA,CAAA,GAGnF1B,EAUS,SAAA,CATL,MAAM,2SACL,QAAKH,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAAEf,EAAA,MAAQ,CAAIA,EAAA,MAAA,IAEhBS,EAAAyB,EAAA,EAA6D1C,EAAAA,UAAU,UAAQ,GAAuCiB,EAAAA,EAAArB,CAAA,IAAAqB,YAAAA,EAAc,iBAAiDA,EAAAA,EAAArB,CAAA,IAAAqB,YAAAA,EAAc,aAAA,MAQ3MJ,EAK6B8B,GAAA,CAJxB,UAAW3C,EAAAA,UAAU,OAAK,CAAKA,EAAAA,UAAU,KAC1C,MAAM,8EACL,UAAOZ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAA+BqB,EAAAA,iBAAiB5C,EAAAA,SAAS,EAAA,qBAGrEa,EAGqCgC,GAAA,CAFhC,SAAMzD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAAA,OAA+BuB,OAAAA,EAAAA,oBAAkB9C,EAAAA,EAAAA,YAAAA,YAAAA,EAAW,cAAW,CAAA,CAAA,GAAA,gBAOpFQ,EAAA,OADVnB,EAAA,EAAAC,EA+BM,MA/BNyD,GA+BM,EA5BF1D,EAAA,EAAA,EAAAC,EA2BgE0D,EAAA,KAAAC,EA1BzCjD,EAAAA,UAAU,YAAtBkD,QADXC,EA2BgEC,GAAA,CAzB3D,IAAKF,EAAS,GACd,SAAUpB,EAAAA,SACV,wBAAAE,EAAAA,oBACA,qBAAAH,EAAAA,iBACA,MAAOE,EAAAA,MACP,SAAiCX,CAAAA,CAAAA,EAAAA,oBAAoB,KAA+BiC,GAAuDA,EAAY,KAAOH,EAAS,EAAA,EAMvK,gBAAAtB,EAAAA,aACA,QAAAF,EAAAA,QACA,iBAAAC,EAAAA,cACA,KAAMzB,EAAAA,KACP,OAAA,GACC,oBAAyCF,GAAyBsD,EAAAA,gBAAgBtD,CAAS,EAG3F,sBAAmB,IAAQ4C,EAAAA,iBAAiBM,CAAQ,EACpD,oBAAiB,IAAQJ,EAAAA,kBAAiB,CAAEI,CAAQ,CAAA,EACpD,SAAUjB,EAAAA,SACV,aAAAG,EAAAA,UACA,aAAYc,EACZ,WAAQ3B,GAAE7B,EAAI,WAAA,CAAcwD,CAAQ,CAAA,EACpC,aAAU3B,GAAE7B,EAAI,aAAA,CAAgBwD,CAAQ,CAAA,CAAA,qzBC7MzD,MAAMtD,EAAeC,GAAkC,cAAc,EAO/DH,EAAOC,EAKb,SAAS4D,EAAkBC,EAAgB,CAEnC9D,EADA8D,EACK,YAEA,aAFW,CAGpB,eAKAnE,EAAA,EAAAC,EA2CM,MA3CNsB,GA2CM,CAzCFC,EAwCgBC,GAAA,KAAA,WAvCZ,IAAA,WAsCM,OAtCNvB,EAsCM,MAtCNwB,GAsCM,CArCFxB,EAyBM,MAzBNyB,GAyBM,CAxBFzB,EAiBM,MAjBN8B,GAiBM,aAhBF9B,EAWM,MAAA,CAVF,MAAM,wDACN,QAAQ,YACR,MAAM,4BAAA,GACNA,EAMI,IAAA,CAND,KAAK,QAAM,CACVA,EAC6hB,OAAA,CAAzhB,EAAE,qhBAAohB,EAC1hBA,EAEoJ,OAAA,CADhJ,KAAK,eACL,EAAE,2IAAA,WAGdsB,EAGmDK,GAAA,CAF9C,QAASP,EAAAA,QACV,MAAM,2BACL,mBAAgB4C,CAAA,wBAEzBhE,EAEO,OAFP2C,GAEOuB,EADAxC,EAAAyC,EAAA,EAAcC,EAAAA,IAAI,CAAA,EAAA,CAAA,EAEzBpE,EAEO,OAFP+C,GAEOmB,EADAxC,EAAA2C,EAAA,EAAWD,EAAAA,MAAM1C,EAAAA,EAAArB,CAAA,IAAAqB,YAAAA,EAAc,WAAW,CAAA,EAAA,CAAA,CAAA,GAGrD1B,EAUM,MAVNwD,GAUM,CATFxD,EAQO,OARPsE,GAQOJ,EANCxC,EAAAyB,EAAA,EAA6DoB,EAAAA,UAA0C7C,EAAAA,EAAArB,CAAA,IAAAqB,YAAAA,EAAc,iBAAiDA,EAAAA,EAAArB,CAAA,IAAAqB,YAAAA,EAAc,aAAA,+vBCvChN,MAAMG,EAAsB2C,EAAwBtE,EAAC,UAEpD,EACKD,EAAQC,EA6Cd,SAASuE,EAAgBC,EAAkC,CACvD,MAAMN,EAAO,IAAI,KAAKM,CAAS,EACzBC,EAAOP,EAAK,YAAA,EAEZQ,EAAQ,IAAI,KAAK,eAAe,QAAS,CAAE,MAAO,OAAA,CAAS,EAAE,OAAOR,CAAI,EAExES,EAAcT,EAAK,QAAA,GAAa,GAChCU,EAAQD,EAAc,IAAM,KAC5BE,EAAMF,EACN,KACA,IAAI,KAAKF,EAAMP,EAAK,SAAA,EAAa,EAAG,CAAC,EAAE,QAAA,EAAU,SAAA,EAEvD,MAAO,GAAGQ,CAAK,IAAID,CAAI,KAAKG,CAAK,IAAIC,CAAG,GAAA,CAI5C,SAASC,EAAsBC,EAA0BC,EAA8C,CACnG,MAAMC,EAAWV,EAAgBQ,CAAS,EAC1C,OAAOC,EAAiB,KAAME,GACJX,EAAgBW,EAAW,UAAU,IAClCD,CAC5B,CAAA,CAIL,MAAME,EAAqBnE,EAAwB,EAAE,EACrDoE,EAAMD,EAAoB,IAAM,CAC5BE,EAAA,CAAqB,CACxB,EACDC,GAAU,SAAY,CAClBD,EAAA,CAAqB,CAExB,EACD,eAAeA,GAAuB,CAClC,MAAME,EAA8B,CAAA,EAE9BC,EAAO,MAAMC,EAAA,EACnB,UAAWC,KAAS3F,EAAM,YAAa,CACnC,GAAI2F,EAAM,MAAQ,KAAM,SAExB,MAAMxB,EAAOyB,IAAmBD,EAAM,KAAK,EACrCjB,EAAOP,EAAK,KAAA,EACZQ,EAAQR,EAAK,OAAO,KAAK,EAEzB0B,EAAS1B,EAAK,OAAO,YAAY,EACjCS,EAAcT,EAAK,KAAA,GAAU,GAC7B2B,EAAalB,EAAc,IAAM,KACjCmB,EAAWnB,EACX,KACA,OAAOT,EAAK,aAAa,EAEzB6B,EAAa,GAAGrB,CAAK,IAAImB,CAAU,MAAMnB,CAAK,KAAKoB,CAAQ,KAAKrB,CAAI,GAErEc,EAAQQ,CAAU,IACnBR,EAAQQ,CAAU,EAAI,CAClB,WAAY,GACZ,YAAajB,EAAsBY,EAAM,MAAOF,EAAK,WAAW,EAChE,KAAM,CAAA,CAAC,GAIVD,EAAQQ,CAAU,EAAE,KAAKH,CAAM,IAChCL,EAAQQ,CAAU,EAAE,KAAKH,CAAM,EAAI,CAAA,GAGvC,MAAMI,EAAgBT,EAAQQ,CAAU,EAAE,KAAKH,CAAM,EAC/CK,EAAQD,EAAc,UACvBE,GACGA,EAAE,aAAeR,EAAM,YACvBQ,EAAE,UAAYR,EAAM,SACpBQ,EAAE,WAAaR,EAAM,UACrBQ,EAAE,cAAgBR,EAAM,WAAA,EAGhC,GAAIO,IAAU,GAAI,CACd,MAAME,EAAQH,EAAcC,CAAK,EACjCE,EAAM,YAAY,KAAKT,CAAK,EAC5BS,EAAM,UAAYA,EAAM,UAAY,IAAMT,EAAM,UAAY,GAExDC,EAAA,EAAmBD,EAAM,KAAK,EAAE,SAASC,IAAmBQ,EAAM,KAAK,CAAC,IACxEA,EAAM,MAAQT,EAAM,OAEpBC,EAAA,EAAmBD,EAAM,GAAG,EAAE,QAAQC,IAAmBQ,EAAM,GAAG,CAAC,IACnEA,EAAM,IAAMT,EAAM,IACtB,MAEAM,EAAc,KAAK,CAAE,GAAGN,EAAO,YAAa,CAACA,CAAK,EAAG,CACzD,CAEJP,EAAmB,MAAQI,CAAA,CAE/B,SAASa,EAA2BV,EAAkB,CAClD3F,EAAM,gBAAgB,CAClB,WAAY2F,EAAM,WAClB,QAASA,EAAM,QACf,MAAOC,EAAA,EAAmB,IAAA,EAAM,OAAA,EAChC,IAAK,KACL,SAAUD,EAAM,SAChB,YAAaA,EAAM,YACnB,KAAM,CAAC,GAAGA,EAAM,IAAI,CAAA,CACvB,CAAA,CAEL,SAASW,EAAYC,EAA0B,CAC3C,OAAOA,EAAY,OAAO,CAACC,EAAKb,IAAUa,IAAOb,GAAA,YAAAA,EAAO,WAAY,GAAI,CAAC,CAAA,CAE7E,SAASc,EAAqBzC,EAAmC,CAC7D,UAAWxD,KAAawD,EACpB,GAAI,gBAAiBxD,EACjB,UAAWkG,KAAgBlG,EAAU,YACjCoB,EAAoB,MAAM,KAAK8E,CAAY,OAG/C9E,EAAoB,MAAM,KAAKpB,CAAS,CAEhD,CAEJ,SAASmG,EAAuB3C,EAAmC,CAC/DpC,EAAoB,MAAQA,EAAoB,MAAM,OACjDpB,GACU,CAACwD,EAAM,KACT4C,GAAA,OACG,OAAAA,EAAgB,KAAOpG,EAAU,MACjCqG,EAAAD,EAAgB,cAAhB,YAAAC,EAA6B,KACxBH,GAAiBA,EAAa,KAAOlG,EAAU,KACpD,CAEZ,CACJ,CAEJ,SAASsG,EAAeC,EAA2B,CAC/C,GAAIA,GAAQ,KACR,OAAO,KACX,MAAMC,EAAO,OAAO,KAAKD,CAAI,EAC7B,OAAOC,EAAK,OAASA,EAAK,CAAC,EAAI,IAAA,CAGnC,SAASC,EAAU9C,EAA4B,CACvCA,GAAQ,OAEZ+C,GAAM/C,EAAM,YAAY,EACxB,OAAO,SAAS,KAAO,qBAAqBA,CAAI,GAAA,CAEpD,SAASgD,EAAYhD,EAA4B,CACzCA,GAAQ,OAEZ+C,GAAM/C,EAAM,YAAY,EACxB,OAAO,SAAS,KAAO,uBAAuBA,CAAI,GAAA,CAEtD,MAAMuB,EAAe,UAEA,MAAM0B,GAAM,IAAI,oBAAqB,CAClD,gBAAiB,GACjB,QAAS,CACL,OAAQ,kBAAA,CACZ,CACH,GACqB,mBAQtBvH,EAAA,EAAA,EAAAC,EAiEM0D,EAAA,KAAAC,EAjEmC2B,EAAA,MAAkB,CAA9CiC,EAAWC,SAAxBxH,EAiEM,MAAA,CAjEwD,IAAKwH,EAAc,MAAM,EAAA,GACnFvH,EA+DM,MA/DNqB,GA+DM,CA7DFrB,EAgBM,MAhBNwB,GAgBM,CAdgE8F,EAAU,0BAA5EvH,EAGS,SAAA,OAHA,WAAOmH,EAAUH,EAAeO,EAAU,IAAI,CAAA,EACnD,MAAM,wCAAA,EAA0C,WAEpD,EAAA7F,EAAA,GAEW,CAAA6F,EAAU,YAAcA,EAAU,iBAD7CvH,EAIS,SAAA,OAJA,WAAOqH,EAAYL,EAAeO,EAAU,IAAI,CAAA,EAErD,MAAM,wCAAA,EAA0C,aAEpD,EAAAxF,EAAA,cAAS,IAEToC,EAAGqD,CAAY,EAAG,IAClB,CAAA,EAAYD,EAAU,gBAAtBvH,EAA0F,OAA1F4C,GAA2E,UAAQ,YACtE,CAAA2E,EAAU,YAAcA,EAAU,iBAA/CvH,EAC4D,OAD5DgD,GAC8C,SAAO,eAEzDjD,EAAA,EAAA,EAAAC,EA2CM0D,SA3CsB6D,EAAU,KAAI,CAA7BrD,EAAOuD,SAApBzH,EA2CM,MAAA,CA3CuC,IAAAyH,EAAU,MAAM,MAAA,GAEzDlG,EAIsBmG,GAAA,CAJA,KAAMD,EAAM,SAAUjB,EAAYtC,CAAK,EAAI,QAASA,EAAM,MAAOxD,GAA6CoB,EAAA,MAAoB,SAASpB,CAAS,CAAA,EAGnK,YAAUuB,GAAE0E,EAAqBzC,CAAK,EAAI,cAAYjC,GAAE4E,EAAuB3C,CAAK,CAAA,6EAE3FlE,EAmCW0D,EAAA,KAAAC,EAnCeO,EAAT2B,aAAsB,IAAAA,EAAM,EAAA,GACK,gBAAAA,GAASA,EAAM,YAAY,OAAM,OAA/EhC,EAqB8B8D,GAAA,OArBwD,iBAAAtF,EAAAA,cACjF,qBAAAE,EAAAA,iBAAoB,wBAAAG,EAAAA,oBAAuB,wBAAuBZ,EAAA,MAClE,gBAAAQ,EAAAA,aAAe,SAAUE,EAAAA,SAAW,MAAOC,EAAAA,MAAQ,KAAM7B,EAAAA,KAAO,QAAAwB,EAAAA,QAChE,sBAAqBmE,EAA6B,sBAAAqB,EAAAA,kBAAqB,oBAAA5D,EAAAA,gBACvE,sBAAAR,EAAAA,kBAAqB,aAAAV,EAAAA,UAAY,SAAUH,EAAAA,SAAW,aAAYkD,EAAQ,WAAQ/F,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAgC2G,GAAwB,CAAuC3E,EAAA,MAAmB,IAA4CA,EAAA,SAA4D2E,CAAA,IAO1S,aAAU3G,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAgC+H,GAAkC,CAAuC/F,EAAA,MAAsBA,EAAA,MAAoB,OAA6CgG,GAA6D,CAAAD,EAAsB,KAAmD9D,GAA2EA,EAAY,KAAO+D,EAAK,EAAA,qQAW1bjE,EAWyBC,GAAA,OAXH,gBAAAxB,EAAAA,aAAe,wBAAAI,EAAAA,oBAAuB,qBAAAH,EAAAA,iBAAoB,iBAAAF,EAAAA,cAC3E,SAAUG,EAAAA,SAAW,SAAQ,CAAA,CAAIV,EAAA,MAAoB,KAAmCiC,GAA2BA,EAAY,KAAO8B,EAAM,EAAA,EAGtI,MAAOpD,EAAAA,MAAQ,KAAM7B,EAAAA,KAAO,QAAAwB,EAAAA,QAAS,aAAAU,EAAAA,UAAY,oBAAAkB,EAAAA,gBAAmB,YAAA+D,EAAAA,YAC1E,sBAAmB,IAAQxB,EAA2BV,CAAK,EAC3D,oBAAiB,IAAQrC,EAAAA,kBAAiB,CAAEqC,CAAK,CAAA,EAAK,SAAUlD,EAAAA,SAChE,aAAYkD,EAAM,YAAW,CAAA,EAAM,WAAQ5D,GAAEH,EAAA,MAAoB,KAAK+D,CAAK,EAAI,aAAU5D,GAA+BH,EAAA,MAAsBA,EAAA,MAAoB,OAAyCgG,GAAoBA,EAAK,KAAOjC,EAAM,EAAA,0eC3R1Q,MAAMmC,EAA4B7G,EAAY,EAAE,EAE1C4D,EAAQN,IAAY,OAEzB,EAEKO,EAAMP,EAAWtE,EAAC,KAEvB,EAEKG,EAAeC,GAAkC,cAAc,EAErE,SAAS0H,EAAO/D,EAAwB,CACpC,OAAOgE,EAAc,KAAKhE,CAAK,CAAA,CAGnC,SAASiE,EAAUjE,EAAgC,CAC/C,OAAOA,EAAM,MAAMgE,CAAa,CAAA,CAGpC,SAASE,GAAiB,CACtB,MAAMC,EAAOC,GAAMN,EAA0B,MAAO,GAAG,EAEvD,GAAIO,EAAUP,EAA0B,KAAK,EAAG,CAC5C,MAAMQ,EAAe1C,EAAA,EAAmBd,EAAI,KAAK,EAAE,SAC/C,SAASgD,EAA0B,KAAK,EACxC,GAAA,EAEJjD,EAAM,MAAQyD,EAAa,IAAA,EAAM,OAAA,CAAO,SACjCP,EAAOD,EAA0B,KAAK,EAAG,CAChD,MAAMS,EAAUN,EAAUH,EAA0B,KAAK,EACzD,GAAIS,EAAS,CACT,MAAMD,EAAe1C,IAAmBd,EAAI,KAAK,EAC5C,SAAS,SAASyD,EAAQ,CAAC,CAAC,EAAG,GAAG,EAClC,SAAS,SAASA,EAAQ,CAAC,CAAC,EAAG,GAAG,EACvC1D,EAAM,MAAQyD,EAAa,IAAA,EAAM,OAAA,CAAO,CAC5C,SAGKH,GAAQA,EAAO,EAAG,CACvB,MAAMG,EAAe1C,IAAmBd,EAAI,KAAK,EAAE,SAASqD,EAAM,GAAG,EACrEtD,EAAM,MAAQyD,EAAa,IAAA,EAAM,OAAA,CAAO,CAG5CE,EAAA,CAA0B,CAG9B,SAASH,EAAUrE,EAAe,CAC9B,MAAO,UAAU,KAAKA,CAAK,CAAA,CAG/B,MAAMhE,EAAQC,EAIR+H,EAAgB,+BAEtB3C,EAAM,CAACR,EAAOC,CAAG,EAAG0D,CAAyB,EAC7CjD,GAAU,IAAMiD,GAA2B,EAE3C,SAASA,GAA4B,SACjC,GAAI3D,EAAM,OAASC,EAAI,MAAO,CAC1B,MAAM2D,EAAYvB,GAAMrC,EAAM,KAAK,EAC7B6D,EAAO9C,IAAmBd,EAAI,KAAK,EAAE,KAAK2D,EAAW,SAAS,EACpEX,EAA0B,MAAQ5E,GAC9BwF,GACA7B,EAAAzG,GAAA,YAAAA,EAAc,QAAd,YAAAyG,EAAqB,iBACrB8B,EAAAvI,GAAA,YAAAA,EAAc,QAAd,YAAAuI,EAAqB,aAAA,CACzB,CACJ,mBAKAhF,EAMsClC,EAAAmH,EAAA,EAAA,CALlC,IAAI,wBACKd,EAAA,2CAAAA,EAAyB,MAAA/F,GACjC,MAAKgB,GAAEtB,EAAAuB,EAAA,EAAO,sBAAwBhD,EAAM,KAAK,CAAA,EAClD,KAAK,OACJ,OAAMkI,EACN,aAAeA,EAAc,CAAA,OAAA,CAAA,CAAA,kjCC5DtC,MAAMW,EAAOtE,IAAY,MAA0B,EAC7CuE,EAAS7H,EAAI,EAAK,EAElBjB,EAAQC,EAcRM,EAAcU,EAA6B,IAAI,EAErDoE,EAAMwD,EAAO7E,GAAU,CACfA,GACA+E,GAAS,IAAM,QACXlC,EAAAtG,EAAY,QAAZ,MAAAsG,EAAmB,OAAM,CAC5B,CACL,CACH,EAED,MAAMmC,EAAyB,CAC3B,YAAa,GACb,WAAY,KACZ,QAAS,KACT,KAAM,CAAA,EACN,SAAU,GACV,MAAOpD,IAAmB,IAAA,EAAM,SAAS,EAAG,GAAG,EAAE,OAAA,EACjD,IAAKA,EAAA,EAAmB,IAAA,EAAM,OAAA,CAAO,EAGnCpF,EAAYS,EAAI,CAAE,GAAG+H,EAAwB,EAEnD3D,EACI,IAAM7E,EAAU,MAAM,WACrBwD,GAAU,CACP,GAAIA,EAAO,CAEP,MAAMiF,EAAUjJ,EAAM,SAAS,KAAMkJ,GAAMA,EAAE,KAAOlF,CAAK,EACrDiF,IACAzI,EAAU,MAAM,SAAWyI,EAAQ,YACvC,CACJ,CACJ,EAGJ,MAAME,EAAalI,EACfmI,EAAkBJ,EAAuB,KAAK,EAAE,OAAA,CAAO,EAGrDK,EAAWpI,EAAImI,EAAkBJ,EAAuB,GAAG,EAAE,QAAQ,EAE3E3D,EAAM8D,EAAanF,GAAU,CACzBxD,EAAU,MAAM,MAAQ4I,EAAkBpF,CAAK,EAAE,IAAA,EAAM,OAAA,EACnDoF,EAAkBC,EAAS,KAAK,EAAE,SAASD,EAAkBpF,CAAK,CAAC,IACnEqF,EAAS,MAAQrF,EACrB,CACH,EAEDqB,EAAMgE,EAAWrF,GAAU,CACvBxD,EAAU,MAAM,IAAM4I,EAAkBpF,CAAK,EAAE,IAAA,EAAM,OAAA,CAAO,CAC/D,EAED,eAAesF,GAAS,CACpB,MAAMtJ,EAAM,gBAAgB,CAAE,GAAGQ,EAAU,MAAO,EAClDA,EAAU,MAAQ,CAAE,GAAGwI,CAAA,EACvBG,EAAW,MAAQC,EAAkBJ,EAAuB,KAAK,EAAE,OAAA,EACnEK,EAAS,MAAQD,EAAkBJ,EAAuB,GAAG,EAAE,OAAA,EAC/DH,EAAK,MAAQ,EAAA,CAGjB,MAAMU,EAAgBC,GAAS,CAC3B,IAAK,IAAOhJ,EAAU,MAAM,SAAW,OAAS,QAChD,IAAMwD,GAAkB,CACpBxD,EAAU,MAAM,SAAWwD,IAAU,MAAA,CACzC,CACH,oBASGL,EA8Jc8F,GAAA,CA9JD,UAAA,GAAW,KAAMZ,EAAA,MAAO,yBAAOA,EAAA,MAAI,GAAA,GACjC,QACP,IAEMjJ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAFNG,EAEM,MAAA,CAFD,MAAM,kBAAgB,CACvBA,EAAuC,YAAjC,4BAA0B,CAAA,SAI7B,UACP,IAWM,CAXNA,EAWM,MAXNqB,GAWM,CAVFrB,EASM,MATNwB,GASM,CARFF,EAO8BuH,GAAA,CAN1B,GAAG,sBACC,cAAJ,IAAIrI,EACK,WAAAC,EAAA,MAAU,YAAV,sBAAAZ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAAAvB,EAAA,MAAU,YAAWuB,GAC9B,YAAY,wBACZ,KAAK,OACL,MAAM,oBACL,aAAeuH,EAAM,CAAA,OAAA,CAAA,CAAA,6BAGlCvJ,EAiFM,MAjFNyB,GAiFM,CA/EFzB,EA8EM,MA9EN8B,GA8EM,CA7EF9B,EAgBM,MAhBN2C,GAgBM,CAfFrB,EAckFY,GAAA,CAbtE,QAASzB,EAAA,MAAU,WAAV,mBAAAZ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAAAvB,EAAA,MAAU,WAAUuB,GAC7B,KAAuCvB,EAAA,MAAU,uCAAVA,EAAA,MAAU,WAGxD,QAAA0B,EAAAA,QACA,iBAAAC,EAAAA,cACA,gBAAAC,EAAAA,aACA,qBAAoBX,EAAAiI,EAAA,EAAA,EACpB,SAAUjI,EAAAkI,EAAA,EAAA,EACX,KAAK,SACL,MAAM,sBACL,SAAUrH,EAAAA,SACV,MAAOC,EAAAA,MACP,wBAAuBC,EAAAA,mBAAAA,qJAEhCzC,EA2DM,MA3DN+C,GA2DM,CA1DF/C,EAsBM,MAtBNwD,GAsBM,CArBFlC,EAoBcuI,GAAA,CAnBD,WAAApJ,EAAA,MAAU,KAAV,sBAAAZ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAAAvB,EAAA,MAAU,KAAIuB,GACtB,aAAAa,EAAAA,UACA,KAAMlC,EAAAA,IAAAA,GACI,UACP,IAaQ,CAbRW,EAaQI,EAAAoI,EAAA,EAAA,CAZJ,MAAM,sBACN,IAAI,SACJ,KAAK,QAAA,aACL,IAE0B,CADhBrJ,EAAA,MAAU,KAAK,SAAM,OAD/BmD,EAE0BlC,EAAAqI,EAAA,EAAA,OAAtB,MAAM,KAAA,KACVjK,EAAA,EAAAC,EAIM,MAJNuE,GAIMJ,EADCzD,QAAU,KAAK,MAAM,EAAA,CAAA,GAE5BZ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAG,EAAiB,YAAX,OAAI,EAAA,EAAA,gEAK1BA,EAkCM,MAlCNgK,GAkCM,CAjCF1I,EAgCiB2I,GAAA,YA/BJT,EAAA,2CAAAA,EAAa,MAAAxH,GACrB,oBAAyD6F,GAAyBA,EAAK,MAGvF,oBAAyDA,GAAyBA,EAAK,MAGvF,MAAO,sEASP,GACU,UACP,IAWQ,CAXRvG,EAWQI,EAAAoI,EAAA,EAAA,CAVJ,MAAM,sBACN,IAAI,SACJ,KAAK,QAAA,aACL,IAC+B,CAD/BxI,EAC+B4I,GAAA,CAA3B,MAAM,MAAK,EACflK,EAIS,OAAA,KAAAkE,EAHLzD,EAAA,MAAU,wHAW1CT,EA2CM,MA3CNmK,GA2CM,CA1CFnK,EAgBM,MAhBNoK,GAgBM,CAfF9I,EAAiC+I,EAAA,KAAA,WAArB,IAAQxK,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,GAAR,UAAQ,CAAA,kBACpBG,EAaM,MAbNsK,GAaM,CAZFhJ,EAGyCiJ,GAAA,CAF7B,MAAOnB,EAAA,sCAAAA,EAAU,MAAApH,GACjB,IAAKsH,EAAA,oCAAAA,EAAQ,MAAAtH,GACrB,KAAK,UAAA,0BACThC,EAOM,MAPNwK,GAOM,CANFlJ,EAC6DI,EAAA+I,EAAA,EAAA,CAAzD,MAAM,2BAA0B,gBACpCzK,EAGO,OAAA,CAHD,MAAM,+BAA6B,GAAC,2CAEtC,EAAAA,EAA0C,OAAA,CAApC,MAAM,eAAA,EAAgB,SAAO,CAAA,aAKnDA,EAYM,MAZN0K,GAYM,CAXFpJ,EAA8B+I,EAAA,KAAA,WAAlB,IAAKxK,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,GAAL,OAAK,CAAA,kBACjBG,EASM,MATN2K,GASM,CARFrJ,EAGoCsJ,GAAA,YADvBxB,EAAA,2CAAAA,EAAU,MAAApH,GACnB,KAAK,OAAA,yBACTV,EAG2EuJ,GAAA,YAF9DzB,EAAA,2CAAAA,EAAU,MAAApH,GACnB,SAAS,IACT,MAAM,mDAAA,6BAGlBhC,EAWM,MAXN8K,GAWM,CAVFxJ,EAA4B+I,EAAA,KAAA,WAAhB,IAAGxK,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,GAAH,KAAG,CAAA,kBACfG,EAQM,MARN+K,GAQM,CAPFzJ,EAEoCsJ,GAAA,YADvBtB,EAAA,2CAAAA,EAAQ,MAAAtH,GACjB,KAAK,OAAA,yBACTV,EAG2EuJ,GAAA,YAF9DvB,EAAA,6CAAAA,EAAQ,MAAAtH,GACjB,SAAS,IACT,MAAM,mDAAA,iCAKf,SACP,IAA6E,CAA7EV,EAA6E0J,GAAA,CAA5D,SAAS,IAAK,yBAAOlC,EAAA,MAAI,GAAA,aAAU,IAAOjJ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,GAAP,SAAO,CAAA,kBAC3DyB,EAOgB2J,GAAA,CANZ,SAAS,IACT,MAAKjI,GAAA,CAAC,OAAM,CAAA,aACY+F,EAAA,KAAA,CAAM,CAAA,EAC7B,SAAUA,EAAA,MACV,QAAOQ,CAAA,aAAQ,IAEpB1J,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,GAFoB,qBAEpB,CAAA,4jBCvPZ,MAAMqL,EAAmBC,EAAA,EACnB,CAAE,YAAA3E,EAAa,qBAAA4E,GAAyBC,EAAYH,CAAgB,EACpE,CAAE,gBAAAnH,EAAiB,iBAAAuH,EAAkB,gBAAAC,CAAA,EACvCJ,EAAA,EAEJ,eAAexD,EACX6D,EACAC,EACF,CACE,MAAMN,EAAA,EAAsB,kBAAkBK,EAAKC,CAAO,EAC1DH,EAAA,CAAiB,CAGrB,MAAMI,EAAUxK,EAAI,EAAK,EACnByK,EAAoBzK,EAA2B,IAAI,EACnD0K,EAAoBC,GAAqBF,CAAiB,EAC1DG,EAAwBC,GAAA,EACxB,CAAE,iBAAAC,CAAA,EAAqBX,EAAYS,CAAqB,EACxD,CAAE,eAAAG,GAAmBH,EACrB,CAAE,KAAAnL,CAAA,EAAS0K,EAAYa,IAAc,EAE3C,eAAeC,EACX1L,EACF,CACMuL,EAAiB,MAAM,IACvB,MAAMC,EAAe,EAAK,EAE9B,MAAMV,EAAgB9K,CAAS,EAC/B6K,EAAA,EACAS,GAAA,EAA2B,sBAAA,CAAsB,CAGrD,SAASxI,EAAkBiD,EAA0B,CACjD2E,EAAA,EAAsB,kBAAkB3E,CAAW,EACnD8E,EAAA,CAAiB,CAGrBhG,EAAMsG,EAAmB,MAAOQ,GAAc,CAEtCA,GACA5F,EAAY,MAAM,OAAS,GAC3B,CAAC4E,EAAqB,QAEtBM,EAAQ,MAAQ,GAChB,MAAMR,EAAiB,qBAAA,EAC3B,CACH,EAED1F,GAAU,SAAY,CAClB,MAAMsC,EAAA,CAAY,CACrB,EACD,eAAeA,GAA6B,CACxC,MAAMoD,EAAiB,iBAAA,CAAiB,CAE5C,MAAMmB,EAA2BnL,EAAI,EAAK,EACpCoL,EAAeC,GAAA,EACf,CAAE,SAAAhK,CAAA,EAAa8I,EAAYiB,CAAY,EACvCE,EAAYC,GAAA,EACZ,CAAE,MAAAjK,CAAA,EAAU6I,EAAYmB,CAAS,EACjCE,EAAcC,GAAA,EACd,CAAE,QAAAxK,CAAA,EAAYkJ,EAAYqB,CAAW,EAE3C,eAAe7J,EAAU+J,EAAc,CACnC,OAAO,MAAMV,GAAA,EAAe,UAAUU,CAAI,CAAA,CAE9C,eAAexK,EACX8G,EAC4B,CAC5B,OAAO,MAAMqD,GAAA,EAAmB,cAAcrD,CAAO,CAAA,CAEzD,eAAe7G,EACXwK,EAC2B,CAC3B,OAAO,MAAMF,GAAA,EAAkB,aAAaE,CAAI,CAAA,CAGpD,MAAMhL,EAAsBX,EAAI,EAAiB,EAEjD,eAAe4L,IAAyB,CACpCjL,EAAoB,MAAQ,CAAA,EAC5B,MAAMyJ,EAAA,CAAiB,CAG3B,SAASyB,IAAiB,CACtBxJ,EAAkB1B,EAAoB,KAAK,EAC3CA,EAAoB,MAAQ,CAAA,CAAC,6BAK7BP,EAG0C0L,GAAA,CAHZ,KAAMX,EAAA,qCAAAA,EAAwB,MAAArK,GACvD,wBAAuBN,EAAAuL,CAAA,EAAA,EAAoC,iBAAgB7K,EAC3E,gBAAeC,EAAe,aAAYQ,EAAY,oBAAmBnB,EAAA6J,CAAA,EAAkB,SAAA7J,EAAAa,CAAA,EAAU,MAAAb,EAAAc,CAAA,EACrG,KAAAd,EAAAf,CAAA,EAAM,QAAAe,EAAAS,CAAA,CAAA,mGACXb,EAqDY4L,GAAA,CArDD,MAAM,YAAY,cAAY,WAAA,aACrC,IAmDM,CAnDNlN,EAmDM,MAnDNqB,GAmDM,CAjDFC,EAYgBC,GAAA,CAZD,MAAM,gDAA+C,WAChE,IAUM,CAVNvB,EAUM,MAVNwB,GAUM,CARFxB,EAEM,MAFNyB,GAEM,CADFH,EAA2B6L,EAAA,CAAA,GAE/BnN,EAIM,MAJN8B,GAIM,CAHFR,EAEkB0J,GAAA,CAFD,MAAM,yCAA0C,KAAMtJ,EAAA0L,EAAA,EAClE,uBAAOf,EAAA,MAAwB,GAAA,aAAS,IAC7CxM,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAD6C,oBAC7C,CAAA,wCAIZG,EAaM,MAbN2C,GAaM,CAZFrB,EAWsE+L,GAAA,CAX7C,wBAAuBxL,EAAA,MAC3C,wBAAuBH,EAAAuL,CAAA,EAAA,EAAoC,qBAAoBvL,EAAAiI,EAAA,EAAA,EAC/E,eAAc9H,EAAA,MAAoB,SAAWH,EAAA8E,CAAA,EAAY,OAAS,kBAAiBuG,GACnF,SAAUrL,EAAAa,CAAA,EAAW,MAAOb,EAAAc,CAAA,EAAQ,KAAMd,EAAAf,CAAA,EAAO,SAAUe,EAAAkI,EAAA,EAAA,EAC3D,QAASlI,EAAAS,CAAA,EAAU,sBAAsBmL,GAAiC3F,EAA+C9F,EAAA,MAAoB,IAAKpB,IAAcA,GAAU,EAAE,EAA+B6M,CAAA,EAKrM,iBAAgBlL,EAAgB,gBAAeC,EAAe,aAAYQ,EAChF,SAAQiK,GAAyB,YAAUjN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmC,GAAEH,EAAA,MAAmB,CAAA,GAAOH,EAAA8E,CAAA,CAAW,GAClF,6BAAc3E,EAAA,MAAmB,CAAA,EAAA,uKAE1CP,EAKwBiM,GAAA,CALO,SAAU1L,EAAA,yCAAAA,EAAmB,MAAAG,GAAG,iBAAAI,EAC1D,wBAAuBV,EAAAuL,CAAA,EAAA,EAAoC,qBAAoBvL,EAAAiI,EAAA,EAAA,EAC/E,QAAAjI,EAAAS,CAAA,EAAS,gBAAAE,EAAe,oBAAAX,EAAAqC,CAAA,EAAmB,sBAAA4D,EAAqB,sBAAApE,EAChE,oBAAmB4I,EAAiB,aAAAtJ,EAAY,SAAUnB,EAAAa,CAAA,EAAW,MAAOb,EAAAc,CAAA,EAAQ,YAAAsF,EACpF,SAAUpG,EAAAkI,EAAA,EAAA,EAAkC,eAAclI,EAAA8E,CAAA,EAAc,KAAM9E,EAAAf,CAAA,CAAA,sJAExEe,EAAA8E,CAAA,EAAY,SAAM,GAA7B1G,IAAAC,EAIM,MAJNgD,GAIM,CAHFzB,EAAiEI,EAAA8L,EAAA,EAAA,CAAtD,MAAM,oCAAmC,EACpD3N,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAG,EAAsE,KAAA,CAAlE,MAAM,iCAAA,EAAkC,wBAAqB,EAAA,GACjEH,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAG,EAAqD,IAAA,CAAlD,MAAM,MAAA,EAAO,oCAAiC,EAAA,EAAA,aAErDA,EAUM,MAAA,SAVG,oBAAJ,IAAI2L,CAAA,GACMD,EAAA,QAAYhK,EAAA0J,CAAA,GAAvBtL,IAAAC,EAIM,MAJNyD,GAIM,CAFFlC,EAAiCmM,EAAA,EACjC5N,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAG,EAA2C,YAArC,iCAA8B,EAAA,EAAA,IAExB0B,EAAA0J,CAAA,OAAhBrL,EAGM,MAHNuE,GACkF,gCAElF","x_google_ignoreList":[0]}