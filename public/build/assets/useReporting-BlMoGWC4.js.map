{"version":3,"file":"useReporting-BlMoGWC4.js","sources":["../../../node_modules/@heroicons/vue/16/solid/esm/DocumentTextIcon.js","../../../resources/js/Components/Common/Reporting/ReportingRow.vue","../../../resources/js/Components/Common/Reporting/ReportingChart.vue","../../../resources/js/Components/Common/Reporting/ReportingPieChart.vue","../../../resources/js/utils/useReporting.ts"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M4 2a1.5 1.5 0 0 0-1.5 1.5v9A1.5 1.5 0 0 0 4 14h8a1.5 1.5 0 0 0 1.5-1.5V6.621a1.5 1.5 0 0 0-.44-1.06L9.94 2.439A1.5 1.5 0 0 0 8.878 2H4Zm1 5.75A.75.75 0 0 1 5.75 7h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 5 7.75Zm0 3a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75Z\",\n      \"clip-rule\": \"evenodd\"\n    })\n  ]))\n}","<script setup lang=\"ts\">\nimport { formatHumanReadableDuration } from '@/packages/ui/src/utils/time';\nimport { formatCents } from '@/packages/ui/src/utils/money';\nimport GroupedItemsCountButton from '@/packages/ui/src/GroupedItemsCountButton.vue';\nimport { ref, inject, type ComputedRef } from 'vue';\nimport { twMerge } from 'tailwind-merge';\nimport type { Organization } from '@/packages/api/src';\n\ntype AggregatedGroupedData = GroupedData & {\n    grouped_data?: GroupedData[] | null;\n};\n\ntype GroupedData = {\n    seconds: number;\n    cost: number | null;\n    description: string | null | undefined;\n};\n\nconst props = defineProps<{\n    entry: AggregatedGroupedData;\n    indent?: boolean;\n    currency: string;\n}>();\n\nconst expanded = ref(false);\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n</script>\n\n<template>\n    <div\n        class=\"contents text-text-primary [&>*]:transition [&>*]:border-card-background-separator [&>*]:border-b [&>*]:h-[50px]\">\n        <div\n            :class=\"\n                twMerge(\n                    'pl-6 font-medium flex items-center space-x-3',\n                    props.indent ? 'pl-16' : ''\n                )\n            \">\n            <GroupedItemsCountButton\n                v-if=\"entry.grouped_data && entry.grouped_data?.length > 0\"\n                :expanded=\"expanded\"\n                @click=\"expanded = !expanded\">\n                {{ entry.grouped_data?.length }}\n            </GroupedItemsCountButton>\n            <span>\n                {{ entry.description }}\n            </span>\n        </div>\n        <div class=\"justify-end flex items-center\">\n            {{\n                formatHumanReadableDuration(\n                    entry.seconds,\n                    organization?.interval_format,\n                    organization?.number_format\n                )\n            }}\n        </div>\n        <div class=\"justify-end pr-6 flex items-center\">\n            {{ entry.cost ? formatCents(\n                entry.cost,\n                props.currency,\n                organization?.currency_format,\n                organization?.currency_symbol,\n                organization?.number_format\n            ) : '--' }}\n        </div>\n    </div>\n    <div\n        v-if=\"expanded && entry.grouped_data\"\n        class=\"col-span-3 grid bg-quaternary\"\n        style=\"grid-template-columns: 1fr 150px 150px\">\n        <ReportingRow\n            v-for=\"subEntry in entry.grouped_data\"\n            :key=\"subEntry.description ?? 'none'\"\n            :currency=\"props.currency\"\n            indent\n            :entry=\"subEntry\"></ReportingRow>\n    </div>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport VChart, { THEME_KEY } from 'vue-echarts';\nimport { computed, provide, inject, shallowRef, type ComputedRef } from 'vue';\nimport LinearGradient from 'zrender/lib/graphic/LinearGradient';\nimport {\n    formatDate,\n    formatHumanReadableDuration,\n    formatWeek,\n} from '@/packages/ui/src/utils/time';\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { BarChart } from 'echarts/charts';\nimport {\n    GridComponent,\n    LegendComponent,\n    TitleComponent,\n    TooltipComponent,\n} from 'echarts/components';\nimport type { AggregatedTimeEntries, Organization } from '@/packages/api/src';\nimport { useCssVar } from '@vueuse/core';\n\nuse([\n    CanvasRenderer,\n    BarChart,\n    TitleComponent,\n    GridComponent,\n    TooltipComponent,\n    LegendComponent,\n]);\n\nprovide(THEME_KEY, 'dark');\n\nconst organization = inject<ComputedRef<Organization>>('organization');\nconst chart = shallowRef(null);\ntype GroupedData = AggregatedTimeEntries['grouped_data'];\n\nconst props = defineProps<{\n    groupedData: GroupedData;\n    groupedType: string | null;\n}>();\n\nconst xAxisLabels = computed(() => {\n    if (props.groupedType === 'week') {\n        return props?.groupedData?.map((el) => formatWeek(el.key));\n    }\n    return props?.groupedData?.map((el) =>\n        formatDate(el.key ?? '', organization?.value?.date_format)\n    );\n});\nconst accentColor = useCssVar('--theme-color-chart', null, { observe: true });\nconst labelColor = useCssVar('--color-text-secondary', null, { observe: true });\n\nconst seriesData = computed(() => {\n    return props?.groupedData?.map((el) => {\n        return {\n            value: el.seconds,\n            ...{\n                itemStyle: {\n                    borderColor: new LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: 'rgba(' + accentColor.value + ',0.7)',\n                        },\n                        {\n                            offset: 1,\n                            color: 'rgba(' + accentColor.value + ',0.5)',\n                        },\n                    ]),\n                    emphasis: {\n                        color: new LinearGradient(0, 0, 0, 1, [\n                            {\n                                offset: 0,\n                                color: 'rgba(' + accentColor.value + ',0.9)',\n                            },\n                            {\n                                offset: 1,\n                                color: 'rgba(' + accentColor.value + ',0.7)',\n                            },\n                        ]),\n                    },\n                    borderRadius: [12, 12, 0, 0],\n                    color: new LinearGradient(0, 0, 0, 1, [\n                        {\n                            offset: 0,\n                            color: 'rgba(' + accentColor.value + ',0.7)',\n                        },\n                        {\n                            offset: 1,\n                            color: 'rgba(' + accentColor.value + ',0.5)',\n                        },\n                    ]),\n                },\n            },\n        };\n    });\n});\n\nconst option = computed(() => ({\n    tooltip: {\n        trigger: 'item',\n    },\n    grid: {\n        top: 0,\n        right: 0,\n        bottom: 50,\n        left: 0,\n    },\n    backgroundColor: 'transparent',\n    xAxis: {\n        type: 'category',\n        data: xAxisLabels.value,\n        markLine: {\n            lineStyle: {\n                color: 'rgba(125,156,188,0.1)',\n                type: 'dashed',\n            },\n        },\n        axisLine: {\n            lineStyle: {\n                color: 'transparent', // Set desired color here\n            },\n        },\n        axisLabel: {\n            fontSize: 12,\n            fontWeight: 600,\n            color: labelColor.value,\n            margin: 16,\n            fontFamily: 'Outfit, sans-serif',\n        },\n        axisTick: {\n            lineStyle: {\n                color: 'transparent', // Set desired color here\n            },\n        },\n    },\n    yAxis: {\n        type: 'value',\n        splitLine: {\n            lineStyle: {\n                color: 'rgba(125,156,188,0.2)', // Set desired color here\n            },\n        },\n    },\n    series: [\n        {\n            data: seriesData.value,\n            type: 'bar',\n            tooltip: {\n                valueFormatter: (value: number) => {\n                    return formatHumanReadableDuration(\n                        value,\n                        organization?.value?.interval_format,\n                        organization?.value?.number_format\n                    );\n                },\n            },\n        },\n    ],\n}));\n</script>\n\n<template>\n    <div class=\"w-[calc(100%-1px)]\">\n        <v-chart\n            v-if=\"groupedData && groupedData?.length > 0\"\n            ref=\"chart\"\n            :autoresize=\"true\"\n            class=\"chart\"\n            :option=\"option\" />\n        <div v-else class=\"chart flex flex-col items-center justify-center\">\n            <p class=\"text-lg text-text-primary font-semibold\">\n                No time entries found\n            </p>\n            <p>Try to change the filters and time range</p>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n.chart {\n    height: 300px;\n    background: transparent;\n}\n</style>\n","<script setup lang=\"ts\">\nimport VChart, { THEME_KEY } from 'vue-echarts';\nimport { computed, provide, inject, type ComputedRef } from 'vue';\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { PieChart } from 'echarts/charts';\nimport {\n    GridComponent,\n    LegendComponent,\n    TitleComponent,\n    TooltipComponent,\n} from 'echarts/components';\nimport { formatHumanReadableDuration } from '@/packages/ui/src/utils/time';\nimport { useCssVar } from '@vueuse/core';\nimport type { Organization } from '@/packages/api/src';\n\nuse([\n    CanvasRenderer,\n    PieChart,\n    TitleComponent,\n    GridComponent,\n    TooltipComponent,\n    LegendComponent,\n]);\n\nprovide(THEME_KEY, 'dark');\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\ntype ReportingChartDataEntry = {\n    value: number;\n    name: string;\n    color: string;\n}[];\n\nconst props = defineProps<{\n    data: ReportingChartDataEntry | null;\n}>();\nconst labelColor = useCssVar('--color-text-secondary', null, { observe: true });\n\nconst seriesData = computed(() => {\n    return props.data?.map((el) => {\n        return {\n            ...el,\n            ...{\n                itemStyle: {\n                    color: `${el.color}BB`,\n                },\n                emphasis: {\n                    itemStyle: {\n                        color: `${el.color}`,\n                    },\n                },\n            },\n        };\n    });\n});\nconst option = computed(() => ({\n    tooltip: {\n        trigger: 'item',\n    },\n    legend: {\n        show: true,\n        top: '250px',\n        textStyle: {\n            color: labelColor.value,\n        },\n    },\n    backgroundColor: 'transparent',\n    series: [\n        {\n            label: {\n                show: false,\n            },\n            tooltip: {\n                valueFormatter: (value: number) => {\n                    return formatHumanReadableDuration(\n                        value,\n                        organization?.value?.interval_format,\n                        organization?.value?.number_format\n                    );\n                },\n            },\n            data: seriesData.value,\n            radius: ['30%', '60%'],\n            top: '-45%',\n            type: 'pie',\n        },\n    ],\n}));\n</script>\n\n<template>\n    <v-chart\n        class=\"background-transparent max-w-[300px] mx-auto h-[460px]\"\n        :autoresize=\"true\"\n        :option=\"option\" />\n</template>\n\n<style scoped></style>\n","import { defineStore, storeToRefs } from 'pinia';\nimport { api } from '@/packages/api/src';\nimport { type Component, computed, ref } from 'vue';\nimport type {\n    AggregatedTimeEntries,\n    AggregatedTimeEntriesQueryParams,\n    ReportingResponse,\n} from '@/packages/api/src';\nimport {\n    getCurrentOrganizationId,\n    getCurrentRole,\n    getCurrentUser,\n} from '@/utils/useUser';\nimport { useNotificationsStore } from '@/utils/notification';\nimport { useProjectsStore } from '@/utils/useProjects';\nimport { useMembersStore } from '@/utils/useMembers';\nimport { useTasksStore } from '@/utils/useTasks';\nimport { useClientsStore } from '@/utils/useClients';\nimport {\n    CheckCircleIcon,\n    UserCircleIcon,\n    UserGroupIcon,\n} from '@heroicons/vue/20/solid';\nimport { DocumentTextIcon, FolderIcon } from '@heroicons/vue/16/solid';\nimport BillableIcon from '@/packages/ui/src/Icons/BillableIcon.vue';\n\nexport type GroupingOption =\n    | 'project'\n    | 'task'\n    | 'user'\n    | 'billable'\n    | 'client'\n    | 'description';\n\nexport const useReportingStore = defineStore('reporting', () => {\n    const reportingGraphResponse = ref<ReportingResponse | null>(null);\n    const reportingTableResponse = ref<ReportingResponse | null>(null);\n\n    const { handleApiRequestNotifications } = useNotificationsStore();\n\n    async function fetchGraphReporting(\n        params: AggregatedTimeEntriesQueryParams\n    ) {\n        const organization = getCurrentOrganizationId();\n        if (organization) {\n            reportingGraphResponse.value = await handleApiRequestNotifications(\n                () =>\n                    api.getAggregatedTimeEntries({\n                        params: {\n                            organization: organization,\n                        },\n                        queries: params,\n                    }),\n                undefined,\n                'Failed to fetch reporting data'\n            );\n        }\n    }\n\n    async function fetchTableReporting(\n        params: AggregatedTimeEntriesQueryParams\n    ) {\n        const organization = getCurrentOrganizationId();\n        if (organization) {\n            reportingTableResponse.value = await handleApiRequestNotifications(\n                () =>\n                    api.getAggregatedTimeEntries({\n                        params: {\n                            organization: organization,\n                        },\n                        queries: params,\n                    }),\n                undefined,\n                'Failed to fetch reporting data'\n            );\n        }\n    }\n\n    const aggregatedGraphTimeEntries = computed<AggregatedTimeEntries>(() => {\n        return reportingGraphResponse.value?.data as AggregatedTimeEntries;\n    });\n\n    const aggregatedTableTimeEntries = computed<AggregatedTimeEntries>(() => {\n        return reportingTableResponse.value?.data as AggregatedTimeEntries;\n    });\n\n    const emptyPlaceholder = {\n        user: 'No User',\n        project: 'No Project',\n        task: 'No Task',\n        billable: 'Non-Billable',\n        client: 'No Client',\n        description: 'No Description',\n    } as Record<string, string>;\n\n    function getNameForReportingRowEntry(\n        key: string | null,\n        type: string | null\n    ) {\n        if (type === null) {\n            return null;\n        }\n        if (key === null) {\n            return emptyPlaceholder[type as keyof typeof emptyPlaceholder];\n        }\n\n        if (type === 'project') {\n            const projectsStore = useProjectsStore();\n            const { projects } = storeToRefs(projectsStore);\n            return projects.value.find((project) => project.id === key)?.name;\n        }\n        if (type === 'user') {\n            if (getCurrentRole() === 'employee') {\n                return getCurrentUser().name;\n            }\n            const memberStore = useMembersStore();\n            const { members } = storeToRefs(memberStore);\n            return members.value.find((member) => member.user_id === key)?.name;\n        }\n        if (type === 'task') {\n            const taskStore = useTasksStore();\n            const { tasks } = storeToRefs(taskStore);\n            return tasks.value.find((task) => task.id === key)?.name;\n        }\n        if (type === 'client') {\n            const clientsStore = useClientsStore();\n            const { clients } = storeToRefs(clientsStore);\n            return clients.value.find((client) => client.id === key)?.name;\n        }\n        if (type === 'billable') {\n            if (key === '0') {\n                return 'Non-Billable';\n            } else {\n                return 'Billable';\n            }\n        }\n        return key;\n    }\n\n    const groupByOptions: {\n        label: string;\n        value: GroupingOption;\n        icon: Component;\n    }[] = [\n        {\n            label: 'Members',\n            value: 'user',\n            icon: UserGroupIcon,\n        },\n        {\n            label: 'Projects',\n            value: 'project',\n            icon: FolderIcon,\n        },\n        {\n            label: 'Tasks',\n            value: 'task',\n            icon: CheckCircleIcon,\n        },\n        {\n            label: 'Clients',\n            value: 'client',\n            icon: UserCircleIcon,\n        },\n        {\n            label: 'Billable',\n            value: 'billable',\n            icon: BillableIcon,\n        },\n        {\n            label: 'Description',\n            value: 'description',\n            icon: DocumentTextIcon,\n        },\n    ];\n\n    return {\n        aggregatedGraphTimeEntries,\n        fetchGraphReporting,\n        fetchTableReporting,\n        aggregatedTableTimeEntries,\n        getNameForReportingRowEntry,\n        groupByOptions,\n        emptyPlaceholder,\n    };\n});\n"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","props","__props","expanded","ref","organization","inject","_hoisted_1","_normalizeClass","_unref","twMerge","entry","_createBlock","GroupedItemsCountButton","$event","_toDisplayString","_hoisted_2","formatHumanReadableDuration","_hoisted_3","formatCents","_hoisted_4","_Fragment","_renderList","subEntry","_component_ReportingRow","use","CanvasRenderer","BarChart","TitleComponent","GridComponent","TooltipComponent","LegendComponent","provide","THEME_KEY","chart","shallowRef","xAxisLabels","computed","_a","el","formatWeek","_b","formatDate","accentColor","useCssVar","labelColor","seriesData","LinearGradient","option","value","groupedData","VChart","PieChart","useReportingStore","defineStore","reportingGraphResponse","reportingTableResponse","handleApiRequestNotifications","useNotificationsStore","fetchGraphReporting","params","getCurrentOrganizationId","api","fetchTableReporting","aggregatedGraphTimeEntries","aggregatedTableTimeEntries","emptyPlaceholder","getNameForReportingRowEntry","key","type","projectsStore","useProjectsStore","projects","storeToRefs","project","getCurrentRole","getCurrentUser","memberStore","useMembersStore","members","member","taskStore","useTasksStore","tasks","_c","task","clientsStore","useClientsStore","clients","_d","client","UserGroupIcon","FolderIcon","CheckCircleIcon","UserCircleIcon","BillableIcon","DocumentTextIcon"],"mappings":"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","x_google_ignoreList":[0]}