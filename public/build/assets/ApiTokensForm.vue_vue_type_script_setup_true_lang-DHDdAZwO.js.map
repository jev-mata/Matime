{"version":3,"file":"ApiTokensForm.vue_vue_type_script_setup_true_lang-DHDdAZwO.js","sources":["../../../resources/js/Pages/Profile/Partials/ApiTokensForm.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport FormSection from '@/Components/FormSection.vue';\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport {computed, ref, inject, type ComputedRef} from 'vue';\nimport InputLabel from '@/packages/ui/src/Input/InputLabel.vue';\nimport {\n    api,\n    type ApiToken,\n    type CreateApiTokenBody\n} from '@/packages/api/src';\nimport SectionBorder from \"@/Components/SectionBorder.vue\";\nimport DangerButton from \"@/packages/ui/src/Buttons/DangerButton.vue\";\nimport TextInput from \"../../../packages/ui/src/Input/TextInput.vue\";\nimport SecondaryButton from \"../../../packages/ui/src/Buttons/SecondaryButton.vue\";\nimport DialogModal from \"@/packages/ui/src/DialogModal.vue\";\nimport InputError from \"@/packages/ui/src/Input/InputError.vue\";\nimport ActionMessage from \"@/Components/ActionMessage.vue\";\nimport ConfirmationModal from \"@/Components/ConfirmationModal.vue\";\nimport ActionSection from \"@/Components/ActionSection.vue\";\nimport {useForm} from \"@inertiajs/vue3\";\nimport {useMutation, useQuery, useQueryClient} from \"@tanstack/vue-query\";\nimport {useNotificationsStore} from \"@/utils/notification\";\nimport {useClipboard} from \"@vueuse/core\";\nimport { formatDateTimeLocalized} from \"../../../packages/ui/src/utils/time\";\nimport {ClockIcon} from \"@heroicons/vue/20/solid\";\nimport type { Organization } from '@/packages/api/src';\n\nconst queryClient = useQueryClient();\n\nconst apiTokenBeingDeleted = ref<ApiToken | null>(null);\nconst apiTokenBeingRevoked = ref<ApiToken | null>(null);\n\nconst { handleApiRequestNotifications } = useNotificationsStore();\nconst newToken = ref('');\n\nconst { copy, copied, isSupported } = useClipboard();\n\nconst organization = inject<ComputedRef<Organization>>('organization');\n\nasync function createApiToken(){\n    await handleApiRequestNotifications(\n        () =>\n            createApiTokenMutation.mutateAsync({\n                name: createApiTokenForm.name,\n            }),\n        'API Token successfully created',\n        'There was an error while creating the API Token',\n        (response) => {\n            createApiTokenForm.name = '';\n            displayingToken.value = true;\n            newToken.value = response.data.access_token;\n        }\n    );\n}\n\nconst createApiTokenForm = useForm({\n    name: '',\n});\n\nfunction confirmApiTokenDeletion (token: ApiToken) {\n    apiTokenBeingDeleted.value = token;\n}\n\nfunction confirmApiTokenRevocation(token: ApiToken){\n    apiTokenBeingRevoked.value = token;\n}\n\nconst displayingToken = ref(false);\n\nasync function deleteApiToken () {\n    if(apiTokenBeingDeleted.value){\n        await handleApiRequestNotifications(\n            () =>\n                deleteApiTokenMutation.mutateAsync(apiTokenBeingDeleted.value!.id),\n            'API Token successfully deleted',\n            'There was an error while deleting the API Token',\n            () => {\n                apiTokenBeingDeleted.value = null;\n            }\n        );\n    }\n};\n\nasync function revokeApiToken () {\n    if(apiTokenBeingRevoked.value){\n        await handleApiRequestNotifications(\n            () =>\n                revokeApiTokenMutation.mutateAsync(apiTokenBeingRevoked.value!.id),\n            'API Token successfully revoked',\n            'There was an error while revoking the API Token',\n            () => {\n                apiTokenBeingRevoked.value = null;\n            }\n        );\n    }\n};\n\n\nconst { data: sharedReportResponseData } = useQuery({\n    queryKey: ['api-tokens'],\n    queryFn: () =>\n        api.getApiTokens(),\n});\n\nconst tokens = computed(() => {\n    return sharedReportResponseData.value?.data ?? [];\n})\n\nconst createApiTokenMutation = useMutation({\n    mutationFn: async (apiToken: CreateApiTokenBody) => {\n        return await api.createApiToken(apiToken);\n    },\n    onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: ['api-tokens'] })\n    },\n});\n\nconst deleteApiTokenMutation = useMutation({\n    mutationFn: async (apiTokenId: string) => {\n        return await api.deleteApiToken(undefined, {\n            params: {\n                apiToken: apiTokenId,\n            },\n        });\n    },\n    onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: ['api-tokens'] })\n    },\n});\n\nconst revokeApiTokenMutation = useMutation({\n    mutationFn: async (apiTokenId: string) => {\n        return await api.revokeApiToken(undefined, {\n            params: {\n                apiToken: apiTokenId,\n            },\n        });\n    },\n    onSuccess: () => {\n        queryClient.invalidateQueries({ queryKey: ['api-tokens'] })\n    },\n});\n\n\n\n</script>\n\n<template>\n    <div>\n        <!-- Generate API Token -->\n        <FormSection @submitted=\"createApiToken\">\n            <template #title> Create API Token </template>\n\n            <template #description>\n                API tokens allow third-party services to authenticate with our\n                application on your behalf.\n            </template>\n\n            <template #form>\n                <!-- Token Name -->\n                <div class=\"col-span-6 sm:col-span-4\">\n                    <InputLabel for=\"api_key_name\" value=\"API Key Name\" />\n                    <TextInput\n                        id=\"api_key_name\"\n                        v-model=\"createApiTokenForm.name\"\n                        type=\"text\"\n                        class=\"mt-1 block w-full\" />\n                    <InputError\n                        :message=\"createApiTokenForm.errors.name\"\n                        class=\"mt-2\" />\n                    <div class=\"text-text-tertiary text-sm pt-3 flex space-x-1.5 font-medium items-center\">\n                        <ClockIcon class=\"w-4\"></ClockIcon>\n                        <span>\n                        API Tokens are valid for 1 year\n                        </span>\n                    </div>\n                </div>\n            </template>\n\n            <template #actions>\n                <ActionMessage\n                    :on=\"createApiTokenForm.recentlySuccessful\"\n                    class=\"me-3\">\n                    Created.\n                </ActionMessage>\n\n                <PrimaryButton\n                    :class=\"{ 'opacity-25': createApiTokenForm.processing }\"\n                    :disabled=\"createApiTokenForm.processing\">\n                    Create API Key\n                </PrimaryButton>\n            </template>\n        </FormSection>\n\n        <div v-if=\"tokens.length > 0\">\n            <SectionBorder />\n\n            <!-- Manage API Tokens -->\n            <div class=\"mt-10 sm:mt-0\">\n                <ActionSection>\n                    <template #title> Manage API Tokens </template>\n\n                    <template #description>\n                        You may delete or revoke any of your existing tokens if they are\n                        no longer needed.\n                    </template>\n\n                    <!-- API Token List -->\n                    <template #content>\n                        <div class=\"divide-border-secondary divide-y\">\n                            <div\n                                v-for=\"token in tokens\"\n                                :key=\"token.id\"\n                                class=\"flex items-center py-2.5 justify-between\">\n                                <div class=\"break-all text-text-primary\">\n                                    <div>{{ token.name }}</div>\n                                    <div class=\"text-sm text-text-tertiary space-x-3\">\n                                        <span v-if=\"token.created_at\">\n                                            Created at {{ formatDateTimeLocalized(token.created_at, organization?.date_format, organization?.time_format) }}\n                                        </span>\n                                        <span v-if=\"token.expires_at\">\n                                            Expires at {{ formatDateTimeLocalized(token.expires_at, organization?.date_format, organization?.time_format) }}\n                                        </span>\n                                        <span v-if=\"token.revoked\">\n                                            Revoked\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div class=\"flex items-center ms-2\">\n                                    <div\n                                        v-if=\"token.last_used_ago\"\n                                        class=\"text-sm text-gray-400\">\n                                        Last used {{ token.last_used_ago }}\n                                    </div>\n                                    <button\n                                        v-if=\"!token.revoked\"\n                                        class=\"cursor-pointer ms-6 text-sm text-text-secondary\"\n                                        :aria-label=\"'Revoke API Token ' + token.name\"\n                                        @click=\"confirmApiTokenRevocation(token)\">\n                                        Revoke\n                                    </button>\n                                    <button\n                                        class=\"cursor-pointer ms-6 text-sm text-red-500\"\n                                        :aria-label=\"'Delete API Token ' + token.name\"\n                                        @click=\"confirmApiTokenDeletion(token)\">\n                                        Delete\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </template>\n                </ActionSection>\n            </div>\n        </div>\n\n        <!-- Token Value Modal -->\n        <DialogModal :show=\"displayingToken\" @close=\"displayingToken = false\">\n            <template #title> API Token created successfully </template>\n\n            <template #content>\n                <div>\n                    Please copy your new API token. For your security, it won't\n                    be shown again.\n                    <strong>This token is valid for one year</strong> unless you revoke it.\n                </div>\n\n                <div>\n                </div>\n\n                <div class=\"flex gap-2 pt-6 w-full\">\n                    <TextInput v-if=\"newToken\" disabled :model-value=\"newToken\" class=\"flex-1 text-gray-500\"></TextInput>\n                    <PrimaryButton v-if=\"isSupported\" @click=\"copy(newToken)\">{{ copied ? 'Copied!' : 'Copy Token' }}</PrimaryButton>\n                </div>\n\n            </template>\n\n            <template #footer>\n                <SecondaryButton @click=\"displayingToken = false\">\n                    Close\n                </SecondaryButton>\n            </template>\n        </DialogModal>\n\n        <!-- Delete Token Confirmation Modal -->\n        <ConfirmationModal\n            :show=\"apiTokenBeingDeleted != null\"\n            @close=\"apiTokenBeingDeleted = null\">\n            <template #title> Delete API Token </template>\n\n            <template #content>\n                Are you sure you would like to delete this API token?\n            </template>\n\n            <template #footer>\n                <SecondaryButton @click=\"apiTokenBeingDeleted = null\">\n                    Cancel\n                </SecondaryButton>\n\n                <DangerButton\n                    class=\"ms-3\"\n                    :class=\"{ 'opacity-25': createApiTokenMutation.isPending.value }\"\n                    :disabled=\"createApiTokenMutation.isPending.value\"\n                    @click=\"deleteApiToken\">\n                    Delete\n                </DangerButton>\n            </template>\n        </ConfirmationModal>\n\n        <ConfirmationModal\n            :show=\"apiTokenBeingRevoked != null\"\n            @close=\"apiTokenBeingRevoked = null\">\n            <template #title> Revoke API Token </template>\n\n            <template #content>\n                Are you sure you would like to revoke this API token?\n            </template>\n\n            <template #footer>\n                <SecondaryButton @click=\"apiTokenBeingRevoked = null\">\n                    Cancel\n                </SecondaryButton>\n\n                <DangerButton\n                    class=\"ms-3\"\n                    :class=\"{ 'opacity-25': revokeApiTokenMutation.isPending.value }\"\n                    :disabled=\"revokeApiTokenMutation.isPending.value\"\n                    @click=\"revokeApiToken\">\n                    Revoke\n                </DangerButton>\n            </template>\n        </ConfirmationModal>\n    </div>\n</template>\n"],"names":["queryClient","useQueryClient","apiTokenBeingDeleted","ref","apiTokenBeingRevoked","handleApiRequestNotifications","useNotificationsStore","newToken","copy","copied","isSupported","useClipboard","organization","inject","createApiToken","createApiTokenMutation","createApiTokenForm","response","displayingToken","useForm","confirmApiTokenDeletion","token","confirmApiTokenRevocation","deleteApiToken","deleteApiTokenMutation","revokeApiToken","revokeApiTokenMutation","sharedReportResponseData","useQuery","api","tokens","computed","_a","useMutation","apiToken","apiTokenId","_createElementBlock","_createVNode","FormSection","_cache","_createElementVNode","_hoisted_1","InputLabel","TextInput","_unref","$event","InputError","_hoisted_2","ClockIcon","ActionMessage","PrimaryButton","_normalizeClass","_hoisted_3","SectionBorder","_hoisted_4","ActionSection","_hoisted_5","_Fragment","_renderList","_hoisted_6","_toDisplayString","_hoisted_7","_openBlock","_hoisted_8","formatDateTimeLocalized","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","DialogModal","_hoisted_15","_createBlock","SecondaryButton","ConfirmationModal","DangerButton"],"mappings":"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"}