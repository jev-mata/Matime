{"version":3,"file":"TimeTracker.vue_vue_type_script_setup_true_lang-DqSiGLXj.js","sources":["../../../resources/js/packages/ui/src/TimeTracker/TimeTrackerRunningInDifferentOrganizationOverlay.vue","../../../resources/js/packages/ui/src/TimeTracker/TimeTrackerTagDropdown.vue","../../../resources/js/packages/ui/src/TimeTracker/TimeTrackerRangeSelector.vue","../../../resources/js/packages/ui/src/TimeTracker/TimeTrackerRecentlyTrackedEntry.vue","../../../resources/js/packages/ui/src/utils/select.ts","../../../resources/js/packages/ui/src/TimeTracker/TimeTrackerControls.vue","../../../resources/js/Components/TimeTracker.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\n\ndefineEmits<{\n    switchOrganization: [];\n}>();\n</script>\n\n<template>\n    <div\n        class=\"absolute w-full h-full backdrop-blur-sm z-10 flex items-center justify-center\">\n        <div\n            class=\"w-full h-[calc(100%+10px)] absolute bg-default-background opacity-75 backdrop-blur-sm\"></div>\n        <div class=\"flex space-x-3 items-center w-full z-20 justify-center\">\n            <span class=\"text-sm text-text-primary\">\n                The Timer is running in a different organization.\n            </span>\n            <SecondaryButton @click=\"$emit('switchOrganization')\"\n                >Switch to organization</SecondaryButton\n            >\n        </div>\n    </div>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport TagDropdown from '@/packages/ui/src/Tag/TagDropdown.vue';\nimport { twMerge } from 'tailwind-merge';\nimport { TagIcon } from '@heroicons/vue/20/solid';\nimport { computed } from 'vue';\nimport type { Tag } from '@/packages/api/src';\n\nconst emit = defineEmits<{\n    changed: [];\n}>();\n\nconst model = defineModel<string[]>({\n    default: [],\n});\nconst iconColorClasses = computed(() => {\n    if (model.value.length > 0) {\n        return 'text-input-select-active focus:text-input-select-active-hover hover:text-input-select-active-hover';\n    } else {\n        return 'text-icon-default hover:text-icon-active focus:text-icon-active';\n    }\n});\ndefineProps<{\n    tags: Tag[];\n    createTag: (name: string) => Promise<Tag | undefined>;\n}>();\n</script>\n\n<template>\n    <TagDropdown\n        v-model=\"model\"\n        :create-tag\n        :tags=\"tags\"\n        @changed=\"emit('changed')\">\n        <template #trigger>\n            <button\n                data-testid=\"tag_dropdown\"\n                :class=\"\n                    twMerge(\n                        iconColorClasses,\n                        'flex-shrink-0 ring-0 focus:outline-none focus:ring-2 focus:ring-ring transition focus-visible:bg-card-background-separator hover:bg-card-background-separator rounded-full w-10 h-10 flex items-center justify-center'\n                    )\n                \">\n                <TagIcon class=\"w-5 h-5 lg:h-6 lg:w-6\"></TagIcon>\n                <span\n                    v-if=\"model.length > 1\"\n                    class=\"font-extrabold absolute rounded-full text-xs w-3 h-3 block top-[15px] rotate-[45deg] right-[14px] text-card-background\">\n                    {{ model.length }}\n                </span>\n            </button>\n        </template>\n    </TagDropdown>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport Dropdown from '@/packages/ui/src/Input/Dropdown.vue';\nimport { computed, ref } from 'vue';\nimport TimeRangeSelector from '@/packages/ui/src/Input/TimeRangeSelector.vue';\nimport dayjs, { Dayjs } from 'dayjs';\nimport {\n    formatDuration,\n    getDayJsInstance,\n    parseTimeInput,\n} from '@/packages/ui/src/utils/time';\nimport type { TimeEntry } from '@/packages/api/src';\n\nconst currentTimeEntry = defineModel<TimeEntry>('currentTimeEntry', {\n    required: true,\n});\nconst now = defineModel<null | Dayjs>('liveTimer');\n\nconst emit = defineEmits<{\n    startLiveTimer: [];\n    stopLiveTimer: [];\n    updateTimer: [];\n    startTimer: [];\n}>();\n\nconst open = ref(false);\n\nfunction pauseLiveTimerUpdate(event: FocusEvent) {\n    (event.target as HTMLInputElement).select();\n    emit('stopLiveTimer');\n}\n\nfunction onTimeEntryEnterPress() {\n    updateTimerAndStartLiveTimerUpdate();\n    open.value = false;\n    const activeElement = document.activeElement as HTMLElement;\n    activeElement?.blur();\n}\n\nconst currentTime = computed({\n    get() {\n        if (temporaryCustomTimerEntry.value !== '') {\n            return temporaryCustomTimerEntry.value;\n        }\n        if (now.value && currentTimeEntry.value.start) {\n            const startTime = dayjs(currentTimeEntry.value.start);\n            const diff = now.value.diff(startTime, 'seconds');\n            return formatDuration(diff);\n        }\n        return null;\n    },\n    // setter\n    set(newValue) {\n        if (newValue) {\n            temporaryCustomTimerEntry.value = newValue;\n        } else {\n            temporaryCustomTimerEntry.value = '';\n        }\n    },\n});\n\nfunction updateTimerAndStartLiveTimerUpdate() {\n    const { seconds } = parseTimeInput(\n        temporaryCustomTimerEntry.value,\n        'minutes'\n    );\n\n    if (seconds && seconds > 0) {\n        const newStartDate = dayjs().subtract(seconds, 's');\n        currentTimeEntry.value.start = newStartDate.utc().format();\n        if (currentTimeEntry.value.id !== '') {\n            emit('updateTimer');\n        } else {\n            emit('startTimer');\n        }\n    }\n    now.value = dayjs().utc();\n    temporaryCustomTimerEntry.value = '';\n    emit('startLiveTimer');\n}\n\nconst temporaryCustomTimerEntry = ref<string>('');\n\nasync function updateTimeRange(newStart: string) {\n    // prohibit updates in the future\n    if (getDayJsInstance()(newStart).isBefore(getDayJsInstance()())) {\n        currentTimeEntry.value.start = newStart;\n        if (currentTimeEntry.value.id) {\n            emit('updateTimer');\n        } else {\n            emit('startTimer');\n        }\n    }\n}\n\nconst startTime = computed(() => {\n    if (currentTimeEntry.value.start && currentTimeEntry.value.start !== '') {\n        return currentTimeEntry.value.start;\n    }\n    return dayjs().utc().format();\n});\nconst inputField = ref<HTMLInputElement | null>(null);\n\nconst timeRangeSelector = ref<HTMLElement | null>(null);\n\nfunction openModalOnTab(e: FocusEvent) {\n    // check if the source is inside the dropdown\n    const source = e.relatedTarget as HTMLElement;\n    if (\n        source &&\n        window.document.body\n            .querySelector<HTMLElement>('#app')\n            ?.contains(source)\n    ) {\n        open.value = true;\n    }\n}\n\nfunction focusNextElement(e: KeyboardEvent) {\n    if (open.value) {\n        e.preventDefault();\n        const focusableElement =\n            timeRangeSelector.value?.querySelector<HTMLElement>(\n                'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n            );\n        focusableElement?.focus();\n    }\n}\n\nfunction closeAndFocusInput() {\n    open.value = false;\n    inputField.value?.focus();\n}\n</script>\n\n<template>\n    <div class=\"relative\">\n        <Dropdown\n            v-model=\"open\"\n            align=\"center\"\n            :auto-focus=\"false\"\n            :close-on-content-click=\"false\"\n            @submit=\"closeAndFocusInput\">\n            <template #trigger>\n                <input\n                    ref=\"inputField\"\n                    v-model=\"currentTime\"\n                    placeholder=\"00:00:00\"\n                    data-testid=\"time_entry_time\"\n                    class=\"w-[110px] lg:w-[130px] h-full text-text-primary py-2.5 rounded-lg border-border-secondary border text-center px-4 text-base lg:text-lg font-semibold bg-card-background border-none placeholder-muted focus:ring-0 transition\"\n                    type=\"text\"\n                    @focus=\"pauseLiveTimerUpdate\"\n                    @focusin=\"openModalOnTab\"\n                    @keydown.exact.tab=\"focusNextElement\"\n                    @keydown.exact.shift.tab=\"open = false\"\n                    @blur=\"updateTimerAndStartLiveTimerUpdate\"\n                    @keydown.enter=\"onTimeEntryEnterPress\" />\n            </template>\n            <template #content>\n                <div ref=\"timeRangeSelector\">\n                    <TimeRangeSelector\n                        :start=\"startTime\"\n                        :end=\"null\"\n                        @changed=\"updateTimeRange\"\n                        @close=\"closeAndFocusInput\">\n                    </TimeRangeSelector>\n                </div>\n            </template>\n        </Dropdown>\n    </div>\n</template>\n\n<style></style>\n","<script setup lang=\"ts\">\n\nimport {ProjectBadge} from \"@/packages/ui/src\";\nimport type {TimeEntry} from \"@/packages/api/src\";\nimport {twMerge} from \"tailwind-merge\";\nimport {ChevronRightIcon} from \"@heroicons/vue/16/solid\";\nimport {computed} from \"vue\";\nimport type {Project, Task} from \"@/packages/api/src\";\n\nconst props = defineProps<{\n    timeEntry: TimeEntry,\n    highlighted: boolean,\n    projects?: Project[]\n    tasks?: Task[]\n}>()\nconst project = computed(() => {\n    return props.projects?.find(\n        (iteratingProject) => iteratingProject.id === props.timeEntry.project_id\n    );\n});\nconst task = computed(() => {\n    return props.tasks?.find(\n        (iteratingTask) => iteratingTask.id === props.timeEntry.task_id\n    );\n});\n</script>\n\n<template>\n    <button\n        tabindex=\"-1\"\n        :data-select-id=\"timeEntry.id\"\n        :class=\"twMerge('px-2 py-1.5 flex justify-between items-center space-x-2 w-full rounded', props.highlighted && 'bg-card-background-active')\">\n        <span v-if=\"timeEntry.description !== ''\" class=\"text-sm font-medium\">\n            {{\n                    timeEntry.description\n            }}\n        </span>\n        <span v-else class=\"text-sm text-text-tertiary font-medium\">\n            No Description\n        </span>\n        <ProjectBadge\n            ref=\"projectDropdownTrigger\"\n            :color=\"project?.color\"\n            :name=\"project?.name\"\n            class=\"\">\n            <div v-if=\"project\" class=\"flex items-center lg:space-x-1 min-w-0\">\n                    <span class=\"whitespace-nowrap text-xs \">\n                        {{ project?.name }}\n                    </span>\n                <ChevronRightIcon\n                    v-if=\"task\"\n                    class=\"w-4 lg:w-5 text-text-secondary shrink-0\"></ChevronRightIcon>\n                <div\n                    v-if=\"task\"\n                    class=\"min-w-0 shrink text-xs truncate\">\n                    {{ task.name }}\n                </div>\n            </div>\n            <div v-else>\n                No Project\n            </div>\n        </ProjectBadge>\n    </button>\n</template>\n\n<style scoped>\n\n</style>\n","import {computed, type Ref, watch} from \"vue\";\nimport {onKeyStroke} from \"@vueuse/core\";\n\nexport function useSelectEvents<Type>(filteredItems: Ref<Array<Type>>,\n                                      highlightedItemId: Ref<string | null>,\n                                      getKeyFromItem: (item: Type) => string,\n                                      open: Ref<boolean>) {\n\n    function moveHighlightUp() {\n        if (highlightedItem.value) {\n            const currentHightlightedIndex = filteredItems.value.indexOf(\n                highlightedItem.value\n            );\n            if (currentHightlightedIndex === 0) {\n                highlightedItemId.value = getKeyFromItem(\n                    filteredItems.value[filteredItems.value.length - 1]\n                );\n            } else {\n                highlightedItemId.value = getKeyFromItem(\n                    filteredItems.value[currentHightlightedIndex - 1]\n                );\n            }\n        }\n        else {\n            highlightedItemId.value = getKeyFromItem(filteredItems.value[filteredItems.value.length - 1]);\n        }\n    }\n\n    function moveHighlightDown() {\n        if (highlightedItem.value) {\n            const currentHightlightedIndex = filteredItems.value.indexOf(\n                highlightedItem.value\n            );\n            if (currentHightlightedIndex === filteredItems.value.length - 1) {\n                highlightedItemId.value = getKeyFromItem(\n                    filteredItems.value[0]\n                );\n            } else {\n                highlightedItemId.value = getKeyFromItem(\n                    filteredItems.value[currentHightlightedIndex + 1]\n                );\n            }\n        }\n        else{\n            highlightedItemId.value = getKeyFromItem(filteredItems.value[0]);\n        }\n    }\n\n    const highlightedItem = computed(() => {\n        return filteredItems.value.find(\n            (item) => getKeyFromItem(item) === highlightedItemId.value\n        );\n    });\n\n    onKeyStroke('ArrowDown', (e) => {\n        if (open.value === true) {\n            moveHighlightDown();\n            e.preventDefault();\n        }\n    });\n\n    onKeyStroke('ArrowUp', (e) => {\n        if (open.value === true) {\n            moveHighlightUp();\n            e.preventDefault();\n        }\n    });\n\n    watch(open, (newOpen) => {\n        if (newOpen === false) {\n            highlightedItemId.value = null;\n        }\n    });\n}\n\n","<script setup lang=\"ts\">\nimport TimeTrackerTagDropdown from '@/packages/ui/src/TimeTracker/TimeTrackerTagDropdown.vue';\nimport TimeTrackerStartStop from '@/packages/ui/src/TimeTrackerStartStop.vue';\nimport TimeTrackerRangeSelector from '@/packages/ui/src/TimeTracker/TimeTrackerRangeSelector.vue';\nimport BillableToggleButton from '@/packages/ui/src/Input/BillableToggleButton.vue';\nimport TimeTrackerProjectTaskDropdown from '@/packages/ui/src/TimeTracker/TimeTrackerProjectTaskDropdown.vue';\nimport type {\n    CreateClientBody,\n    CreateProjectBody,\n    Project,\n    Tag,\n    Task,\n    TimeEntry,\n    Client,\n} from '@/packages/api/src';\nimport {computed, nextTick, ref, watch} from 'vue';\nimport type {Dayjs} from 'dayjs';\nimport {useTimeEntriesStore} from '@/utils/useTimeEntries';\nimport {storeToRefs} from 'pinia';\nimport {useFocus} from \"@vueuse/core\";\nimport {autoUpdate, flip, limitShift, offset, shift, useFloating} from \"@floating-ui/vue\";\nimport TimeTrackerRecentlyTrackedEntry from \"@/packages/ui/src/TimeTracker/TimeTrackerRecentlyTrackedEntry.vue\";\nimport {useSelectEvents} from \"@/packages/ui/src/utils/select\";\n\nconst currentTimeEntry = defineModel<TimeEntry>('currentTimeEntry', {\n    required: true,\n});\nconst liveTimer = defineModel<Dayjs | null>('liveTimer', {required: true});\n\nconst currentTimeEntryDescriptionInput = ref<HTMLInputElement | null>(null);\n\nconst props = defineProps<{\n    projects: Project[];\n    tasks: Task[];\n    tags: Tag[];\n    clients: Client[];\n    createTag: (name: string) => Promise<Tag | undefined>;\n    createProject: (project: CreateProjectBody) => Promise<Project | undefined>;\n    createClient: (client: CreateClientBody) => Promise<Client | undefined>;\n    isActive: boolean;\n    currency: string;\n    enableEstimatedTime: boolean;\n    canCreateProject: boolean;\n}>();\n\nconst emit = defineEmits<{\n    startTimer: [];\n    stopTimer: [];\n    updateTimeEntry: [];\n    startLiveTimer: [];\n    stopLiveTimer: [];\n}>();\n\nfunction updateProject() {\n    setBillableDefaultForProject();\n    emit('updateTimeEntry');\n}\n\nfunction setAndStartTimer(timeEntry: TimeEntry) {\n    setCurrentTimeEntry(timeEntry);\n    if (!props.isActive) {\n        emit('startTimer');\n    }\n    else {\n        emit('updateTimeEntry');\n    }\n}\n\nfunction setCurrentTimeEntry(timeEntry: TimeEntry){\n    currentTimeEntry.value.description = timeEntry.description;\n    currentTimeEntry.value.project_id = timeEntry.project_id;\n    currentTimeEntry.value.task_id = timeEntry.task_id;\n    currentTimeEntry.value.tags = timeEntry.tags;\n    currentTimeEntry.value.billable = timeEntry.billable;\n}\n\nfunction startTimerIfNotActive() {\n    if(highlightedDropdownEntryId.value){\n        const timeEntry = filteredRecentlyTrackedTimeEntries.value.find((item) => item.id === highlightedDropdownEntryId.value);\n        if(timeEntry){\n            setCurrentTimeEntry(timeEntry);\n            showDropdown.value = false;\n        }\n    }\n    else {\n        currentTimeEntry.value.description = tempDescription.value;\n    }\n\n    if (!props.isActive) {\n        emit('startTimer');\n    }\n    else {\n        emit('updateTimeEntry');\n    }\n}\n\nfunction setBillableDefaultForProject() {\n    const project = props.projects.find(\n        (project) => project.id === currentTimeEntry.value.project_id\n    );\n    if (project) {\n        currentTimeEntry.value.billable = project.is_billable;\n    }\n}\n\nconst blockRefocus = ref(false);\n\nfunction onToggleButtonPress(newState: boolean) {\n    if (newState) {\n        emit('startTimer');\n        if (!blockRefocus.value){\n            currentTimeEntryDescriptionInput.value?.focus();\n        }\n    } else {\n        emit('stopTimer');\n    }\n}\n\nconst tempDescription = ref(currentTimeEntry.value.description);\nwatch(\n    () => currentTimeEntry.value.description,\n    () => {\n        tempDescription.value = currentTimeEntry.value.description;\n    }\n);\n\nfunction updateTimeEntryDescription() {\n    if (currentTimeEntry.value.description !== tempDescription.value) {\n        currentTimeEntry.value.description = tempDescription.value;\n        emit('updateTimeEntry');\n    }\n}\n\nconst {timeEntries} = storeToRefs(useTimeEntriesStore());\nconst filteredRecentlyTrackedTimeEntries = computed(() => {\n    // do not include running time entries\n    const finishedTimeEntries = timeEntries.value.filter((item) => item.end !== null);\n\n    // filter out duplicates based on description, task, project, tags and billable\n    const nonDuplicateTimeEntries = finishedTimeEntries.filter((item, index, self) => {\n        return index === self.findIndex((t) => (\n            t.description === item.description &&\n            t.task_id === item.task_id &&\n            t.project_id === item.project_id &&\n            t.tags.length === item.tags.length &&\n            t.tags.every((tag) => item.tags.includes(tag)) &&\n            t.billable === item.billable\n        ));\n    });\n\n    // filter time entries based on current description\n    return nonDuplicateTimeEntries.filter((item) => {\n        return item.description\n            ?.toLowerCase()\n            ?.includes(tempDescription.value?.toLowerCase()?.trim() || '');\n    }).slice(0, 5);\n});\n\nconst showDropdown = ref(false);\nconst {focused} = useFocus(currentTimeEntryDescriptionInput)\n\nwatch(focused, (focused) => {\n    nextTick(() => {\n        // make sure the click event on the dropdown does not get interrupted\n        showDropdown.value = focused\n\n        // make sure that the input does not get refocused after the dropdown is closed\n        if(!focused){\n            blockRefocus.value = true;\n            setTimeout(() => {\n                blockRefocus.value = false;\n            }, 100);\n        }\n    });\n});\n\n\nconst floating = ref(null);\nconst {floatingStyles} = useFloating(currentTimeEntryDescriptionInput, floating, {\n    placement: 'bottom-start',\n    whileElementsMounted: autoUpdate,\n    middleware: [\n        offset(10),\n        shift({\n            limiter: limitShift({\n                offset: 5,\n            }),\n        }),\n        flip({\n            fallbackAxisSideDirection: 'start',\n        }),\n    ],\n});\nconst highlightedDropdownEntryId = ref<string | null>(null);\n\nuseSelectEvents(filteredRecentlyTrackedTimeEntries,\n    highlightedDropdownEntryId,\n    (item) => item.id,\n    showDropdown)\n</script>\n\n<template>\n    <div\n        class=\"flex items-center relative @container\"\n        data-testid=\"dashboard_timer\">\n        <div\n            class=\"flex flex-col @2xl:flex-row w-full justify-between rounded-lg bg-card-background border-card-border border transition shadow-card\">\n            <div class=\"flex flex-1 items-center pr-6 relative\">\n                <input\n                    ref=\"currentTimeEntryDescriptionInput\"\n                    v-model=\"tempDescription\"\n                    placeholder=\"What are you working on?\"\n                    data-testid=\"time_entry_description\"\n                    class=\"w-full rounded-l-lg py-4 sm:py-2.5 px-3.5 border-b border-b-card-background-separator @2xl:px-4 text-base @4xl:text-lg text-text-primary font-medium bg-transparent border-none placeholder-muted focus:ring-0 transition\"\n                    type=\"text\"\n                    @keydown.enter=\"startTimerIfNotActive\"\n                    @keydown.esc=\"showDropdown = false\"\n                    @blur=\"updateTimeEntryDescription\"/>\n                <div\n                    v-if=\"showDropdown && filteredRecentlyTrackedTimeEntries.length > 0\"\n                    ref=\"floating\"\n                    class=\"z-50 w-full max-w-2xl\"\n                    :style=\"floatingStyles\">\n                    <div\n                        class=\"rounded-lg w-full fixed min-w-xl top-0 left-0  border border-card-border overflow-none shadow-dropdown bg-card-background\">\n                        <div\n                            class=\"text-text-tertiary text-xs font-semibold border-b border-border-tertiary px-2 py-1.5\">\n                            Recently Tracked Time Entries\n                        </div>\n                        <div class=\"text-text-secondary py-1 px-1.5\">\n                            <TimeTrackerRecentlyTrackedEntry\n                                v-for=\"timeEntry in filteredRecentlyTrackedTimeEntries\"\n                                :key=\"timeEntry.id\"\n                                :time-entry=\"timeEntry\"\n                                :highlighted=\"highlightedDropdownEntryId === timeEntry.id\"\n                                :projects=\"projects\"\n                                :tasks=\"tasks\"\n                                @mousedown=\"setAndStartTimer(timeEntry)\"\n                                @mouseenter=\"highlightedDropdownEntryId = timeEntry.id\"\n                            ></TimeTrackerRecentlyTrackedEntry>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between pl-2 shrink min-w-0\">\n                <div\n                    class=\"flex items-center w-[130px] @2xl:w-auto shrink min-w-0\">\n                    <TimeTrackerProjectTaskDropdown\n                        v-model:project=\"currentTimeEntry.project_id\"\n                        v-model:task=\"\n                            currentTimeEntry.task_id\n                        \"\n                        :create-client\n                        :can-create-project\n                        :clients\n                        :create-project\n                        :currency=\"currency\"\n                        :projects=\"projects\"\n                        :tasks=\"tasks\"\n                        :enable-estimated-time=\"enableEstimatedTime\"\n                        @changed=\"updateProject\"></TimeTrackerProjectTaskDropdown>\n                </div>\n                <div class=\"flex items-center @2xl:space-x-2 px-2 @2xl:px-4\">\n                    <TimeTrackerTagDropdown\n                        v-model=\"\n                            currentTimeEntry.tags\n                        \"\n                        :create-tag\n                        :tags=\"tags\"\n                        @changed=\"$emit('updateTimeEntry')\"></TimeTrackerTagDropdown>\n                    <BillableToggleButton\n                        v-model=\"\n                            currentTimeEntry.billable\n                        \"\n                        @changed=\"$emit('updateTimeEntry')\"></BillableToggleButton>\n                </div>\n                <div class=\"border-l border-card-border\">\n                    <TimeTrackerRangeSelector\n                        v-model:current-time-entry=\"currentTimeEntry\"\n                        v-model:live-timer=\"liveTimer\"\n                        @start-live-timer=\"emit('startLiveTimer')\"\n                        @stop-live-timer=\"emit('stopLiveTimer')\"\n                        @update-timer=\"emit('updateTimeEntry')\"\n                        @start-timer=\"emit('startTimer')\"\n                        @keydown.enter=\"\n                            startTimerIfNotActive\n                        \"></TimeTrackerRangeSelector>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"pl-4 @2xl:pl-6 pr-3 absolute sm:relative top-[6px] sm:top-0 right-0\">\n            <TimeTrackerStartStop\n                :active=\"isActive\"\n                size=\"large\"\n                @changed=\"onToggleButtonPress\"></TimeTrackerStartStop>\n        </div>\n    </div>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport {\n    ClockIcon,\n    DocumentTextIcon,\n} from '@heroicons/vue/20/solid';\nimport CardTitle from '@/packages/ui/src/CardTitle.vue';\nimport { usePage } from '@inertiajs/vue3';\nimport { type User } from '@/types/models';\nimport { computed, onMounted, watch, type Component } from 'vue';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport duration from 'dayjs/plugin/duration';\n\nimport { useCurrentTimeEntryStore } from '@/utils/useCurrentTimeEntry';\nimport { storeToRefs } from 'pinia';\nimport { getCurrentOrganizationId } from '@/utils/useUser';\nimport { switchOrganization } from '@/utils/useOrganization';\nimport { useProjectsStore } from '@/utils/useProjects';\nimport { useTasksStore } from '@/utils/useTasks';\nimport { useTagsStore } from '@/utils/useTags';\nimport TimeTrackerControls from '@/packages/ui/src/TimeTracker/TimeTrackerControls.vue';\nimport type {\n    CreateClientBody,\n    CreateProjectBody,\n    Project,\n} from '@/packages/api/src';\nimport TimeTrackerRunningInDifferentOrganizationOverlay from '@/packages/ui/src/TimeTracker/TimeTrackerRunningInDifferentOrganizationOverlay.vue';\nimport { useClientsStore } from '@/utils/useClients';\nimport { getOrganizationCurrencyString } from '@/utils/money';\nimport { isAllowedToPerformPremiumAction } from '@/utils/billing';\nimport { canCreateProjects } from '@/utils/permissions';\n\nconst page = usePage<{\n    auth: {\n        user: User;\n    };\n}>();\ndayjs.extend(duration);\n\ndayjs.extend(utc);\n\nconst currentTimeEntryStore = useCurrentTimeEntryStore();\nconst { currentTimeEntry, isActive, now } = storeToRefs(currentTimeEntryStore);\nconst { startLiveTimer, stopLiveTimer, setActiveState } = currentTimeEntryStore;\n\nconst projectStore = useProjectsStore();\nconst { projects } = storeToRefs(projectStore);\nconst taskStore = useTasksStore();\nconst { tasks } = storeToRefs(taskStore);\nconst clientStore = useClientsStore();\nconst { clients } = storeToRefs(clientStore);\n\nconst emit = defineEmits<{\n    change: [];\n}>();\n\ntype ExtensionMenuItem = {\n    title: string;\n    icon?: string;\n    route?: string;\n    href: string;\n    show?: boolean;\n};\n\n\nconst iconMap: Record<string, Component> = {\n    ClockIcon,\n    DocumentTextIcon,\n};\nfunction resolveIcon(name: string | undefined): Component | undefined {\n    return name && iconMap[name] ? iconMap[name] : undefined;\n}\n\n\nconst props = defineProps({\n    title: String,\n});\n\nconst extensionMenu = computed<ExtensionMenuItem[]>(() =>\n    (page.props.extensionMenu as ExtensionMenuItem[]) ?? []\n);\nwatch(isActive, () => {\n    if (isActive.value) {\n        startLiveTimer();\n    } else {\n        stopLiveTimer();\n    }\n    emit('change');\n});\n\nonMounted(async () => {\n    if (page.props.auth.user.current_team_id) {\n        await currentTimeEntryStore.fetchCurrentTimeEntry();\n        now.value = dayjs().utc();\n    }\n});\n\nfunction updateTimeEntry() {\n    if (currentTimeEntry.value.id) {\n        useCurrentTimeEntryStore().updateTimer();\n    }\n}\n\nconst isRunningInDifferentOrganization = computed(() => {\n    return (\n        currentTimeEntry.value.organization_id &&\n        getCurrentOrganizationId() &&\n        currentTimeEntry.value.organization_id !== getCurrentOrganizationId()\n    );\n});\n\nasync function createProject(\n    project: CreateProjectBody\n): Promise<Project | undefined> {\n    const newProject = await useProjectsStore().createProject(project);\n    if (newProject) {\n        currentTimeEntry.value.project_id = newProject.id;\n    }\n    return newProject;\n}\nasync function createClient(client: CreateClientBody) {\n    return await useClientsStore().createClient(client);\n}\n\nfunction switchToTimeEntryOrganization() {\n    if (currentTimeEntry.value.organization_id) {\n        switchOrganization(currentTimeEntry.value.organization_id);\n    }\n}\nasync function createTag(tag: string) {\n    return await useTagsStore().createTag(tag);\n}\n\nconst { tags } = storeToRefs(useTagsStore());\n</script>\n\n<template>\n    <CardTitle title=\"Time Tracker\" :icon=\"ClockIcon\">\n    </CardTitle> \n    <div class=\"relative\">\n        <TimeTrackerRunningInDifferentOrganizationOverlay v-if=\"\n            isRunningInDifferentOrganization\n        \" @switch-organization=\"switchToTimeEntryOrganization\"></TimeTrackerRunningInDifferentOrganizationOverlay>\n\n        <TimeTrackerControls v-model:current-time-entry=\"currentTimeEntry\" v-model:live-timer=\"now\" :create-project\n            :enable-estimated-time=\"isAllowedToPerformPremiumAction()\" :can-create-project=\"canCreateProjects()\"\n            :create-client :clients :tags :tasks :projects :create-tag :is-active\n            :currency=\"getOrganizationCurrencyString()\" @start-live-timer=\"startLiveTimer\"\n            @stop-live-timer=\"stopLiveTimer\" @start-timer=\"setActiveState(true)\" @stop-timer=\"setActiveState(false)\"\n            @update-time-entry=\"updateTimeEntry\"></TimeTrackerControls>\n    </div>\n</template>\n"],"names":["_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_createVNode","SecondaryButton","$emit","emit","__emit","model","_useModel","__props","iconColorClasses","computed","_createBlock","TagDropdown","$event","createTag","tags","_normalizeClass","_unref","twMerge","TagIcon","_toDisplayString","currentTimeEntry","now","open","ref","pauseLiveTimerUpdate","event","onTimeEntryEnterPress","updateTimerAndStartLiveTimerUpdate","activeElement","currentTime","temporaryCustomTimerEntry","startTime","dayjs","diff","formatDuration","newValue","seconds","parseTimeInput","newStartDate","updateTimeRange","newStart","getDayJsInstance","inputField","timeRangeSelector","openModalOnTab","e","source","_a","focusNextElement","focusableElement","closeAndFocusInput","Dropdown","TimeRangeSelector","props","project","iteratingProject","task","iteratingTask","timeEntry","_hoisted_3","ProjectBadge","_b","_hoisted_4","_hoisted_5","ChevronRightIcon","_hoisted_6","useSelectEvents","filteredItems","highlightedItemId","getKeyFromItem","moveHighlightUp","highlightedItem","currentHightlightedIndex","moveHighlightDown","item","onKeyStroke","watch","newOpen","liveTimer","currentTimeEntryDescriptionInput","updateProject","setBillableDefaultForProject","setAndStartTimer","setCurrentTimeEntry","startTimerIfNotActive","highlightedDropdownEntryId","filteredRecentlyTrackedTimeEntries","showDropdown","tempDescription","blockRefocus","onToggleButtonPress","newState","updateTimeEntryDescription","timeEntries","storeToRefs","useTimeEntriesStore","index","self","t","tag","_d","_c","focused","useFocus","nextTick","floating","floatingStyles","useFloating","autoUpdate","offset","shift","limitShift","flip","_Fragment","_renderList","TimeTrackerRecentlyTrackedEntry","projects","tasks","_hoisted_7","TimeTrackerProjectTaskDropdown","createClient","canCreateProject","clients","createProject","currency","enableEstimatedTime","_hoisted_8","TimeTrackerTagDropdown","BillableToggleButton","_hoisted_9","TimeTrackerRangeSelector","_withKeys","_hoisted_10","TimeTrackerStartStop","isActive","page","usePage","duration","utc","currentTimeEntryStore","useCurrentTimeEntryStore","startLiveTimer","stopLiveTimer","setActiveState","projectStore","useProjectsStore","taskStore","useTasksStore","clientStore","useClientsStore","onMounted","updateTimeEntry","isRunningInDifferentOrganization","getCurrentOrganizationId","newProject","client","switchToTimeEntryOrganization","switchOrganization","useTagsStore","CardTitle","ClockIcon","TimeTrackerRunningInDifferentOrganizationOverlay","TimeTrackerControls","isAllowedToPerformPremiumAction","canCreateProjects","getOrganizationCurrencyString"],"mappings":"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"}