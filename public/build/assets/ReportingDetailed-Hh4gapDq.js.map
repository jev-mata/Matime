{"version":3,"file":"ReportingDetailed-Hh4gapDq.js","sources":["../../../resources/js/Pages/ReportingDetailed.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport MainContainer from '@/packages/ui/src/MainContainer.vue';\nimport AppLayout from '@/Layouts/AppLayout.vue';\nimport { FolderIcon } from '@heroicons/vue/16/solid';\nimport PageTitle from '@/Components/Common/PageTitle.vue';\nimport {\n    ChartBarIcon,\n    UserGroupIcon,\n    CheckCircleIcon,\n    TagIcon,\n    ChevronLeftIcon,\n    ChevronDoubleLeftIcon,\n    ChevronRightIcon,\n    ChevronDoubleRightIcon,\n    ClockIcon,\n} from '@heroicons/vue/20/solid';\nimport DateRangePicker from '@/packages/ui/src/Input/DateRangePicker.vue';\nimport BillableIcon from '@/packages/ui/src/Icons/BillableIcon.vue';\nimport { computed, onMounted, ref, watch } from 'vue';\nimport {\n    getDayJsInstance,\n    getLocalizedDayJs,\n} from '@/packages/ui/src/utils/time';\nimport { storeToRefs } from 'pinia';\nimport TagDropdown from '@/packages/ui/src/Tag/TagDropdown.vue';\nimport {\n    api,\n    type Client,\n    type CreateClientBody,\n    type CreateProjectBody,\n    type Project,\n    type TimeEntry,\n    type TimeEntryResponse,\n} from '@/packages/api/src';\nimport ReportingFilterBadge from '@/Components/Common/Reporting/ReportingFilterBadge.vue';\nimport ProjectMultiselectDropdown from '@/Components/Common/Project/ProjectMultiselectDropdown.vue';\nimport MemberMultiselectDropdown from '@/Components/Common/Member/MemberMultiselectDropdown.vue';\nimport TaskMultiselectDropdown from '@/Components/Common/Task/TaskMultiselectDropdown.vue';\nimport SelectDropdown from '@/packages/ui/src/Input/SelectDropdown.vue';\nimport ClientMultiselectDropdown from '@/Components/Common/Client/ClientMultiselectDropdown.vue';\nimport { useTagsStore } from '@/utils/useTags';\nimport { useSessionStorage } from '@vueuse/core';\nimport TimeEntryRow from '@/packages/ui/src/TimeEntry/TimeEntryRow.vue';\nimport { useCurrentTimeEntryStore } from '@/utils/useCurrentTimeEntry';\nimport { useProjectsStore } from '@/utils/useProjects';\nimport { useTasksStore } from '@/utils/useTasks';\nimport { useClientsStore } from '@/utils/useClients';\nimport { getOrganizationCurrencyString } from '@/utils/money';\nimport { useMembersStore } from '@/utils/useMembers';\nimport {\n    PaginationEllipsis,\n    PaginationFirst,\n    PaginationLast,\n    PaginationList,\n    PaginationListItem,\n    PaginationNext,\n    PaginationPrev,\n    PaginationRoot,\n} from 'radix-vue';\nimport { useQuery, useQueryClient } from '@tanstack/vue-query';\nimport { getCurrentOrganizationId, getCurrentMembershipId } from '@/utils/useUser';\nimport { useTimeEntriesStore } from '@/utils/useTimeEntries';\nimport ReportingTabNavbar from '@/Components/Common/Reporting/ReportingTabNavbar.vue';\nimport ReportingExportButton from '@/Components/Common/Reporting/ReportingExportButton.vue';\nimport type { ExportFormat } from '@/types/reporting';\nimport { useNotificationsStore } from '@/utils/notification';\nimport TimeEntryMassActionRow from '@/packages/ui/src/TimeEntry/TimeEntryMassActionRow.vue';\nimport { isAllowedToPerformPremiumAction } from '@/utils/billing';\nimport {canCreateProjects, canViewAllTimeEntries} from '@/utils/permissions';\nimport ReportingExportModal from '@/Components/Common/Reporting/ReportingExportModal.vue';\n\nconst startDate = useSessionStorage<string>(\n    'reporting-start-date',\n    getLocalizedDayJs(getDayJsInstance()().format()).subtract(14, 'd').format()\n);\nconst endDate = useSessionStorage<string>(\n    'reporting-end-date',\n    getLocalizedDayJs(getDayJsInstance()().format()).format()\n);\nconst selectedTags = ref<string[]>([]);\nconst selectedProjects = ref<string[]>([]);\nconst selectedMembers = ref<string[]>([]);\nconst selectedTasks = ref<string[]>([]);\nconst selectedClients = ref<string[]>([]);\nconst billable = ref<'true' | 'false' | null>(null);\n\nconst { members } = storeToRefs(useMembersStore());\nconst pageLimit = 15;\nconst currentPage = ref(1);\n\nfunction getFilterAttributes() {\n    const defaultParams = {\n        start: getLocalizedDayJs(startDate.value).startOf('day').utc().format(),\n        end: getLocalizedDayJs(endDate.value).endOf('day').utc().format(),\n        active: 'false' as 'true' | 'false',\n        limit: pageLimit,\n        offset: currentPage.value * pageLimit - pageLimit,\n    };\n    const params = {\n        ...defaultParams,\n        member_id: !canViewAllTimeEntries() ? getCurrentMembershipId() : undefined,\n        member_ids:\n            selectedMembers.value.length > 0\n                ? selectedMembers.value\n                : undefined,\n        project_ids:\n            selectedProjects.value.length > 0\n                ? selectedProjects.value\n                : undefined,\n        task_ids:\n            selectedTasks.value.length > 0 ? selectedTasks.value : undefined,\n        client_ids:\n            selectedClients.value.length > 0\n                ? selectedClients.value\n                : undefined,\n        tag_ids: selectedTags.value.length > 0 ? selectedTags.value : undefined,\n        billable: billable.value !== null ? billable.value : undefined,\n    };\n    return params;\n}\n\nconst currentTimeEntryStore = useCurrentTimeEntryStore();\nconst { currentTimeEntry } = storeToRefs(currentTimeEntryStore);\nconst { setActiveState, startLiveTimer } = currentTimeEntryStore;\nconst { handleApiRequestNotifications } = useNotificationsStore();\nconst { createTimeEntry, updateTimeEntry, updateTimeEntries } =\n    useTimeEntriesStore();\n\nconst { tags } = storeToRefs(useTagsStore());\n\nconst { data: timeEntryResponse } = useQuery<TimeEntryResponse>({\n    queryKey: ['timeEntry', 'detailed-report'],\n    enabled: !!getCurrentOrganizationId(),\n    queryFn: () =>\n        api.getTimeEntries({\n            params: {\n                organization: getCurrentOrganizationId() || '',\n            },\n            queries: { ...getFilterAttributes() },\n        }),\n});\n\nconst totalPages = computed(() => {\n    return timeEntryResponse?.value?.meta?.total ?? 1;\n});\n\nconst timeEntriesStore = useTimeEntriesStore();\n\nasync function deleteTimeEntries(timeEntries: TimeEntry[]) {\n    await timeEntriesStore.deleteTimeEntries(timeEntries);\n    selectedTimeEntries.value = [];\n    await updateFilteredTimeEntries();\n}\n\nconst timeEntries = computed(() => {\n    return timeEntryResponse?.value?.data || [];\n});\n\nonMounted(async () => {\n    await updateFilteredTimeEntries();\n});\n\nconst projectStore = useProjectsStore();\nconst { projects } = storeToRefs(projectStore);\nconst taskStore = useTasksStore();\nconst { tasks } = storeToRefs(taskStore);\nconst clientStore = useClientsStore();\nconst { clients } = storeToRefs(clientStore);\n\nconst selectedTimeEntries = ref<TimeEntry[]>([]);\n\nconst showExportModal = ref(false);\nconst exportUrl = ref<string | null>(null);\n\nasync function createTag(name: string) {\n    return await useTagsStore().createTag(name);\n}\n\nasync function createProject(\n    project: CreateProjectBody\n): Promise<Project | undefined> {\n    return await useProjectsStore().createProject(project);\n}\n\nasync function createClient(\n    body: CreateClientBody\n): Promise<Client | undefined> {\n    return await useClientsStore().createClient(body);\n}\n\nasync function startTimeEntryFromExisting(entry: TimeEntry) {\n    if (currentTimeEntry.value.id) {\n        await setActiveState(false);\n    }\n    await createTimeEntry({\n        project_id: entry.project_id,\n        task_id: entry.task_id,\n        start: getDayJsInstance().utc().format(),\n        end: null,\n        billable: entry.billable,\n        description: entry.description,\n    });\n    startLiveTimer();\n    updateFilteredTimeEntries();\n    useCurrentTimeEntryStore().fetchCurrentTimeEntry();\n}\nconst queryClient = useQueryClient();\nasync function updateFilteredTimeEntries() {\n    await queryClient.invalidateQueries({\n        queryKey: ['timeEntry', 'detailed-report'],\n    });\n}\nwatch(currentPage, () => {\n    updateFilteredTimeEntries();\n});\nfunction deleteSelected() {\n    deleteTimeEntries(selectedTimeEntries.value);\n}\n\nasync function clearSelectionAndState() {\n    selectedTimeEntries.value = [];\n    await updateFilteredTimeEntries();\n}\nasync function downloadExport(format: ExportFormat) {\n    const organizationId = getCurrentOrganizationId();\n    if (organizationId) {\n        const response = await handleApiRequestNotifications(\n            () =>\n                api.exportTimeEntries({\n                    params: {\n                        organization: organizationId,\n                    },\n                    queries: {\n                        ...getFilterAttributes(),\n                        format: format,\n                    },\n                }),\n            'Export successful',\n            'Export failed'\n        );\n        if (response?.download_url) {\n            showExportModal.value = true;\n            exportUrl.value = response.download_url as string;\n        }\n    }\n}\n</script>\n\n<template>\n    <AppLayout\n        title=\"Reporting\"\n        data-testid=\"reporting_view\"\n        class=\"overflow-hidden\">\n        <ReportingExportModal\n            v-model:show=\"showExportModal\"\n            :export-url=\"exportUrl\"></ReportingExportModal>\n        <MainContainer\n            class=\"py-3 sm:py-5 border-b border-default-background-separator flex justify-between items-center\">\n            <div class=\"flex items-center space-x-3 sm:space-x-6\">\n                <PageTitle :icon=\"ChartBarIcon\" title=\"Reporting\"></PageTitle>\n                <ReportingTabNavbar active=\"detailed\"></ReportingTabNavbar>\n            </div>\n            <ReportingExportButton\n                :download=\"downloadExport\"></ReportingExportButton>\n        </MainContainer>\n\n        <div class=\"py-2.5 w-full border-b border-default-background-separator\">\n            <MainContainer\n                class=\"sm:flex space-y-4 sm:space-y-0 justify-between\">\n                <div\n                    class=\"flex flex-wrap items-center space-y-2 sm:space-y-0 space-x-4\">\n                    <div class=\"text-sm font-medium\">Filters</div>\n                    <MemberMultiselectDropdown\n                        v-model=\"selectedMembers\"\n                        @submit=\"updateFilteredTimeEntries\">\n                        <template #trigger>\n                            <ReportingFilterBadge\n                                :count=\"selectedMembers.length\"\n                                :active=\"selectedMembers.length > 0\"\n                                title=\"Members\"\n                                :icon=\"UserGroupIcon\"></ReportingFilterBadge>\n                        </template>\n                    </MemberMultiselectDropdown>\n                    <ProjectMultiselectDropdown\n                        v-model=\"selectedProjects\"\n                        @submit=\"updateFilteredTimeEntries\">\n                        <template #trigger>\n                            <ReportingFilterBadge\n                                :count=\"selectedProjects.length\"\n                                :active=\"selectedProjects.length > 0\"\n                                title=\"Projects\"\n                                :icon=\"FolderIcon\"></ReportingFilterBadge>\n                        </template>\n                    </ProjectMultiselectDropdown>\n                    <TaskMultiselectDropdown\n                        v-model=\"selectedTasks\"\n                        @submit=\"updateFilteredTimeEntries\">\n                        <template #trigger>\n                            <ReportingFilterBadge\n                                :count=\"selectedTasks.length\"\n                                :active=\"selectedTasks.length > 0\"\n                                title=\"Tasks\"\n                                :icon=\"CheckCircleIcon\"></ReportingFilterBadge>\n                        </template>\n                    </TaskMultiselectDropdown>\n                    <ClientMultiselectDropdown\n                        v-model=\"selectedClients\"\n                        @submit=\"updateFilteredTimeEntries\">\n                        <template #trigger>\n                            <ReportingFilterBadge\n                                :count=\"selectedClients.length\"\n                                :active=\"selectedClients.length > 0\"\n                                title=\"Clients\"\n                                :icon=\"FolderIcon\"></ReportingFilterBadge>\n                        </template>\n                    </ClientMultiselectDropdown>\n                    <TagDropdown\n                        v-model=\"selectedTags\"\n                        :create-tag\n                        :tags=\"tags\"\n                        @submit=\"updateFilteredTimeEntries\">\n                        <template #trigger>\n                            <ReportingFilterBadge\n                                :count=\"selectedTags.length\"\n                                :active=\"selectedTags.length > 0\"\n                                title=\"Tags\"\n                                :icon=\"TagIcon\"></ReportingFilterBadge>\n                        </template>\n                    </TagDropdown>\n\n                    <SelectDropdown\n                        v-model=\"billable\"\n                        :get-key-from-item=\"(item) => item.value\"\n                        :get-name-for-item=\"(item) => item.label\"\n                        :items=\"[\n                            {\n                                label: 'Both',\n                                value: null,\n                            },\n                            {\n                                label: 'Billable',\n                                value: 'true',\n                            },\n                            {\n                                label: 'Non Billable',\n                                value: 'false',\n                            },\n                        ]\"\n                        @changed=\"updateFilteredTimeEntries\">\n                        <template #trigger>\n                            <ReportingFilterBadge\n                                :active=\"billable !== null\"\n                                :title=\"\n                                    billable === 'false'\n                                        ? 'Non Billable'\n                                        : 'Billable'\n                                \"\n                                :icon=\"BillableIcon\"></ReportingFilterBadge>\n                        </template>\n                    </SelectDropdown>\n                </div>\n                <div>\n                    <DateRangePicker\n                        v-model:start=\"startDate\"\n                        v-model:end=\"endDate\"\n                        @submit=\"updateFilteredTimeEntries\"></DateRangePicker>\n                </div>\n            </MainContainer>\n        </div>\n        <TimeEntryMassActionRow\n            :selected-time-entries=\"selectedTimeEntries\"\n            :can-create-project=\"canCreateProjects()\"\n            :enable-estimated-time=\"isAllowedToPerformPremiumAction()\"\n            :delete-selected=\"deleteSelected\"\n            :all-selected=\"selectedTimeEntries.length === timeEntries.length\"\n            :projects=\"projects\"\n            :tasks=\"tasks\"\n            :tags=\"tags\"\n            :currency=\"getOrganizationCurrencyString()\"\n            :clients=\"clients\"\n            :update-time-entries=\"\n                (args) =>\n                    updateTimeEntries(\n                        selectedTimeEntries.map((timeEntry) => timeEntry.id),\n                        args\n                    )\n            \"\n            :create-project=\"createProject\"\n            :create-client=\"createClient\"\n            :create-tag=\"createTag\"\n            @submit=\"clearSelectionAndState\"\n            @select-all=\"selectedTimeEntries = [...timeEntries]\"\n            @unselect-all=\"selectedTimeEntries = []\"></TimeEntryMassActionRow>\n        <div class=\"w-full relative\">\n            <div v-for=\"entry in timeEntries\" :key=\"entry.id\">\n                <TimeEntryRow\n                    :selected=\"selectedTimeEntries.includes(entry)\"\n                    :can-create-project=\"canCreateProjects()\"\n                    :create-client\n                    :create-project\n                    :enable-estimated-time=\"isAllowedToPerformPremiumAction()\"\n                    :projects=\"projects\"\n                    :tasks=\"tasks\"\n                    :tags=\"tags\"\n                    :clients\n                    :create-tag\n                    :update-time-entry\n                    :on-start-stop-click=\"() => startTimeEntryFromExisting(entry)\"\n                    :delete-time-entry=\"() => deleteTimeEntries([entry])\"\n                    :currency=\"getOrganizationCurrencyString()\"\n                    :members=\"members\"\n                    show-date\n                    show-member\n                    :time-entry=\"entry\"\n                    @selected=\"selectedTimeEntries.push(entry)\"\n                    @unselected=\"\n                        selectedTimeEntries = selectedTimeEntries.filter(\n                            (item) => item.id !== entry.id\n                        )\n                    \"></TimeEntryRow>\n            </div>\n            <div v-if=\"timeEntries.length === 0\">\n                <div class=\"text-center pt-12\">\n                    <ClockIcon\n                        class=\"w-8 text-icon-default inline pb-2\"></ClockIcon>\n                    <h3 class=\"text-text-primary font-semibold\">\n                        No time entries found\n                    </h3>\n                    <p class=\"pb-5\">\n                        Adjust the filters to see more time entries!\n                    </p>\n                </div>\n            </div>\n        </div>\n\n        <PaginationRoot\n            v-model:page=\"currentPage\"\n            :total=\"totalPages\"\n            :items-per-page=\"pageLimit\"\n            class=\"flex justify-center items-center py-8\"\n            :sibling-count=\"1\"\n            show-edges>\n            <PaginationList\n                v-slot=\"{ items }\"\n                class=\"flex items-center space-x-1 relative\">\n                <div\n                    class=\"pr-2 flex items-center space-x-1 border-r border-border-primary mr-1\">\n                    <PaginationFirst class=\"navigation-item\">\n                        <ChevronDoubleLeftIcon class=\"w-4\">\n                        </ChevronDoubleLeftIcon>\n                    </PaginationFirst>\n                    <PaginationPrev class=\"mr-4 navigation-item\">\n                        <ChevronLeftIcon\n                            class=\"w-4 text-text-tertiary hover:text-text-primary\">\n                        </ChevronLeftIcon>\n                    </PaginationPrev>\n                </div>\n                <template v-for=\"(page, index) in items\">\n                    <PaginationListItem\n                        v-if=\"page.type === 'page'\"\n                        :key=\"index\"\n                        class=\"pagination-item\"\n                        :value=\"page.value\">\n                        {{ page.value }}\n                    </PaginationListItem>\n                    <PaginationEllipsis\n                        v-else\n                        :key=\"page.type\"\n                        :index=\"index\"\n                        class=\"PaginationEllipsis\">\n                        <div class=\"px-2\">&#8230;</div>\n                    </PaginationEllipsis>\n                </template>\n                <div\n                    class=\"!ml-2 pl-2 flex items-center space-x-1 border-l border-border-primary\">\n                    <PaginationNext class=\"navigation-item\">\n                        <ChevronRightIcon\n                            class=\"w-4 text-text-tertiary hover:text-text-primary\"></ChevronRightIcon>\n                    </PaginationNext>\n                    <PaginationLast class=\"navigation-item\">\n                        <ChevronDoubleRightIcon\n                            class=\"w-4 text-text-tertiary hover:text-text-primary\"></ChevronDoubleRightIcon>\n                    </PaginationLast>\n                </div>\n            </PaginationList>\n        </PaginationRoot>\n    </AppLayout>\n</template>\n<style lang=\"postcss\">\n.navigation-item {\n    @apply bg-quaternary h-8 w-8 flex items-center justify-center rounded border border-border-primary text-text-tertiary hover:text-text-primary transition cursor-pointer hover:border-border-secondary hover:bg-secondary focus-visible:text-text-primary focus-visible:outline-0 focus-visible:ring-2 focus-visible:ring-ring;\n}\n\n.pagination-item {\n    @apply bg-secondary h-8 w-8 flex items-center justify-center rounded border border-border-tertiary text-text-secondary hover:text-text-primary transition cursor-pointer hover:border-border-secondary hover:bg-secondary focus-visible:text-text-primary focus-visible:outline-0 focus-visible:ring-2 focus-visible:ring-ring;\n}\n.pagination-item[data-selected] {\n    @apply text-text-primary bg-accent-300/10 border border-accent-300/20 rounded-md font-medium hover:bg-accent-300/20 active:bg-accent-300/20 outline-0 focus-visible:ring-2 focus:ring-ring transition ease-in-out duration-150;\n}\n</style>\n"],"names":["pageLimit","startDate","useSessionStorage","getLocalizedDayJs","getDayJsInstance","endDate","selectedTags","ref","selectedProjects","selectedMembers","selectedTasks","selectedClients","billable","members","storeToRefs","useMembersStore","currentPage","getFilterAttributes","canViewAllTimeEntries","getCurrentMembershipId","currentTimeEntryStore","useCurrentTimeEntryStore","currentTimeEntry","setActiveState","startLiveTimer","handleApiRequestNotifications","useNotificationsStore","createTimeEntry","updateTimeEntry","updateTimeEntries","useTimeEntriesStore","tags","useTagsStore","timeEntryResponse","useQuery","getCurrentOrganizationId","api","totalPages","computed","_b","_a","timeEntriesStore","deleteTimeEntries","timeEntries","selectedTimeEntries","updateFilteredTimeEntries","onMounted","projectStore","useProjectsStore","projects","taskStore","useTasksStore","tasks","clientStore","useClientsStore","clients","showExportModal","exportUrl","createTag","name","createProject","project","createClient","body","startTimeEntryFromExisting","entry","queryClient","useQueryClient","watch","deleteSelected","clearSelectionAndState","downloadExport","format","organizationId","response","_createBlock","AppLayout","_createVNode","ReportingExportModal","$event","MainContainer","_createElementVNode","_hoisted_1","PageTitle","_unref","ChartBarIcon","ReportingTabNavbar","ReportingExportButton","_hoisted_2","_hoisted_3","_cache","MemberMultiselectDropdown","ReportingFilterBadge","UserGroupIcon","ProjectMultiselectDropdown","FolderIcon","TaskMultiselectDropdown","CheckCircleIcon","ClientMultiselectDropdown","TagDropdown","TagIcon","SelectDropdown","item","BillableIcon","DateRangePicker","TimeEntryMassActionRow","canCreateProjects","isAllowedToPerformPremiumAction","getOrganizationCurrencyString","args","timeEntry","_hoisted_4","_createElementBlock","_Fragment","_renderList","TimeEntryRow","_hoisted_5","_hoisted_6","ClockIcon","PaginationRoot","PaginationList","_withCtx","items","_hoisted_7","PaginationFirst","ChevronDoubleLeftIcon","PaginationPrev","ChevronLeftIcon","_openBlock","page","index","PaginationListItem","_createTextVNode","_toDisplayString","PaginationEllipsis","_hoisted_8","PaginationNext","ChevronRightIcon","PaginationLast","ChevronDoubleRightIcon"],"mappings":"shIAuFMA,EAAY,+CAhBlB,MAAMC,EAAYC,EACd,uBACAC,EAAkBC,EAAA,EAAiB,EAAI,OAAA,CAAQ,EAAE,SAAS,GAAI,GAAG,EAAE,OAAA,CAAO,EAExEC,EAAUH,EACZ,qBACAC,EAAkBC,EAAA,EAAiB,EAAI,OAAA,CAAQ,EAAE,OAAA,CAAO,EAEtDE,EAAeC,EAAc,EAAE,EAC/BC,EAAmBD,EAAc,EAAE,EACnCE,EAAkBF,EAAc,EAAE,EAClCG,EAAgBH,EAAc,EAAE,EAChCI,EAAkBJ,EAAc,EAAE,EAClCK,EAAWL,EAA6B,IAAI,EAE5C,CAAE,QAAAM,EAAA,EAAYC,EAAYC,IAAiB,EAE3CC,EAAcT,EAAI,CAAC,EAEzB,SAASU,GAAsB,CA4B3B,MApBe,CACX,GARkB,CAClB,MAAOd,EAAkBF,EAAU,KAAK,EAAE,QAAQ,KAAK,EAAE,IAAA,EAAM,OAAA,EAC/D,IAAKE,EAAkBE,EAAQ,KAAK,EAAE,MAAM,KAAK,EAAE,IAAA,EAAM,OAAA,EACzD,OAAQ,QACR,MAAOL,EACP,OAAQgB,EAAY,MAAQhB,EAAYA,CAAA,EAIxC,UAAYkB,KAAqD,OAA3BC,KACtC,WACIV,EAAgB,MAAM,OAAS,EACzBA,EAAgB,MAChB,OACV,YACID,EAAiB,MAAM,OAAS,EAC1BA,EAAiB,MACjB,OACV,SACIE,EAAc,MAAM,OAAS,EAAIA,EAAc,MAAQ,OAC3D,WACIC,EAAgB,MAAM,OAAS,EACzBA,EAAgB,MAChB,OACV,QAASL,EAAa,MAAM,OAAS,EAAIA,EAAa,MAAQ,OAC9D,SAAUM,EAAS,QAAU,KAAOA,EAAS,MAAQ,MAAA,CAElD,CAGX,MAAMQ,EAAwBC,EAAA,EACxB,CAAE,iBAAAC,EAAA,EAAqBR,EAAYM,CAAqB,EACxD,CAAE,eAAAG,GAAgB,eAAAC,EAAA,EAAmBJ,EACrC,CAAE,8BAAAK,EAAA,EAAkCC,GAAA,EACpC,CAAE,gBAAAC,GAAiB,gBAAAC,GAAiB,kBAAAC,EAAA,EACtCC,EAAA,EAEE,CAAE,KAAAC,CAAA,EAASjB,EAAYkB,GAAc,EAErC,CAAE,KAAMC,CAAA,EAAsBC,GAA4B,CAC5D,SAAU,CAAC,YAAa,iBAAiB,EACzC,QAAS,CAAC,CAACC,EAAA,EACX,QAAS,IACLC,EAAI,eAAe,CACf,OAAQ,CACJ,aAAcD,KAA8B,EAAA,EAEhD,QAAS,CAAE,GAAGlB,EAAA,CAAoB,CAAE,CACvC,CAAA,CACR,EAEKoB,GAAaC,EAAS,IAAM,SAC9B,QAAOC,GAAAC,EAAAP,GAAA,YAAAA,EAAmB,QAAnB,YAAAO,EAA0B,OAA1B,YAAAD,EAAgC,QAAS,CAAA,CACnD,EAEKE,GAAmBX,EAAA,EAEzB,eAAeY,EAAkBC,EAA0B,CACvD,MAAMF,GAAiB,kBAAkBE,CAAW,EACpDC,EAAoB,MAAQ,CAAA,EAC5B,MAAMC,EAAA,CAA0B,CAGpC,MAAMF,EAAcL,EAAS,IAAM,OAC/B,QAAOE,EAAAP,GAAA,YAAAA,EAAmB,QAAnB,YAAAO,EAA0B,OAAQ,CAAA,CAAC,CAC7C,EAEDM,GAAU,SAAY,CAClB,MAAMD,EAAA,CAA0B,CACnC,EAED,MAAME,GAAeC,GAAA,EACf,CAAE,SAAAC,CAAA,EAAanC,EAAYiC,EAAY,EACvCG,GAAYC,GAAA,EACZ,CAAE,MAAAC,CAAA,EAAUtC,EAAYoC,EAAS,EACjCG,GAAcC,GAAA,EACd,CAAE,QAAAC,CAAA,EAAYzC,EAAYuC,EAAW,EAErCT,EAAsBrC,EAAiB,EAAE,EAEzCiD,EAAkBjD,EAAI,EAAK,EAC3BkD,EAAYlD,EAAmB,IAAI,EAEzC,eAAemD,EAAUC,EAAc,CACnC,OAAO,MAAM3B,EAAA,EAAe,UAAU2B,CAAI,CAAA,CAG9C,eAAeC,EACXC,EAC4B,CAC5B,OAAO,MAAMb,GAAA,EAAmB,cAAca,CAAO,CAAA,CAGzD,eAAeC,EACXC,EAC2B,CAC3B,OAAO,MAAMT,GAAA,EAAkB,aAAaS,CAAI,CAAA,CAGpD,eAAeC,GAA2BC,EAAkB,CACpD3C,GAAiB,MAAM,IACvB,MAAMC,GAAe,EAAK,EAE9B,MAAMI,GAAgB,CAClB,WAAYsC,EAAM,WAClB,QAASA,EAAM,QACf,MAAO7D,EAAA,EAAmB,IAAA,EAAM,OAAA,EAChC,IAAK,KACL,SAAU6D,EAAM,SAChB,YAAaA,EAAM,WAAA,CACtB,EACDzC,GAAA,EACAqB,EAAA,EACAxB,EAAA,EAA2B,sBAAA,CAAsB,CAErD,MAAM6C,GAAcC,GAAA,EACpB,eAAetB,GAA4B,CACvC,MAAMqB,GAAY,kBAAkB,CAChC,SAAU,CAAC,YAAa,iBAAiB,CAAA,CAC5C,CAAA,CAELE,GAAMpD,EAAa,IAAM,CACrB6B,EAAA,CAA0B,CAC7B,EACD,SAASwB,IAAiB,CACtB3B,EAAkBE,EAAoB,KAAK,CAAA,CAG/C,eAAe0B,IAAyB,CACpC1B,EAAoB,MAAQ,CAAA,EAC5B,MAAMC,EAAA,CAA0B,CAEpC,eAAe0B,GAAeC,EAAsB,CAChD,MAAMC,EAAiBtC,EAAA,EACvB,GAAIsC,EAAgB,CAChB,MAAMC,EAAW,MAAMjD,GACnB,IACIW,EAAI,kBAAkB,CAClB,OAAQ,CACJ,aAAcqC,CAAA,EAElB,QAAS,CACL,GAAGxD,EAAA,EACH,OAAAuD,CAAA,CACJ,CACH,EACL,oBACA,eAAA,EAEAE,GAAA,MAAAA,EAAU,eACVlB,EAAgB,MAAQ,GACxBC,EAAU,MAAQiB,EAAS,aAC/B,CACJ,mBAKAC,EA6OYC,GAAA,CA5OR,MAAM,YACN,cAAY,iBACZ,MAAM,iBAAA,aACN,IAEmD,CAFnDC,EAEmDC,GAAA,CADvC,KAAMtB,EAAA,qCAAAA,EAAe,MAAAuB,GAC5B,aAAYtB,EAAA,KAAA,gCACjBoB,EAQgBG,EAAA,CAPZ,MAAM,+FAA6F,WACnG,IAGM,CAHNC,EAGM,MAHNC,GAGM,CAFFL,EAA8DM,GAAA,CAAlD,KAAMC,EAAAC,EAAA,EAAc,MAAM,WAAA,mBACtCR,EAA2DS,GAAA,CAAvC,OAAO,WAAU,CAAA,GAEzCT,EACuDU,GAAA,CAAlD,SAAUhB,GAAc,CAAA,SAGjCU,EAsGM,MAtGNO,GAsGM,CArGFX,EAoGgBG,EAAA,CAnGZ,MAAM,kDAAgD,WACtD,IA2FM,CA3FNC,EA2FM,MA3FNQ,GA2FM,CAzFFC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAT,EAA8C,MAAA,CAAzC,MAAM,qBAAA,EAAsB,UAAO,EAAA,GACxCJ,EAU4Bc,GAAA,YATflF,EAAA,2CAAAA,EAAe,MAAAsE,GACvB,SAAQlC,CAAA,GACE,UACP,IAIiD,CAJjDgC,EAIiDe,EAAA,CAH5C,MAAOnF,EAAA,MAAgB,OACvB,OAAQA,EAAA,MAAgB,OAAM,EAC/B,MAAM,UACL,KAAM2E,EAAAS,EAAA,CAAA,6DAGnBhB,EAU6BiB,GAAA,YAThBtF,EAAA,2CAAAA,EAAgB,MAAAuE,GACxB,SAAQlC,CAAA,GACE,UACP,IAI8C,CAJ9CgC,EAI8Ce,EAAA,CAHzC,MAAOpF,EAAA,MAAiB,OACxB,OAAQA,EAAA,MAAiB,OAAM,EAChC,MAAM,WACL,KAAM4E,EAAAW,EAAA,CAAA,6DAGnBlB,EAU0BmB,GAAA,YATbtF,EAAA,2CAAAA,EAAa,MAAAqE,GACrB,SAAQlC,CAAA,GACE,UACP,IAImD,CAJnDgC,EAImDe,EAAA,CAH9C,MAAOlF,EAAA,MAAc,OACrB,OAAQA,EAAA,MAAc,OAAM,EAC7B,MAAM,QACL,KAAM0E,EAAAa,EAAA,CAAA,6DAGnBpB,EAU4BqB,GAAA,YATfvF,EAAA,2CAAAA,EAAe,MAAAoE,GACvB,SAAQlC,CAAA,GACE,UACP,IAI8C,CAJ9CgC,EAI8Ce,EAAA,CAHzC,MAAOjF,EAAA,MAAgB,OACvB,OAAQA,EAAA,MAAgB,OAAM,EAC/B,MAAM,UACL,KAAMyE,EAAAW,EAAA,CAAA,6DAGnBlB,EAYcsB,GAAA,YAXD7F,EAAA,2CAAAA,EAAY,MAAAyE,GACpB,aAAArB,EACA,KAAM0B,EAAArD,CAAA,EACN,SAAQc,CAAA,GACE,UACP,IAI2C,CAJ3CgC,EAI2Ce,EAAA,CAHtC,MAAOtF,EAAA,MAAa,OACpB,OAAQA,EAAA,MAAa,OAAM,EAC5B,MAAM,OACL,KAAM8E,EAAAgB,EAAA,CAAA,oEAInBvB,EA6BiBwB,GAAA,YA5BJzF,EAAA,2CAAAA,EAAQ,MAAAmE,GAChB,oBAAoBuB,GAASA,EAAK,MAClC,oBAAoBA,GAASA,EAAK,MAClC,MAAO,iGAcP,UAASzD,CAAA,GACC,UACP,IAOgD,CAPhDgC,EAOgDe,EAAA,CAN3C,OAAQhF,EAAA,QAAQ,KAChB,MAA4CA,EAAA,QAAQ,kCAKpD,KAAM2F,EAAA,gGAIvBtB,EAKM,MAAA,KAAA,CAJFJ,EAG0D2B,GAAA,CAF9C,MAAOpB,EAAAnF,CAAA,uCAAAA,EAAS,MAAA8E,EAAA,MAChB,IAAKK,EAAA/E,CAAA,qCAAAA,EAAO,MAAA0E,EAAA,MACnB,SAAQlC,CAAA,sCAIzBgC,EAuBsE4B,GAAA,CAtBjE,wBAAuB7D,EAAA,MACvB,qBAAoBwC,EAAAsB,EAAA,EAAA,EACpB,wBAAuBtB,EAAAuB,EAAA,EAAA,EACvB,kBAAiBtC,GACjB,eAAczB,EAAA,MAAoB,SAAWD,EAAA,MAAY,OACzD,SAAUyC,EAAAnC,CAAA,EACV,MAAOmC,EAAAhC,CAAA,EACP,KAAMgC,EAAArD,CAAA,EACN,SAAUqD,EAAAwB,EAAA,EAAA,EACV,QAASxB,EAAA7B,CAAA,EACT,sBAAuCsD,GAA6BzB,EAAAvD,EAAA,EAA2Ce,EAAA,MAAoB,IAAKkE,GAAcA,EAAU,EAAE,EAA2BD,CAAA,EAO7L,iBAAgBjD,EAChB,gBAAeE,EACf,aAAYJ,EACZ,SAAQY,GACR,YAAUoB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAX,GAAEnC,EAAA,MAAmB,CAAA,GAAOD,EAAA,KAAW,GACjD,+BAAcC,EAAA,MAAmB,CAAA,EAAA,qKACtCqC,EAwCM,MAxCN8B,GAwCM,QAvCFC,EA0BMC,EAAA,KAAAC,EA1BevE,EAAA,MAATsB,QAAZ+C,EA0BM,MAAA,CA1B6B,IAAK/C,EAAM,EAAA,GAC1CY,EAwBqBsC,GAAA,CAvBhB,SAAUvE,EAAA,MAAoB,SAASqB,CAAK,EAC5C,qBAAoBmB,EAAAsB,EAAA,EAAA,EACpB,gBAAA5C,EACA,iBAAAF,EACA,wBAAuBwB,EAAAuB,EAAA,EAAA,EACvB,SAAUvB,EAAAnC,CAAA,EACV,MAAOmC,EAAAhC,CAAA,EACP,KAAMgC,EAAArD,CAAA,EACN,QAAAqD,EAAA7B,CAAA,EACA,aAAAG,EACA,oBAAA0B,EAAAxD,EAAA,EACA,sBAAmB,IAAQoC,GAA2BC,CAAK,EAC3D,oBAAiB,IAAQvB,EAAiB,CAAEuB,CAAK,CAAA,EACjD,SAAUmB,EAAAwB,EAAA,EAAA,EACV,QAASxB,EAAAvE,EAAA,EACV,YAAA,GACA,cAAA,GACC,aAAYoD,EACZ,WAAQc,GAAEnC,EAAA,MAAoB,KAAKqB,CAAK,EACxC,aAAUc,GAA2BnC,EAAA,MAAsBA,EAAA,MAAoB,OAAqC0D,GAASA,EAAK,KAAOrC,EAAM,EAAA,+OAM7ItB,EAAA,MAAY,SAAM,OAA7BqE,EAWM,MAAAI,GAAA,CAVFnC,EASM,MATNoC,GASM,CARFxC,EAC0DO,EAAAkC,EAAA,EAAA,CAAtD,MAAM,oCAAmC,EAC7C5B,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAT,EAEK,KAAA,CAFD,MAAM,iCAAA,EAAkC,0BAE5C,EAAA,GACAS,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAT,EAEI,IAAA,CAFD,MAAM,MAAA,EAAO,iDAEhB,EAAA,EAAA,kBAKZJ,EAkDiBO,EAAAmC,EAAA,EAAA,CAjDL,KAAMvG,EAAA,uCAAAA,EAAW,MAAA+D,GACxB,MAAO1C,GAAA,MACP,iBAAgBrC,EACjB,MAAM,wCACL,gBAAe,EAChB,aAAA,EAAA,aACA,IA0CiB,CA1CjB6E,EA0CiBO,EAAAoC,EAAA,EAAA,CAxCb,MAAM,wCAAsC,CAC5C,QAAAC,EAAA,CAWM,CAbI,MAAAC,KAAK,CAEfzC,EAWM,MAXN0C,GAWM,CATF9C,EAGkBO,EAAAwC,EAAA,EAAA,CAHD,MAAM,mBAAiB,WACpC,IACwB,CADxB/C,EACwBO,EAAAyC,EAAA,EAAA,CADD,MAAM,MAAK,CAAA,SAGtChD,EAIiBO,EAAA0C,EAAA,EAAA,CAJD,MAAM,wBAAsB,WACxC,IAEkB,CAFlBjD,EAEkBO,EAAA2C,EAAA,EAAA,CADd,MAAM,iDAAgD,CAAA,YAIlEC,EAAA,EAAA,EAAAhB,EAeWC,EAAA,KAAAC,EAfuBQ,EAAK,CAArBO,EAAMC,mBAEVD,EAAK,OAAI,YADnBtD,EAMqBS,EAAA+C,EAAA,EAAA,CAJhB,IAAKD,EACN,MAAM,kBACL,MAAOD,EAAK,KAAA,aACb,IAAgB,CAAbG,GAAAC,GAAAJ,EAAK,KAAK,EAAA,CAAA,CAAA,8BAEjBtD,EAMqBS,EAAAkD,EAAA,EAAA,CAJhB,IAAKL,EAAK,KACV,MAAAC,EACD,MAAM,oBAAA,aACN,IAA+BxC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAA/BT,EAA+B,MAAA,CAA1B,MAAM,MAAA,EAAO,IAAO,EAAA,CAAA,+CAGjCA,EAUM,MAVNsD,GAUM,CARF1D,EAGiBO,EAAAoD,EAAA,EAAA,CAHD,MAAM,mBAAiB,WACnC,IAC8E,CAD9E3D,EAC8EO,EAAAqD,EAAA,EAAA,CAA1E,MAAM,iDAAgD,CAAA,SAE9D5D,EAGiBO,EAAAsD,EAAA,EAAA,CAHD,MAAM,mBAAiB,WACnC,IACoF,CADpF7D,EACoFO,EAAAuD,EAAA,EAAA,CAAhF,MAAM,iDAAgD,CAAA"}