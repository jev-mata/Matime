{"version":3,"file":"UpdatePasswordForm.vue_vue_type_script_setup_true_lang-BNJIv88p.js","sources":["../../../resources/js/Pages/Profile/Partials/UpdatePasswordForm.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useForm } from '@inertiajs/vue3';\nimport ActionMessage from '@/Components/ActionMessage.vue';\nimport FormSection from '@/Components/FormSection.vue';\nimport InputError from '@/packages/ui/src/Input/InputError.vue';\nimport InputLabel from '@/packages/ui/src/Input/InputLabel.vue';\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport TextInput from '@/packages/ui/src/Input/TextInput.vue';\n\nconst passwordInput = ref<HTMLElement | null>(null);\nconst currentPasswordInput = ref<HTMLElement | null>(null);\n\nconst form = useForm({\n    current_password: '',\n    password: '',\n    password_confirmation: '',\n});\n\nconst updatePassword = () => {\n    form.put(route('user-password.update'), {\n        errorBag: 'updatePassword',\n        preserveScroll: true,\n        onSuccess: () => form.reset(),\n        onError: () => {\n            if (form.errors.password) {\n                form.reset('password', 'password_confirmation');\n                passwordInput.value?.focus();\n            }\n\n            if (form.errors.current_password) {\n                form.reset('current_password');\n                currentPasswordInput.value?.focus();\n            }\n        },\n    });\n};\n</script>\n\n<template>\n    <FormSection @submitted=\"updatePassword\">\n        <template #title> Update Password </template>\n\n        <template #description>\n            Ensure your account is using a long, random password to stay secure.\n        </template>\n\n        <template #form>\n            <div class=\"col-span-6 sm:col-span-4\">\n                <InputLabel for=\"current_password\" value=\"Current Password\" />\n                <TextInput\n                    id=\"current_password\"\n                    ref=\"currentPasswordInput\"\n                    v-model=\"form.current_password\"\n                    type=\"password\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"current-password\" />\n                <InputError\n                    :message=\"form.errors.current_password\"\n                    class=\"mt-2\" />\n            </div>\n\n            <div class=\"col-span-6 sm:col-span-4\">\n                <InputLabel for=\"password\" value=\"New Password\" />\n                <TextInput\n                    id=\"password\"\n                    ref=\"passwordInput\"\n                    v-model=\"form.password\"\n                    type=\"password\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"new-password\" />\n                <InputError :message=\"form.errors.password\" class=\"mt-2\" />\n            </div>\n\n            <div class=\"col-span-6 sm:col-span-4\">\n                <InputLabel\n                    for=\"password_confirmation\"\n                    value=\"Confirm Password\" />\n                <TextInput\n                    id=\"password_confirmation\"\n                    v-model=\"form.password_confirmation\"\n                    type=\"password\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"new-password\" />\n                <InputError\n                    :message=\"form.errors.password_confirmation\"\n                    class=\"mt-2\" />\n            </div>\n        </template>\n\n        <template #actions>\n            <ActionMessage :on=\"form.recentlySuccessful\" class=\"me-3\">\n                Saved.\n            </ActionMessage>\n\n            <PrimaryButton\n                :class=\"{ 'opacity-25': form.processing }\"\n                :disabled=\"form.processing\">\n                Save\n            </PrimaryButton>\n        </template>\n    </FormSection>\n</template>\n"],"names":["passwordInput","ref","currentPasswordInput","form","useForm","updatePassword","_a","_b","_createBlock","FormSection","_cache","_createElementVNode","_hoisted_1","_createVNode","InputLabel","TextInput","_unref","$event","InputError","_hoisted_2","_hoisted_3","ActionMessage","PrimaryButton","_normalizeClass"],"mappings":"uvBAUA,MAAMA,EAAgBC,EAAwB,IAAI,EAC5CC,EAAuBD,EAAwB,IAAI,EAEnDE,EAAOC,EAAQ,CACjB,iBAAkB,GAClB,SAAU,GACV,sBAAuB,EAAA,CAC1B,EAEKC,EAAiB,IAAM,CACzBF,EAAK,IAAI,MAAM,sBAAsB,EAAG,CACpC,SAAU,iBACV,eAAgB,GAChB,UAAW,IAAMA,EAAK,MAAA,EACtB,QAAS,IAAM,SACPA,EAAK,OAAO,WACZA,EAAK,MAAM,WAAY,uBAAuB,GAC9CG,EAAAN,EAAc,QAAd,MAAAM,EAAqB,SAGrBH,EAAK,OAAO,mBACZA,EAAK,MAAM,kBAAkB,GAC7BI,EAAAL,EAAqB,QAArB,MAAAK,EAA4B,QAChC,CACJ,CACH,CAAA,oBAKDC,EA6DcC,EAAA,CA7DA,YAAWJ,GAAc,CACxB,QAAM,IAAiBK,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAAjB,mBAAiB,CAAA,IAEvB,cAAY,IAEvBA,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAFuB,wEAEvB,CAAA,IAEW,OACP,IAYM,CAZNC,EAYM,MAZNC,EAYM,CAXFC,EAA8DC,EAAA,CAAlD,IAAI,mBAAmB,MAAM,kBAAA,GACzCD,EAMsCE,EAAA,CALlC,GAAG,2BACC,uBAAJ,IAAIb,EACK,WAAAc,EAAAb,CAAA,EAAK,iBAAL,sBAAAO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAAD,EAAAb,CAAA,EAAK,iBAAgBc,GAC9B,KAAK,WACL,MAAM,oBACN,aAAa,kBAAA,yBACjBJ,EAEmBK,EAAA,CADd,QAASF,EAAAb,CAAA,EAAK,OAAO,iBACtB,MAAM,MAAA,wBAGdQ,EAUM,MAVNQ,EAUM,CATFN,EAAkDC,EAAA,CAAtC,IAAI,WAAW,MAAM,cAAA,GACjCD,EAMkCE,EAAA,CAL9B,GAAG,mBACC,gBAAJ,IAAIf,EACK,WAAAgB,EAAAb,CAAA,EAAK,SAAL,sBAAAO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAAD,EAAAb,CAAA,EAAK,SAAQc,GACtB,KAAK,WACL,MAAM,oBACN,aAAa,cAAA,yBACjBJ,EAA2DK,EAAA,CAA9C,QAASF,EAAAb,CAAA,EAAK,OAAO,SAAU,MAAM,MAAA,wBAGtDQ,EAaM,MAbNS,EAaM,CAZFP,EAE+BC,EAAA,CAD3B,IAAI,wBACJ,MAAM,kBAAA,GACVD,EAKkCE,EAAA,CAJ9B,GAAG,wBACM,WAAAC,EAAAb,CAAA,EAAK,sBAAL,sBAAAO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAAD,EAAAb,CAAA,EAAK,sBAAqBc,GACnC,KAAK,WACL,MAAM,oBACN,aAAa,cAAA,yBACjBJ,EAEmBK,EAAA,CADd,QAASF,EAAAb,CAAA,EAAK,OAAO,sBACtB,MAAM,MAAA,0BAIP,UACP,IAEgB,CAFhBU,EAEgBQ,EAAA,CAFA,GAAIL,EAAAb,CAAA,EAAK,mBAAoB,MAAM,MAAA,aAAO,IAE1DO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAF0D,UAE1D,CAAA,0BAEAG,EAIgBS,EAAA,CAHX,MAAKC,EAAA,CAAA,aAAkBP,EAAAb,CAAA,EAAK,WAAU,EACtC,SAAUa,EAAAb,CAAA,EAAK,UAAA,aAAY,IAEhCO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAFgC,QAEhC,CAAA"}