import{Q as y,E as p,r as m,c as w,J as b}from"./app-Dzd5B06R.js";import{b as g,a as r}from"./notification-Cqm5OIAz.js";const f=y();function z(){return f.props.auth.user.id}function v(){return f.props.auth.user}function o(){return f.props.auth.user.current_team_id}function k(){var i;return(i=f.props.auth.user.all_teams.find(t=>t.id===o()))==null?void 0:i.membership.id}function C(){var i;return(i=f.props.auth.user.all_teams.find(t=>t.id===o()))==null?void 0:i.membership.role}const F=p("projects",()=>{const i=m(null),{handleApiRequestNotifications:t}=g();async function n(){const e=o();e&&(i.value=await t(()=>r.getProjects({params:{organization:e},queries:{archived:"all"}}),void 0,"Failed to fetch projects"))}async function u(e){const a=o();if(a){const c=await t(()=>r.createProject(e,{params:{organization:a}}),"Project created successfully","Failed to create project");return await n(),c.data}}async function l(e){const a=o();a&&(await t(()=>r.deleteProject(void 0,{params:{organization:a,project:e}}),"Project deleted successfully","Failed to delete project"),await n())}async function d(e,a){const c=o();c&&(await t(()=>r.updateProject(a,{params:{organization:c,project:e}}),"Project updated successfully","Failed to update project"),await n())}return{projects:w(()=>{var e;return((e=i.value)==null?void 0:e.data)||[]}),fetchProjects:n,createProject:u,deleteProject:l,updateProject:d}}),P=p("tasks",()=>{const i=m(b([])),{handleApiRequestNotifications:t}=g();async function n(){const s=o();if(s){const e=await t(()=>r.getTasks({params:{organization:s},queries:{done:"all"}}));e!=null&&e.data&&(i.value=e.data)}}async function u(s,e){const a=o();a&&(await t(()=>r.updateTask(e,{params:{task:s,organization:a}}),"Task updated successfully","Failed to update task"),await n())}async function l(s){const e=o();e&&(await t(()=>r.createTask(s,{params:{organization:e}}),"Task created successfully","Failed to create task"),await n())}async function d(s){const e=o();e&&(await t(()=>r.deleteTask(void 0,{params:{organization:e,task:s}}),"Task deleted successfully","Failed to delete task"),await n())}return{tasks:i,fetchTasks:n,updateTask:u,createTask:l,deleteTask:d}}),T=p("clients",()=>{const i=m(null),{handleApiRequestNotifications:t}=g();async function n(){const e=o();e&&(i.value=await t(()=>r.getClients({queries:{archived:"all"},params:{organization:e}}),void 0,"Failed to fetch clients"))}async function u(e){const a=o();if(a){const c=await t(()=>r.createClient(e,{params:{organization:a}}),"Client created successfully","Failed to create client");return await n(),c==null?void 0:c.data}}async function l(e,a){const c=o();c&&(await t(()=>r.updateClient(a,{params:{organization:c,client:e}}),"Client updated successfully","Failed to update client"),await n())}async function d(e){const a=o();a&&(await t(()=>r.deleteClient(void 0,{params:{organization:a,client:e}}),"Client deleted successfully","Failed to delete client"),await n())}return{clients:w(()=>{var e;return((e=i.value)==null?void 0:e.data)||[]}),fetchClients:n,createClient:u,deleteClient:d,updateClient:l}}),M=p("members",()=>{const i=m(null),{handleApiRequestNotifications:t}=g();async function n(){const s=o();s&&(i.value=await t(()=>r.getMembers({params:{organization:s}}),void 0,"Failed to fetch members"))}async function u(s){const e=o();e&&(await t(()=>r.removeMember(void 0,{params:{organization:e,member:s}}),"Member deleted successfully","Failed to delete member"),await n())}async function l(s,e){const a=o();a&&(await t(()=>r.updateMember(e,{params:{organization:a,member:s}}),"Member updated successfully","Failed to update member"),await n())}return{members:w(()=>{var s;return((s=i.value)==null?void 0:s.data)||[]}),fetchMembers:n,removeMember:u,updateMember:l}});export{F as a,P as b,k as c,M as d,C as e,z as f,o as g,v as h,T as u};
//# sourceMappingURL=useMembers-D1lZTqLC.js.map
