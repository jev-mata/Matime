{"version":3,"file":"useFocusGuards-BJPjJVKi.js","sources":["../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../../node_modules/@floating-ui/vue/dist/floating-ui.vue.mjs","../../../node_modules/reka-ui/dist/Popper/PopperRoot.js","../../../node_modules/reka-ui/dist/Popper/PopperAnchor.js","../../../node_modules/reka-ui/dist/Popper/utils.js","../../../node_modules/reka-ui/dist/shared/useSize.js","../../../node_modules/reka-ui/dist/Popper/PopperContent.js","../../../node_modules/reka-ui/dist/shared/useFocusGuards.js"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          if (!ignoreCrossAxisOverflow ||\n          // We leave the current main axis only if every placement on that axis\n          // overflows the main axis.\n          overflowsData.every(d => d.overflows[0] > 0 && getSideAxis(d.placement) === initialSideAxis)) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { arrow as arrow$1, computePosition } from '@floating-ui/dom';\nexport { autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/dom';\nimport { isNode, getNodeName } from '@floating-ui/utils/dom';\nimport { unref, computed, ref, shallowRef, watch, getCurrentScope, onScopeDispose, shallowReadonly } from 'vue-demi';\n\nfunction isComponentPublicInstance(target) {\n  return target != null && typeof target === 'object' && '$el' in target;\n}\nfunction unwrapElement(target) {\n  if (isComponentPublicInstance(target)) {\n    const element = target.$el;\n    return isNode(element) && getNodeName(element) === '#comment' ? null : element;\n  }\n  return target;\n}\n\nfunction toValue(source) {\n  return typeof source === 'function' ? source() : unref(source);\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered to the reference element.\n * @param options The arrow options.\n * @see https://floating-ui.com/docs/arrow\n */\nfunction arrow(options) {\n  return {\n    name: 'arrow',\n    options,\n    fn(args) {\n      const element = unwrapElement(toValue(options.element));\n      if (element == null) {\n        return {};\n      }\n      return arrow$1({\n        element,\n        padding: options.padding\n      }).fn(args);\n    }\n  };\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element next to a reference element when it is given a certain CSS positioning strategy.\n * @param reference The reference template ref.\n * @param floating The floating template ref.\n * @param options The floating options.\n * @see https://floating-ui.com/docs/vue\n */\nfunction useFloating(reference, floating, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const whileElementsMountedOption = options.whileElementsMounted;\n  const openOption = computed(() => {\n    var _toValue;\n    return (_toValue = toValue(options.open)) != null ? _toValue : true;\n  });\n  const middlewareOption = computed(() => toValue(options.middleware));\n  const placementOption = computed(() => {\n    var _toValue2;\n    return (_toValue2 = toValue(options.placement)) != null ? _toValue2 : 'bottom';\n  });\n  const strategyOption = computed(() => {\n    var _toValue3;\n    return (_toValue3 = toValue(options.strategy)) != null ? _toValue3 : 'absolute';\n  });\n  const transformOption = computed(() => {\n    var _toValue4;\n    return (_toValue4 = toValue(options.transform)) != null ? _toValue4 : true;\n  });\n  const referenceElement = computed(() => unwrapElement(reference.value));\n  const floatingElement = computed(() => unwrapElement(floating.value));\n  const x = ref(0);\n  const y = ref(0);\n  const strategy = ref(strategyOption.value);\n  const placement = ref(placementOption.value);\n  const middlewareData = shallowRef({});\n  const isPositioned = ref(false);\n  const floatingStyles = computed(() => {\n    const initialStyles = {\n      position: strategy.value,\n      left: '0',\n      top: '0'\n    };\n    if (!floatingElement.value) {\n      return initialStyles;\n    }\n    const xVal = roundByDPR(floatingElement.value, x.value);\n    const yVal = roundByDPR(floatingElement.value, y.value);\n    if (transformOption.value) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + xVal + \"px, \" + yVal + \"px)\",\n        ...(getDPR(floatingElement.value) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy.value,\n      left: xVal + \"px\",\n      top: yVal + \"px\"\n    };\n  });\n  let whileElementsMountedCleanup;\n  function update() {\n    if (referenceElement.value == null || floatingElement.value == null) {\n      return;\n    }\n    const open = openOption.value;\n    computePosition(referenceElement.value, floatingElement.value, {\n      middleware: middlewareOption.value,\n      placement: placementOption.value,\n      strategy: strategyOption.value\n    }).then(position => {\n      x.value = position.x;\n      y.value = position.y;\n      strategy.value = position.strategy;\n      placement.value = position.placement;\n      middlewareData.value = position.middlewareData;\n      /**\n       * The floating element's position may be recomputed while it's closed\n       * but still mounted (such as when transitioning out). To ensure\n       * `isPositioned` will be `false` initially on the next open, avoid\n       * setting it to `true` when `open === false` (must be specified).\n       */\n      isPositioned.value = open !== false;\n    });\n  }\n  function cleanup() {\n    if (typeof whileElementsMountedCleanup === 'function') {\n      whileElementsMountedCleanup();\n      whileElementsMountedCleanup = undefined;\n    }\n  }\n  function attach() {\n    cleanup();\n    if (whileElementsMountedOption === undefined) {\n      update();\n      return;\n    }\n    if (referenceElement.value != null && floatingElement.value != null) {\n      whileElementsMountedCleanup = whileElementsMountedOption(referenceElement.value, floatingElement.value, update);\n      return;\n    }\n  }\n  function reset() {\n    if (!openOption.value) {\n      isPositioned.value = false;\n    }\n  }\n  watch([middlewareOption, placementOption, strategyOption, openOption], update, {\n    flush: 'sync'\n  });\n  watch([referenceElement, floatingElement], attach, {\n    flush: 'sync'\n  });\n  watch(openOption, reset, {\n    flush: 'sync'\n  });\n  if (getCurrentScope()) {\n    onScopeDispose(cleanup);\n  }\n  return {\n    x: shallowReadonly(x),\n    y: shallowReadonly(y),\n    strategy: shallowReadonly(strategy),\n    placement: shallowReadonly(placement),\n    middlewareData: shallowReadonly(middlewareData),\n    isPositioned: shallowReadonly(isPositioned),\n    floatingStyles,\n    update\n  };\n}\n\nexport { arrow, useFloating };\n","import { defineComponent, ref, renderSlot } from 'vue';\nimport { c as createContext } from '../shared/createContext.js';\n\nconst [injectPopperRootContext, providePopperRootContext] = createContext(\"PopperRoot\");\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"PopperRoot\",\n  setup(__props) {\n    const anchor = ref();\n    providePopperRootContext({\n      anchor,\n      onAnchorChange: (element) => anchor.value = element\n    });\n    return (_ctx, _cache) => {\n      return renderSlot(_ctx.$slots, \"default\");\n    };\n  }\n});\n\nexport { _sfc_main as _, injectPopperRootContext as i };\n//# sourceMappingURL=PopperRoot.js.map\n","import { defineComponent, watchPostEffect, createBlock, openBlock, unref, withCtx, renderSlot } from 'vue';\nimport { u as useForwardExpose } from '../shared/useForwardExpose.js';\nimport { i as injectPopperRootContext } from './PopperRoot.js';\nimport { P as Primitive } from '../Primitive/Primitive.js';\n\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"PopperAnchor\",\n  props: {\n    reference: {},\n    asChild: { type: Boolean },\n    as: {}\n  },\n  setup(__props) {\n    const props = __props;\n    const { forwardRef, currentElement } = useForwardExpose();\n    const rootContext = injectPopperRootContext();\n    watchPostEffect(() => {\n      rootContext.onAnchorChange(props.reference ?? currentElement.value);\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(Primitive), {\n        ref: unref(forwardRef),\n        as: _ctx.as,\n        \"as-child\": _ctx.asChild\n      }, {\n        default: withCtx(() => [\n          renderSlot(_ctx.$slots, \"default\")\n        ]),\n        _: 3\n      }, 8, [\"as\", \"as-child\"]);\n    };\n  }\n});\n\nexport { _sfc_main as _ };\n//# sourceMappingURL=PopperAnchor.js.map\n","function isNotNull(value) {\n  return value !== null;\n}\nfunction transformOrigin(options) {\n  return {\n    name: \"transformOrigin\",\n    options,\n    fn(data) {\n      const { placement, rects, middlewareData } = data;\n      const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n      const isArrowHidden = cannotCenterArrow;\n      const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n      const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n      const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n      const noArrowAlign = { start: \"0%\", center: \"50%\", end: \"100%\" }[placedAlign];\n      const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n      const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n      let x = \"\";\n      let y = \"\";\n      if (placedSide === \"bottom\") {\n        x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n        y = `${-arrowHeight}px`;\n      } else if (placedSide === \"top\") {\n        x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n        y = `${rects.floating.height + arrowHeight}px`;\n      } else if (placedSide === \"right\") {\n        x = `${-arrowHeight}px`;\n        y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n      } else if (placedSide === \"left\") {\n        x = `${rects.floating.width + arrowHeight}px`;\n        y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n      }\n      return { data: { x, y } };\n    }\n  };\n}\nfunction getSideAndAlignFromPlacement(placement) {\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return [side, align];\n}\n\nexport { getSideAndAlignFromPlacement as g, isNotNull as i, transformOrigin as t };\n//# sourceMappingURL=utils.js.map\n","import { unrefElement } from '@vueuse/core';\nimport { ref, computed, onMounted } from 'vue';\n\nfunction useSize(element) {\n  const size = ref();\n  const width = computed(() => size.value?.width ?? 0);\n  const height = computed(() => size.value?.height ?? 0);\n  onMounted(() => {\n    const el = unrefElement(element);\n    if (el) {\n      size.value = { width: el.offsetWidth, height: el.offsetHeight };\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries))\n          return;\n        if (!entries.length)\n          return;\n        const entry = entries[0];\n        let width2;\n        let height2;\n        if (\"borderBoxSize\" in entry) {\n          const borderSizeEntry = entry.borderBoxSize;\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width2 = borderSize.inlineSize;\n          height2 = borderSize.blockSize;\n        } else {\n          width2 = el.offsetWidth;\n          height2 = el.offsetHeight;\n        }\n        size.value = { width: width2, height: height2 };\n      });\n      resizeObserver.observe(el, { box: \"border-box\" });\n      return () => resizeObserver.unobserve(el);\n    } else {\n      size.value = void 0;\n    }\n  });\n  return {\n    width,\n    height\n  };\n}\n\nexport { useSize as u };\n//# sourceMappingURL=useSize.js.map\n","import { defineComponent, mergeDefaults, ref, computed, watchPostEffect, watchEffect, createElementBlock, openBlock, normalizeStyle, unref, createVNode, mergeProps, withCtx, renderSlot } from 'vue';\nimport { offset, flip, shift, size, arrow, hide, limitShift, useFloating, autoUpdate } from '@floating-ui/vue';\nimport { computedEager } from '@vueuse/core';\nimport { i as isNotNull, t as transformOrigin, g as getSideAndAlignFromPlacement } from './utils.js';\nimport { c as createContext } from '../shared/createContext.js';\nimport { u as useForwardExpose } from '../shared/useForwardExpose.js';\nimport { u as useSize } from '../shared/useSize.js';\nimport { P as Primitive } from '../Primitive/Primitive.js';\nimport { i as injectPopperRootContext } from './PopperRoot.js';\n\nconst PopperContentPropsDefaultValue = {\n  side: \"bottom\",\n  sideOffset: 0,\n  align: \"center\",\n  alignOffset: 0,\n  arrowPadding: 0,\n  avoidCollisions: true,\n  collisionBoundary: () => [],\n  collisionPadding: 0,\n  sticky: \"partial\",\n  hideWhenDetached: false,\n  positionStrategy: \"fixed\",\n  updatePositionStrategy: \"optimized\",\n  prioritizePosition: false\n};\nconst [injectPopperContentContext, providePopperContentContext] = createContext(\"PopperContent\");\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"PopperContent\",\n  props: /* @__PURE__ */ mergeDefaults({\n    side: {},\n    sideOffset: {},\n    align: {},\n    alignOffset: {},\n    avoidCollisions: { type: Boolean },\n    collisionBoundary: {},\n    collisionPadding: {},\n    arrowPadding: {},\n    sticky: {},\n    hideWhenDetached: { type: Boolean },\n    positionStrategy: {},\n    updatePositionStrategy: {},\n    disableUpdateOnLayoutShift: { type: Boolean },\n    prioritizePosition: { type: Boolean },\n    reference: {},\n    asChild: { type: Boolean },\n    as: {}\n  }, {\n    ...PopperContentPropsDefaultValue\n  }),\n  emits: [\"placed\"],\n  setup(__props, { emit: __emit }) {\n    const props = __props;\n    const emits = __emit;\n    const rootContext = injectPopperRootContext();\n    const { forwardRef, currentElement: contentElement } = useForwardExpose();\n    const floatingRef = ref();\n    const arrow$1 = ref();\n    const { width: arrowWidth, height: arrowHeight } = useSize(arrow$1);\n    const desiredPlacement = computed(\n      () => props.side + (props.align !== \"center\" ? `-${props.align}` : \"\")\n    );\n    const collisionPadding = computed(() => {\n      return typeof props.collisionPadding === \"number\" ? props.collisionPadding : { top: 0, right: 0, bottom: 0, left: 0, ...props.collisionPadding };\n    });\n    const boundary = computed(() => {\n      return Array.isArray(props.collisionBoundary) ? props.collisionBoundary : [props.collisionBoundary];\n    });\n    const detectOverflowOptions = computed(() => {\n      return {\n        padding: collisionPadding.value,\n        boundary: boundary.value.filter(isNotNull),\n        // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n        altBoundary: boundary.value.length > 0\n      };\n    });\n    const computedMiddleware = computedEager(() => {\n      return [\n        offset({\n          mainAxis: props.sideOffset + arrowHeight.value,\n          alignmentAxis: props.alignOffset\n        }),\n        props.prioritizePosition && props.avoidCollisions && flip({\n          ...detectOverflowOptions.value\n        }),\n        props.avoidCollisions && shift({\n          mainAxis: true,\n          crossAxis: !!props.prioritizePosition,\n          limiter: props.sticky === \"partial\" ? limitShift() : void 0,\n          ...detectOverflowOptions.value\n        }),\n        !props.prioritizePosition && props.avoidCollisions && flip({\n          ...detectOverflowOptions.value\n        }),\n        size({\n          ...detectOverflowOptions.value,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty(\n              \"--reka-popper-available-width\",\n              `${availableWidth}px`\n            );\n            contentStyle.setProperty(\n              \"--reka-popper-available-height\",\n              `${availableHeight}px`\n            );\n            contentStyle.setProperty(\n              \"--reka-popper-anchor-width\",\n              `${anchorWidth}px`\n            );\n            contentStyle.setProperty(\n              \"--reka-popper-anchor-height\",\n              `${anchorHeight}px`\n            );\n          }\n        }),\n        arrow$1.value && arrow({ element: arrow$1.value, padding: props.arrowPadding }),\n        transformOrigin({\n          arrowWidth: arrowWidth.value,\n          arrowHeight: arrowHeight.value\n        }),\n        props.hideWhenDetached && hide({ strategy: \"referenceHidden\", ...detectOverflowOptions.value })\n      ];\n    });\n    const reference = computed(() => props.reference ?? rootContext.anchor.value);\n    const { floatingStyles, placement, isPositioned, middlewareData, update } = useFloating(\n      reference,\n      floatingRef,\n      {\n        strategy: props.positionStrategy,\n        placement: desiredPlacement,\n        whileElementsMounted: (...args) => {\n          const cleanup = autoUpdate(...args, {\n            layoutShift: !props.disableUpdateOnLayoutShift,\n            animationFrame: props.updatePositionStrategy === \"always\"\n          });\n          return cleanup;\n        },\n        middleware: computedMiddleware\n      }\n    );\n    const placedSide = computed(\n      () => getSideAndAlignFromPlacement(placement.value)[0]\n    );\n    const placedAlign = computed(\n      () => getSideAndAlignFromPlacement(placement.value)[1]\n    );\n    watchPostEffect(() => {\n      if (isPositioned.value)\n        emits(\"placed\");\n    });\n    const cannotCenterArrow = computed(\n      () => middlewareData.value.arrow?.centerOffset !== 0\n    );\n    const contentZIndex = ref(\"\");\n    watchEffect(() => {\n      if (contentElement.value)\n        contentZIndex.value = window.getComputedStyle(contentElement.value).zIndex;\n    });\n    const arrowX = computed(() => middlewareData.value.arrow?.x ?? 0);\n    const arrowY = computed(() => middlewareData.value.arrow?.y ?? 0);\n    providePopperContentContext({\n      placedSide,\n      onArrowChange: (element) => arrow$1.value = element,\n      arrowX,\n      arrowY,\n      shouldHideArrow: cannotCenterArrow\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"floatingRef\",\n        ref: floatingRef,\n        \"data-reka-popper-content-wrapper\": \"\",\n        style: normalizeStyle({\n          ...unref(floatingStyles),\n          transform: unref(isPositioned) ? unref(floatingStyles).transform : \"translate(0, -200%)\",\n          // keep off the page when measuring\n          minWidth: \"max-content\",\n          zIndex: contentZIndex.value,\n          [\"--reka-popper-transform-origin\"]: [\n            unref(middlewareData).transformOrigin?.x,\n            unref(middlewareData).transformOrigin?.y\n          ].join(\" \"),\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...unref(middlewareData).hide?.referenceHidden && {\n            visibility: \"hidden\",\n            pointerEvents: \"none\"\n          }\n        })\n      }, [\n        createVNode(unref(Primitive), mergeProps({ ref: unref(forwardRef) }, _ctx.$attrs, {\n          \"as-child\": props.asChild,\n          as: _ctx.as,\n          \"data-side\": placedSide.value,\n          \"data-align\": placedAlign.value,\n          style: {\n            // if the PopperContent hasn't been placed yet (not all measurements done)\n            // we prevent animations so that users's animation don't kick in too early referring wrong sides\n            animation: !unref(isPositioned) ? \"none\" : void 0\n          }\n        }), {\n          default: withCtx(() => [\n            renderSlot(_ctx.$slots, \"default\")\n          ]),\n          _: 3\n        }, 16, [\"as-child\", \"as\", \"data-side\", \"data-align\", \"style\"])\n      ], 4);\n    };\n  }\n});\n\nexport { PopperContentPropsDefaultValue as P, _sfc_main as _, injectPopperContentContext as i };\n//# sourceMappingURL=PopperContent.js.map\n","import { isClient } from '@vueuse/shared';\nimport { watchEffect } from 'vue';\n\nlet count = 0;\nfunction useFocusGuards() {\n  watchEffect((cleanupFn) => {\n    if (!isClient)\n      return;\n    const edgeGuards = document.querySelectorAll(\"[data-reka-focus-guard]\");\n    document.body.insertAdjacentElement(\n      \"afterbegin\",\n      edgeGuards[0] ?? createFocusGuard()\n    );\n    document.body.insertAdjacentElement(\n      \"beforeend\",\n      edgeGuards[1] ?? createFocusGuard()\n    );\n    count++;\n    cleanupFn(() => {\n      if (count === 1) {\n        document.querySelectorAll(\"[data-reka-focus-guard]\").forEach((node) => node.remove());\n      }\n      count--;\n    });\n  });\n}\nfunction createFocusGuard() {\n  const element = document.createElement(\"span\");\n  element.setAttribute(\"data-reka-focus-guard\", \"\");\n  element.tabIndex = 0;\n  element.style.outline = \"none\";\n  element.style.opacity = \"0\";\n  element.style.position = \"fixed\";\n  element.style.pointerEvents = \"none\";\n  return element;\n}\n\nexport { useFocusGuards as u };\n//# sourceMappingURL=useFocusGuards.js.map\n"],"names":["sides","min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","clamp","start","value","end","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","x","y","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","strategy","middleware","platform","validMiddleware","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","initialSideAxis","isBasePlacement","fallbackPlacements","hasFallbackAxisSideDirection","placements","overflow","overflows","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","d","resetPlacement","a","b","_overflowsData$filter2","currentSideAxis","acc","getSideOffsets","isAnySideFullyClipped","hide","offsets","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","_middlewareData$offse","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","_state$middlewareData","_state$middlewareData2","apply","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","hasWindow","getNodeName","node","isNode","getWindow","_node$ownerDocument","getDocumentElement","isElement","isHTMLElement","isShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","isTableElement","isTopLayer","selector","isContainingBlock","elementOrCss","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","getBoundingClientRect","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","left","top","getWindowScrollBarX","leftScroll","getHTMLOffset","documentElement","scroll","ignoreScrollbarX","htmlRect","convertOffsetParentRelativeRectToViewportRelativeRect","topLayer","isOffsetParentAnElement","offsetRect","htmlOffset","getClientRects","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","setLeftRTLScrollbarOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","getOffsetParent","svgOffsetParent","getElementRects","getOffsetParentFn","getDimensionsFn","floatingDimensions","isRTL","rectsAreEqual","observeMove","onMove","io","timeoutId","root","cleanup","_io","refresh","skip","threshold","elementRectForRootMargin","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","offset$1","shift$1","flip$1","size$1","hide$1","arrow$1","limitShift$1","mergedOptions","platformWithCache","computePosition$1","isComponentPublicInstance","target","toValue","source","unref","args","getDPR","roundByDPR","dpr","useFloating","whileElementsMountedOption","openOption","computed","_toValue","middlewareOption","placementOption","_toValue2","strategyOption","_toValue3","transformOption","_toValue4","referenceElement","floatingElement","ref","shallowRef","isPositioned","floatingStyles","initialStyles","xVal","yVal","whileElementsMountedCleanup","open","position","attach","watch","getCurrentScope","onScopeDispose","shallowReadonly","injectPopperRootContext","providePopperRootContext","createContext","_sfc_main","defineComponent","__props","anchor","_ctx","_cache","renderSlot","props","forwardRef","currentElement","useForwardExpose","rootContext","watchPostEffect","openBlock","createBlock","Primitive","withCtx","isNotNull","transformOrigin","isArrowHidden","_a","arrowWidth","arrowHeight","placedSide","placedAlign","getSideAndAlignFromPlacement","noArrowAlign","arrowXCenter","_b","arrowYCenter","_c","align","useSize","onMounted","unrefElement","entry","width2","height2","borderSizeEntry","borderSize","PopperContentPropsDefaultValue","injectPopperContentContext","providePopperContentContext","mergeDefaults","__emit","emits","contentElement","floatingRef","desiredPlacement","collisionPadding","computedMiddleware","computedEager","anchorWidth","anchorHeight","contentStyle","cannotCenterArrow","contentZIndex","watchEffect","arrowX","arrowY","createElementBlock","normalizeStyle","createVNode","mergeProps","count","useFocusGuards","cleanupFn","isClient","edgeGuards","createFocusGuard"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}