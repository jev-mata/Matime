{"version":3,"file":"TwoFactorChallenge-DpM1dmyp.js","sources":["../../../resources/js/Pages/Auth/TwoFactorChallenge.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { nextTick, ref } from 'vue';\nimport { Head, useForm } from '@inertiajs/vue3';\nimport AuthenticationCard from '@/Components/AuthenticationCard.vue';\nimport AuthenticationCardLogo from '@/Components/AuthenticationCardLogo.vue';\nimport InputError from '@/packages/ui/src/Input/InputError.vue';\nimport InputLabel from '@/packages/ui/src/Input/InputLabel.vue';\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport TextInput from '@/packages/ui/src/Input/TextInput.vue';\n\nconst recovery = ref(false);\n\nconst form = useForm({\n    code: '',\n    recovery_code: '',\n});\n\nconst recoveryCodeInput = ref<HTMLInputElement | null>(null);\nconst codeInput = ref<HTMLInputElement | null>(null);\n\nconst toggleRecovery = async () => {\n    recovery.value = !recovery.value;\n\n    await nextTick();\n\n    if (recovery.value) {\n        recoveryCodeInput.value?.focus();\n        form.code = '';\n    } else {\n        codeInput.value?.focus();\n        form.recovery_code = '';\n    }\n};\n\nconst submit = () => {\n    form.post(route('two-factor.login'));\n};\n</script>\n\n<template>\n    <Head title=\"Two-factor Confirmation\" />\n\n    <AuthenticationCard>\n        <template #logo>\n            <AuthenticationCardLogo />\n        </template>\n\n        <div class=\"mb-4 text-sm text-text-secondary\">\n            <template v-if=\"!recovery\">\n                Please confirm access to your account by entering the\n                authentication code provided by your authenticator application.\n            </template>\n\n            <template v-else>\n                Please confirm access to your account by entering one of your\n                emergency recovery codes.\n            </template>\n        </div>\n\n        <form @submit.prevent=\"submit\">\n            <div v-if=\"!recovery\">\n                <InputLabel for=\"code\" value=\"Code\" />\n                <TextInput\n                    id=\"code\"\n                    ref=\"codeInput\"\n                    v-model=\"form.code\"\n                    type=\"text\"\n                    inputmode=\"numeric\"\n                    class=\"mt-1 block w-full\"\n                    autofocus\n                    autocomplete=\"one-time-code\" />\n                <InputError class=\"mt-2\" :message=\"form.errors.code\" />\n            </div>\n\n            <div v-else>\n                <InputLabel for=\"recovery_code\" value=\"Recovery Code\" />\n                <TextInput\n                    id=\"recovery_code\"\n                    ref=\"recoveryCodeInput\"\n                    v-model=\"form.recovery_code\"\n                    type=\"text\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"one-time-code\" />\n                <InputError class=\"mt-2\" :message=\"form.errors.recovery_code\" />\n            </div>\n\n            <div class=\"flex items-center justify-end mt-4\">\n                <button\n                    type=\"button\"\n                    class=\"text-sm text-text-secondary hover:text-text-primary underline cursor-pointer\"\n                    @click.prevent=\"toggleRecovery\">\n                    <template v-if=\"!recovery\"> Use a recovery code</template>\n\n                    <template v-else> Use an authentication code</template>\n                </button>\n\n                <PrimaryButton\n                    class=\"ms-4\"\n                    :class=\"{ 'opacity-25': form.processing }\"\n                    :disabled=\"form.processing\">\n                    Log in\n                </PrimaryButton>\n            </div>\n        </form>\n    </AuthenticationCard>\n</template>\n"],"names":["recovery","ref","form","useForm","recoveryCodeInput","codeInput","toggleRecovery","nextTick","_a","_b","submit","_createVNode","_unref","Head","AuthenticationCard","AuthenticationCardLogo","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_hoisted_3","InputLabel","TextInput","_cache","$event","InputError","_hoisted_2","_hoisted_4","PrimaryButton","_normalizeClass"],"mappings":"i8BAUA,MAAMA,EAAWC,EAAI,EAAK,EAEpBC,EAAOC,EAAQ,CACjB,KAAM,GACN,cAAe,EAAA,CAClB,EAEKC,EAAoBH,EAA6B,IAAI,EACrDI,EAAYJ,EAA6B,IAAI,EAE7CK,EAAiB,SAAY,SAC/BN,EAAS,MAAQ,CAACA,EAAS,MAE3B,MAAMO,EAAA,EAEFP,EAAS,QACTQ,EAAAJ,EAAkB,QAAlB,MAAAI,EAAyB,QACzBN,EAAK,KAAO,MAEZO,EAAAJ,EAAU,QAAV,MAAAI,EAAiB,QACjBP,EAAK,cAAgB,GACzB,EAGEQ,EAAS,IAAM,CACjBR,EAAK,KAAK,MAAM,kBAAkB,CAAC,CAAA,8BAKnCS,EAAwCC,EAAAC,CAAA,EAAA,CAAlC,MAAM,0BAAyB,EAErCF,EA8DqBG,EAAA,KAAA,CA7DN,OACP,IAA0B,CAA1BH,EAA0BI,CAAA,CAAA,aAG9B,IAUM,CAVNC,EAUM,MAVNC,EAUM,CATejB,EAAA,WAKjBkB,EAGWC,EAAA,CAAA,IAAA,GAAA,GAHM,2FAGjB,CAAA,YARAD,EAGWC,EAAA,CAAA,IAAA,GAAA,GAHgB,yHAG3B,CAAA,SAQJH,EA4CO,OAAA,CA5CA,WAAgBN,EAAM,CAAA,SAAA,CAAA,CAAA,GACbV,EAAA,WAcZkB,EAUM,MAAAE,EAAA,CATFT,EAAwDU,EAAA,CAA5C,IAAI,gBAAgB,MAAM,eAAA,GACtCV,EAMmCW,EAAA,CAL/B,GAAG,wBACC,oBAAJ,IAAIlB,EACK,WAAAQ,EAAAV,CAAA,EAAK,cAAL,sBAAAqB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAZ,EAAAV,CAAA,EAAK,cAAasB,GAC3B,KAAK,OACL,MAAM,oBACN,aAAa,eAAA,yBACjBb,EAAgEc,EAAA,CAApD,MAAM,OAAQ,QAASb,EAAAV,CAAA,EAAK,OAAO,aAAA,8BAvBnDgB,EAYM,MAAAQ,EAAA,CAXFf,EAAsCU,EAAA,CAA1B,IAAI,OAAO,MAAM,MAAA,GAC7BV,EAQmCW,EAAA,CAP/B,GAAG,eACC,YAAJ,IAAIjB,EACK,WAAAO,EAAAV,CAAA,EAAK,KAAL,sBAAAqB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAZ,EAAAV,CAAA,EAAK,KAAIsB,GAClB,KAAK,OACL,UAAU,UACV,MAAM,oBACN,UAAA,GACA,aAAa,eAAA,yBACjBb,EAAuDc,EAAA,CAA3C,MAAM,OAAQ,QAASb,EAAAV,CAAA,EAAK,OAAO,IAAA,yBAenDc,EAgBM,MAhBNW,EAgBM,CAfFX,EAOS,SAAA,CANL,KAAK,SACL,MAAM,+EACL,UAAeV,EAAc,CAAA,SAAA,CAAA,CAAA,GACbN,EAAA,WAEjBkB,EAAuDC,EAAA,CAAA,IAAA,GAAA,GAAtC,6BAA2B,CAAA,YAF5CD,EAA0DC,EAAA,CAAA,IAAA,GAAA,GAA/B,sBAAoB,CAAA,SAKnDR,EAKgBiB,EAAA,CAJZ,MAAKC,EAAA,CAAC,OAAM,CAAA,aACYjB,EAAAV,CAAA,EAAK,UAAA,CAAU,CAAA,EACtC,SAAUU,EAAAV,CAAA,EAAK,UAAA,aAAY,IAEhCqB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAFgC,UAEhC,CAAA"}