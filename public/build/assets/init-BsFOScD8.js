import{g as o,c as T,f as q,a as j,b as k,d as A,u as L}from"./useMembers-fKrmzvmk.js";import{E as I,r as v,J as D,c as N}from"./app-DUID27fb.js";import{b as _,a as c,u as Y}from"./notification-cXlbw5Vr.js";import{d as g,u as x}from"./utc-CJhWvcZK.js";import{h as P}from"./index-D03bkDOQ.js";import{d as Q,z as V}from"./permissions-BsGx_A78.js";const J=I("tags",()=>{const t=v([]),{handleApiRequestNotifications:l}=_();async function u(){const r=o();if(r){const s=await l(()=>c.getTags({params:{organization:r}}),void 0,"Failed to fetch tags");s!=null&&s.data&&(t.value=s.data)}else throw new Error("Failed to fetch current tags because organization ID is missing.")}async function m(r){const s=o();s&&(await l(()=>c.deleteTag(void 0,{params:{organization:s,tag:r}}),"Tag deleted successfully","Failed to delete tag"),await u())}async function f(r){const s=o();if(s){const d=await l(()=>c.createTag({name:r},{params:{organization:s}}),"Tag created successfully","Failed to create tag");if(d!=null&&d.data)return t.value.unshift(d.data),d.data}else throw new Error("Failed to create tag because organization ID is missing.")}return{tags:t,fetchTags:u,createTag:f,deleteTag:m}}),M=I("timeEntries",()=>{const t=v(D([])),l=v(!1),{handleApiRequestNotifications:u}=_(),m=Y();async function f(i={only_full_dates:"true",member_id:T()}){const a=o();if(a){const e=await u(()=>c.getTimeEntries({params:{organization:a},queries:i}),void 0,"Failed to fetch time entries");if(e!=null&&e.data){const n=e.data.filter(y=>!t.value.find(p=>p.id===y.id));t.value=[...n,...t.value]}}}async function r(i={only_full_dates:"true",member_id:T()}){const a=o();if(a){const e=await u(()=>c.getTimeEntries({params:{organization:a},queries:i}),void 0,"Failed to fetch time entries");e!=null&&e.data&&(t.value=e.data)}}async function s(){const i=o();if(i){const a=t.value[t.value.length-1];g(a.start).utc().format("YYYY-MM-DD");const e=await u(()=>c.getTimeEntries({params:{organization:i},queries:{only_full_dates:"true",member_id:T(),end:g(a.start).utc().format()}}),void 0,"Failed to fetch time entries");e!=null&&e.data&&e.data.length>0?t.value=t.value.concat(e.data):l.value=!0}}async function d(i,a){const e=o();e&&await u(()=>c.updateMultipleTimeEntries({ids:i,changes:a},{params:{organization:e}}),"Time entries updated successfully","Failed to update time entries")}async function h(i){const a=o();if(a){const e=await u(()=>c.updateTimeEntry(i,{params:{organization:a,timeEntry:i.id}}),"Time entry updated successfully","Failed to update time entry");t.value=t.value.map(n=>n.id===i.id?e.data:n),m.invalidateQueries({queryKey:["timeEntry"]})}await r()}async function w(i){const a=o(),e=T();if(a&&e!==void 0){const n={...i,member_id:e};await u(()=>c.createTimeEntry(n,{params:{organization:a}}),"Time entry created successfully","Failed to create time entry"),await r()}}async function z(i){const a=o();a&&(await u(()=>c.deleteTimeEntry(void 0,{params:{organization:a,timeEntry:i}}),"Time entry deleted successfully","Failed to delete time entry"),await r())}async function b(i){const a=o(),e=i.map(n=>n.id);a&&(await u(()=>c.deleteTimeEntries(void 0,{queries:{ids:e},params:{organization:a}}),"Time entries deleted successfully","Failed to delete time entries"),await r())}return{timeEntries:t,fetchTimeEntries:r,updateTimeEntry:h,createTimeEntry:w,deleteTimeEntry:z,fetchMoreTimeEntries:s,allTimeEntriesLoaded:l,updateTimeEntries:d,deleteTimeEntries:b,patchTimeEntries:f}});g.extend(x);const E={id:"",description:"",user_id:"",start:"",end:null,duration:null,task_id:null,project_id:null,tags:[],billable:!1,organization_id:""},K=I("currentTimeEntry",()=>{const t=v(D(E)),{handleApiRequestNotifications:l}=_();P("solidtime/current-time-entry",t,{deep:!0});function u(){t.value={...E}}const m=v(null),f=v(null);function r(){s(),m.value=g().utc(),f.value=setInterval(()=>{m.value=g().utc()},1e3)}function s(){f.value!==null&&clearInterval(f.value)}async function d(){if(o())try{const e=await c.getMyActiveTimeEntry({});e!=null&&e.data&&(e.data?(t.value=e.data,t.value.start!==""&&t.value.end===null&&r()):t.value={...E})}catch{t.value={...E}}else throw new Error("Failed to fetch current time entry because organization ID is missing.")}async function h(){const a=o(),e=T();if(a&&e){const n=t.value.start!==""?t.value.start:g().utc().format(),y=await l(()=>{var p,F,S,C;return c.createTimeEntry({member_id:e,start:n,description:(p=t.value)==null?void 0:p.description,project_id:(F=t.value)==null?void 0:F.project_id,task_id:(S=t.value)==null?void 0:S.task_id,billable:t.value.billable,tags:(C=t.value)==null?void 0:C.tags},{params:{organization:a}})},"Timer started!");y!=null&&y.data&&(t.value=y.data)}else throw new Error("Failed to fetch current time entry because organization ID is missing.")}async function w(){const a=q(),e=o();if(e){const n=g().utc().format();await l(()=>c.updateTimeEntry({user_id:a,start:t.value.start,end:n},{params:{organization:e,timeEntry:t.value.id}}),"Timer stopped!"),u()}else throw new Error("Failed to stop current timer because organization ID is missing.")}async function z(){const a=q(),e=o();if(e){const n=await l(()=>c.updateTimeEntry({description:t.value.description,user_id:a,project_id:t.value.project_id,task_id:t.value.task_id,start:t.value.start,billable:t.value.billable,end:null,tags:t.value.tags},{params:{organization:e,timeEntry:t.value.id}}),"Time entry updated!");n!=null&&n.data&&(t.value=n.data)}else throw new Error("Failed to fetch current time entry because organization ID is missing.")}const b=N(()=>t.value?t.value.start!==""&&t.value.start!==null&&t.value.end===null:!1);async function i(a){a?(r(),await h()):(s(),await w()),M().fetchTimeEntries()}return{currentTimeEntry:t,fetchCurrentTimeEntry:d,updateTimer:z,isActive:b,startLiveTimer:r,stopLiveTimer:s,now:m,setActiveState:i}});function X(){O()}function O(){j().fetchProjects(),k().fetchTasks(),J().fetchTags(),K().fetchCurrentTimeEntry(),M().patchTimeEntries(),Q()&&A().fetchMembers(),V()&&L().fetchClients()}export{J as a,M as b,X as i,O as r,K as u};
//# sourceMappingURL=init-BsFOScD8.js.map
