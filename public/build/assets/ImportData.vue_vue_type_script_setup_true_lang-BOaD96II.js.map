{"version":3,"file":"ImportData.vue_vue_type_script_setup_true_lang-BOaD96II.js","sources":["../../../node_modules/@heroicons/vue/24/outline/esm/ArrowDownOnSquareIcon.js","../../../node_modules/@heroicons/vue/24/solid/esm/DocumentIcon.js","../../../resources/js/Pages/Teams/Partials/ImportData.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M9 8.25H7.5a2.25 2.25 0 0 0-2.25 2.25v9a2.25 2.25 0 0 0 2.25 2.25h9a2.25 2.25 0 0 0 2.25-2.25v-9a2.25 2.25 0 0 0-2.25-2.25H15M9 12l3 3m0 0 3-3m-3 3V2.25\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", { d: \"M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0 0 16.5 9h-1.875a1.875 1.875 0 0 1-1.875-1.875V5.25A3.75 3.75 0 0 0 9 1.5H5.625Z\" }),\n    _createElementVNode(\"path\", { d: \"M12.971 1.816A5.23 5.23 0 0 1 14.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 0 1 3.434 1.279 9.768 9.768 0 0 0-6.963-6.963Z\" })\n  ]))\n}","<script setup lang=\"ts\">\nimport PrimaryButton from '@/packages/ui/src/Buttons/PrimaryButton.vue';\nimport { computed, onMounted, ref } from 'vue';\nimport { useNotificationsStore } from '@/utils/notification';\nimport { api } from '@/packages/api/src';\nimport InputLabel from '@/packages/ui/src/Input/InputLabel.vue';\nimport { DocumentIcon } from '@heroicons/vue/24/solid';\nimport {\n    ArrowDownOnSquareIcon,\n    InformationCircleIcon,\n} from '@heroicons/vue/24/outline';\n\nimport { getCurrentOrganizationId } from '@/utils/useUser';\nimport type { ImportReport, ImportType } from '@/packages/api/src';\nimport DialogModal from '@/packages/ui/src/DialogModal.vue';\nimport SecondaryButton from '@/packages/ui/src/Buttons/SecondaryButton.vue';\nimport { initializeStores } from '@/utils/init';\nimport { CardTitle } from '@/packages/ui/src';\nimport Card from '@/Components/Common/Card.vue';\n\nconst importTypeOptions = ref<ImportType[]>([]);\n\nconst { addNotification } = useNotificationsStore();\n\nconst loading = ref(false);\n\nonMounted(async () => {\n    const organizationId = getCurrentOrganizationId();\n    if (organizationId) {\n        importTypeOptions.value = (\n            await api.getImporters({\n                params: {\n                    organization: organizationId,\n                },\n            })\n        ).data;\n    }\n});\n\nconst reportResult = ref<ImportReport | null>();\nconst files = ref<FileList | null>(null);\n\nasync function importData() {\n    if (importType.value === null) {\n        addNotification('error', 'Please select the import type');\n        return;\n    }\n    if (files.value?.length !== 1) {\n        addNotification(\n            'error',\n            'Please select the CSV or ZIP file that you want to import'\n        );\n        return;\n    }\n    const rawBase64String = await toBase64(files.value[0]);\n    const base64String = rawBase64String\n        .split(';')[1]\n        .replace('base64,', '') as string;\n    const organizationId = getCurrentOrganizationId();\n    if (organizationId !== null) {\n        const { handleApiRequestNotifications } = useNotificationsStore();\n        loading.value = true;\n        try {\n            reportResult.value = await handleApiRequestNotifications(() => {\n                if (importType.value) {\n                    return api.importData(\n                        {\n                            type: importType.value.key,\n                            data: base64String,\n                        },\n                        {\n                            params: {\n                                organization: organizationId,\n                            },\n                        }\n                    );\n                }\n                return new Promise((resolve, reject) => {\n                    reject('Import type is null');\n                });\n            });\n            initializeStores();\n            if (reportResult.value) {\n                showResultModal.value = true;\n            }\n        } finally {\n            loading.value = false;\n        }\n    }\n}\n\nconst importFile = ref<HTMLInputElement | null>();\n\nfunction toBase64(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            if (reader.result instanceof ArrayBuffer) {\n                const decoder = new TextDecoder();\n                const str = decoder.decode(reader.result);\n                return reject(str);\n            } else if (reader.result) {\n                resolve(reader.result);\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\nfunction updateFiles() {\n    files.value = importFile.value?.files ?? null;\n}\n\nconst currentImporterDescription = computed(() => {\n    if (importType.value === null) {\n        return '';\n    }\n    return importType.value.description;\n});\n\nconst filenames = computed(() => {\n    return files.value?.item(0)?.name ?? 'Import File selected';\n});\n\nconst importType = ref<ImportType | null>(null);\n\nconst showResultModal = ref(false);\n</script>\n\n<template>\n    <DialogModal\n        closeable\n        :show=\"showResultModal\"\n        @close=\"showResultModal = false\">\n        <template #title>Import Result</template>\n        <template #content>\n            <div class=\"pb-6\">\n                The import was successful! Here is an overview of the imported\n                data:\n            </div>\n\n            <div\n                class=\"py-2.5 px-3 border-t border-t-card-background-separator\">\n                <span class=\"text-text-primary font-semibold\">Clients created:</span>\n                {{ reportResult?.report.clients.created }}\n            </div>\n            <div\n                class=\"py-2.5 px-3 border-t border-t-card-background-separator\">\n                <span class=\"text-text-primary font-semibold\">Projects created:</span>\n                {{ reportResult?.report.projects.created }}\n            </div>\n            <div\n                class=\"py-2.5 px-3 border-t border-t-card-background-separator\">\n                <span class=\"text-text-primary font-semibold\">Tasks created:</span>\n                {{ reportResult?.report.tasks.created }}\n            </div>\n            <div\n                class=\"py-2.5 px-3 border-t border-t-card-background-separator\">\n                <span class=\"text-text-primary font-semibold\"\n                    >Time entries created:</span\n                >\n                {{ reportResult?.report.time_entries.created }}\n            </div>\n        </template>\n        <template #footer>\n            <SecondaryButton @click=\"showResultModal = false\">\n                Close\n            </SecondaryButton>\n        </template>\n    </DialogModal>\n    <div>\n        <CardTitle\n            title=\"Import Data\"\n            :icon=\"ArrowDownOnSquareIcon\"></CardTitle>\n        <Card class=\"mb-3\">\n            <div class=\"py-2 px-3 sm:px-4 text-sm flex items-center space-x-3\">\n                <InformationCircleIcon\n                    class=\"h-5 min-w-0 w-5 text-bg-tertiary\" />\n                <p class=\"flex-1\">\n                    Import existing data from Toggl, Clockify or a different\n                    solidtime instance. Please select the type of data you want\n                    to import and follow the instructions.\n                </p>\n            </div>\n        </Card>\n\n        <Card>\n            <div\n                class=\"px-4 py-5 sm:px-5\">\n                <div>\n                    <InputLabel for=\"importType\" value=\"Import Type\" />\n                    <select\n                        id=\"importType\"\n                        v-model=\"importType\"\n                        name=\"importType\"\n                        class=\"mt-1 block w-full border-input-border bg-input-background text-text-primary focus:border-input-border-active rounded-md shadow-sm\">\n                        <option :value=\"null\" selected disabled>\n                            Select an import type to get instructions...\n                        </option>\n                        <option\n                            v-for=\"importTypeOption in importTypeOptions\"\n                            :key=\"importTypeOption.key\"\n                            :value=\"importTypeOption\">\n                            {{ importTypeOption.name }}\n                        </option>\n                    </select>\n                    <div\n                        v-if=\"currentImporterDescription\"\n                        class=\"py-3 text-text-primary\">\n                        <div class=\"font-semibold text-text-secondary py-1\">\n                            Instructions:\n                        </div>\n                        <div\n                            class=\"max-w-2xl\"\n                            v-html=\"currentImporterDescription\"></div>\n                    </div>\n                </div>\n\n                <div\n                    class=\"mt-2 flex justify-center rounded-lg border border-dashed border-border-primary px-6 py-10\">\n                    <div class=\"text-center\">\n                        <DocumentIcon\n                            class=\"mx-auto h-8 w-8 text-text-secondary\"\n                            aria-hidden=\"true\" />\n\n                        <div class=\"mt-4 flex text-sm leading-6 text-text-secondary\">\n                            <label\n                                for=\"file-upload\"\n                                class=\"relative cursor-pointer rounded-md font-semibold text-text-primary focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 focus-within:ring-offset-gray-900 hover:text-indigo-500\">\n                                <span v-if=\"files\">{{ filenames }}</span>\n                                <span v-else\n                                    >Upload a Toggl/Clockify Export</span\n                                >\n                                <input\n                                    id=\"file-upload\"\n                                    ref=\"importFile\"\n                                    name=\"file-upload\"\n                                    type=\"file\"\n                                    class=\"sr-only\"\n                                    @change=\"updateFiles\" />\n                            </label>\n                        </div>\n                        <p class=\"text-xs leading-5 text-text-secondary\">\n                            CSV and ZIP are supported\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <div\n                class=\"flex items-center justify-end px-4 py-3 bg-card-background border-t border-card-background-separator text-end sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md\">\n                <PrimaryButton :loading @click=\"importData\"\n                    >Import Data\n                </PrimaryButton>\n            </div>\n        </Card>\n    </div>\n</template>\n"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","importTypeOptions","ref","addNotification","useNotificationsStore","loading","onMounted","organizationId","getCurrentOrganizationId","api","reportResult","files","importData","importType","_a","base64String","toBase64","handleApiRequestNotifications","resolve","reject","initializeStores","showResultModal","importFile","file","reader","str","updateFiles","currentImporterDescription","computed","filenames","_b","_createVNode","DialogModal","_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_c","_hoisted_4","_d","SecondaryButton","_unref","CardTitle","ArrowDownOnSquareIcon","Card","_hoisted_5","InformationCircleIcon","_hoisted_6","InputLabel","$event","_Fragment","_renderList","importTypeOption","_toDisplayString","_hoisted_7","_hoisted_8","_hoisted_10","_hoisted_11","DocumentIcon","_hoisted_12","_hoisted_13","_hoisted_16","PrimaryButton"],"mappings":"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","x_google_ignoreList":[0,1]}